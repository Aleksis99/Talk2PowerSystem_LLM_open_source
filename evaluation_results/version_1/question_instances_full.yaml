- description: A graph pattern which lists all values for line limited by parameters
    for none and by filter properties none.
  filters: []
  name: List line by parameters none and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters: []
  paraphrases:
  - What are the lines in the system?
  - List all lines.
  - Provide all lines in the dataset.
  - Which entities are classified as lines?
  - Can you list the lines available in the system?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:0f789428-2713-f747-9a0c-2794752e9055"}}, {"line":
          {"type": "uri", "value": "urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159"}},
          {"line": {"type": "uri", "value": "urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65"}},
          {"line": {"type": "uri", "value": "urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568"}},
          {"line": {"type": "uri", "value": "urn:uuid:ec7fe146-024b-b94f-a850-7770b8bbe5b6"}},
          {"line": {"type": "uri", "value": "urn:uuid:416644bd-4033-9346-b73a-888189030d58"}},
          {"line": {"type": "uri", "value": "urn:uuid:1a2fa6e6-f211-fe44-8bbf-a5ac1b97e5fc"}},
          {"line": {"type": "uri", "value": "urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc"}},
          {"line": {"type": "uri", "value": "urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1"}},
          {"line": {"type": "uri", "value": "urn:uuid:026c0a0d-083f-0e40-b0c5-ff466be4ac34"}},
          {"line": {"type": "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}},
          {"line": {"type": "uri", "value": "urn:uuid:e0da7c50-49a5-d94d-bb37-a41195c9a18e"}},
          {"line": {"type": "uri", "value": "urn:uuid:c30c287e-b54f-b542-a328-d523d298efee"}},
          {"line": {"type": "uri", "value": "urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b"}},
          {"line": {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}},
          {"line": {"type": "uri", "value": "urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516"}},
          {"line": {"type": "uri", "value": "urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:174636f9-3007-f447-b84a-67a7bed47d90"}},
          {"line": {"type": "uri", "value": "urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771"}},
          {"line": {"type": "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}},
          {"line": {"type": "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}},
          {"line": {"type": "uri", "value": "urn:uuid:ff3505b4-ebd4-164f-940a-339566d09ed7"}},
          {"line": {"type": "uri", "value": "urn:uuid:a93b83d7-8a39-ef48-8c29-36de1ac0eaf5"}},
          {"line": {"type": "uri", "value": "urn:uuid:3fb607c1-4813-c849-a401-b4a02da4c0c4"}},
          {"line": {"type": "uri", "value": "urn:uuid:0fe64e6a-4952-d84a-a4e5-08af6fbce229"}},
          {"line": {"type": "uri", "value": "urn:uuid:da2bff0f-480e-a844-af79-d2e7550e8b7c"}},
          {"line": {"type": "uri", "value": "urn:uuid:4d9d05e8-d8b0-2847-a18b-55219605945e"}},
          {"line": {"type": "uri", "value": "urn:uuid:181da395-2007-6542-b60a-70968bf2fa38"}},
          {"line": {"type": "uri", "value": "urn:uuid:c6f09cba-a293-a84c-bafe-4f6edb362801"}},
          {"line": {"type": "uri", "value": "urn:uuid:28e8bca7-a94f-cc45-9b85-7c872de68a17"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}},
          {"line": {"type": "uri", "value": "urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741"}},
          {"line": {"type": "uri", "value": "urn:uuid:9595d4f7-2fa6-1f40-a741-7ae636b831ae"}},
          {"line": {"type": "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:fd79db98-7494-8348-8442-0400e115ef44"}},
          {"line": {"type": "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}},
          {"line": {"type": "uri", "value": "urn:uuid:6d5c844f-cbe3-ab4f-88cf-8e178e10dfe2"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}},
          {"line": {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}},
          {"line": {"type": "uri", "value": "urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e"}},
          {"line": {"type": "uri", "value": "urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b"}},
          {"line": {"type": "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}},
          {"line": {"type": "uri", "value": "urn:uuid:d52a3445-d70b-1144-827f-f4d6e1412fb4"}},
          {"line": {"type": "uri", "value": "urn:uuid:7ddc4e21-814d-4b4b-9de2-14bc98cbb99f"}},
          {"line": {"type": "uri", "value": "urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c"}},
          {"line": {"type": "uri", "value": "urn:uuid:c1670524-00d4-a649-a22e-51c9ea238f8a"}},
          {"line": {"type": "uri", "value": "urn:uuid:26143bb2-a542-8544-9503-0315356e3aa6"}},
          {"line": {"type": "uri", "value": "urn:uuid:336d1458-d916-1441-8e86-89ce3de43223"}},
          {"line": {"type": "uri", "value": "urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}},
          {"line": {"type": "uri", "value": "urn:uuid:704f0834-3cea-b640-b4b8-45a457ea7588"}},
          {"line": {"type": "uri", "value": "urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6"}},
          {"line": {"type": "uri", "value": "urn:uuid:c46c1cab-bf10-ba48-85c9-7983dc83cac4"}},
          {"line": {"type": "uri", "value": "urn:uuid:4b85da4e-97d2-304a-b902-68cf587c2488"}},
          {"line": {"type": "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}},
          {"line": {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:02b33ebb-c87f-4b48-89aa-b6b1421b62a4"}},
          {"line": {"type": "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}},
          {"line": {"type": "uri", "value": "urn:uuid:1cbc2362-28fc-7845-81aa-058185329c2a"}},
          {"line": {"type": "uri", "value": "urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}},
          {"line": {"type": "uri", "value": "urn:uuid:163037f6-cf93-054e-8a6d-3f58de83b6a3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_e827a858934ac69da44d470b00e38a1b
    nl_question: Can you list the lines available in the system?
    parameter_bindings: {}
  sparql_template: ?line a cim:Line .
  template_id: template_list_1468a81d04de8b22fd27ec706d9aa902
- description: A graph pattern which lists all values for line limited by parameters
    for subgeographicalregion (https://cim.ucaiug.io/ns#Line.Region) and by filter
    properties none.
  filters: []
  name: List line by parameters subgeographicalregion and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Line.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  paraphrases:
  - What lines are in $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - List all the lines that belong to the sub-geographical region $ObjectIdentity(0,
    cim:SubGeographicalRegion).
  - Which lines are contained in $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - Identify the lines associated with the sub-geographical region $ObjectIdentity(0,
    cim:SubGeographicalRegion).
  - Give me all lines in the region $ObjectIdentity(0, cim:SubGeographicalRegion).
  questions:
  - expected_steps:
    - - args:
          query: FI1 SGR
        name: iri_discovery
        output: urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:1a2fa6e6-f211-fe44-8bbf-a5ac1b97e5fc"}}, {"line":
          {"type": "uri", "value": "urn:uuid:c30c287e-b54f-b542-a328-d523d298efee"}},
          {"line": {"type": "uri", "value": "urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b"}},
          {"line": {"type": "uri", "value": "urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c"}},
          {"line": {"type": "uri", "value": "urn:uuid:704f0834-3cea-b640-b4b8-45a457ea7588"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_7fc772806ce53898947ed86f45c85c79
    nl_question: Give me all lines in the region FI1 SGR.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769699-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:da2bff0f-480e-a844-af79-d2e7550e8b7c"}}, {"line":
          {"type": "uri", "value": "urn:uuid:c1670524-00d4-a649-a22e-51c9ea238f8a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_f90ec569cb5d534e2cce77963d50026b
    nl_question: Which lines are contained in f1769699-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695cd-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771"}}, {"line":
          {"type": "uri", "value": "urn:uuid:6d5c844f-cbe3-ab4f-88cf-8e178e10dfe2"}},
          {"line": {"type": "uri", "value": "urn:uuid:26143bb2-a542-8544-9503-0315356e3aa6"}},
          {"line": {"type": "uri", "value": "urn:uuid:c46c1cab-bf10-ba48-85c9-7983dc83cac4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_70eb19d882bb93fa3d3a67905efc270a
    nl_question: Which lines are contained in f17695cd-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696cf
        name: iri_discovery
        output: urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741"}}, {"line":
          {"type": "uri", "value": "urn:uuid:4b85da4e-97d2-304a-b902-68cf587c2488"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_a0b393619bbe9010ab42bb4c55f90302
    nl_question: List all the lines that belong to the sub-geographical region f17696cf.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176965f
        name: iri_discovery
        output: urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}, {"line":
          {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}},
          {"line": {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}},
          {"line": {"type": "uri", "value": "urn:uuid:7ddc4e21-814d-4b4b-9de2-14bc98cbb99f"}},
          {"line": {"type": "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_452805cbf6f7584ba3b90cef27c95990
    nl_question: Which lines are contained in f176965f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cim:Line.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)} .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .'
  template_id: template_list_7573dcbd699245b54aa0458e3677f40a
- description: A graph pattern which lists all values for line limited by parameters
    for aclinesegment (https://cim.ucaiug.io/rules#hasPart) and by filter properties
    none.
  filters: []
  name: List line by parameters aclinesegment and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which line contains the AC line segment $ObjectIdentity(0, cim:ACLineSegment)?
  - To which line does the AC line segment $ObjectIdentity(0, cim:ACLineSegment) belong?
  - Identify the line associated with the AC line segment $ObjectIdentity(0, cim:ACLineSegment).
  - What is the line that includes the AC line segment $ObjectIdentity(0, cim:ACLineSegment)?
  - Find the line that contains the AC line segment $ObjectIdentity(0, cim:ACLineSegment).
  questions:
  - expected_steps:
    - - args:
          query: f1769a64
        name: iri_discovery
        output: urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c6f09cba-a293-a84c-bafe-4f6edb362801"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_7c72cc8589621ae336674c75cc9136de
    nl_question: What is the line that includes the AC line segment f1769a64?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 300KRISTIAN-ARENDAL
        name: iri_discovery
        output: urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_57fef47e7f0ad5b6e397ea8c3b39ad7c
    nl_question: What is the line that includes the AC line segment 300KRISTIAN-ARENDAL?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d28-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d28-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769d28-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d28-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:1a2fa6e6-f211-fe44-8bbf-a5ac1b97e5fc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_441a5b52a04c267ff396b147ce75faf0
    nl_question: What is the line that includes the AC line segment f1769d28-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d28-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769b24
        name: iri_discovery
        output: urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_2ecedb9de064934c53313d9233ed8f5f
    nl_question: Identify the line associated with the AC line segment f1769b24.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420HELSINKI-ESTLINK
        name: iri_discovery
        output: urn:uuid:f1769d34-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769d34-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d34-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_063b52964823e7a81a051cab66463c96
    nl_question: Identify the line associated with the AC line segment 420HELSINKI-ESTLINK.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d34-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cimr:hasPart {$ObjectIdentity(0, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_8a58e9784002fbcddcc814ddd08cfd2a
- description: A graph pattern which lists all values for line limited by parameters
    for aclinesegment (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List line by parameters aclinesegment and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which line contains the AC line segment $ObjectIdentity(0, cim:ACLineSegment)
    as part of its structure?
  - Identify the line that has $ObjectIdentity(0, cim:ACLineSegment) as a part transitive
    component.
  - What line includes the AC line segment $ObjectIdentity(0, cim:ACLineSegment)?
  - List the lines that include $ObjectIdentity(0, cim:ACLineSegment) in their hierarchical
    parts.
  - Which line features $ObjectIdentity(0, cim:ACLineSegment) as one of its components?
  questions:
  - expected_steps:
    - - args:
          query: f1769bea-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPartTransitive <urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_c1efae0de75a8059a37d4d383d82b5fc
    nl_question: Identify the line that has f1769bea-9aeb-11e5-91da-b8763fd99c5f as
      a part transitive component.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c14-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769c14-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPartTransitive <urn:uuid:f1769c14-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c14-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_44eded61cf097863e8d4b874c1cce1e7
    nl_question: List the lines that include f1769c14-9aeb-11e5-91da-b8763fd99c5f
      in their hierarchical parts.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769c14-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c98-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769c98-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPartTransitive <urn:uuid:f1769c98-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c98-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:163037f6-cf93-054e-8a6d-3f58de83b6a3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_3473e36d36042e64de8c9092caf4e538
    nl_question: What line includes the AC line segment f1769c98-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769c98-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769b18-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769b18-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPartTransitive <urn:uuid:f1769b18-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769b18-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:e0da7c50-49a5-d94d-bb37-a41195c9a18e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_7c88be47986916bd4f8bab46f0f8987a
    nl_question: Which line features f1769b18-9aeb-11e5-91da-b8763fd99c5f as one of
      its components?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769b18-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a58
        name: iri_discovery
        output: urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPartTransitive <urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_2117aad7c309158f4c190572ea1dbee6
    nl_question: Identify the line that has f1769a58 as a part transitive component.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_0c09e3ed8a0b1d4df4c5579bad61789b
- description: A graph pattern which lists all values for line limited by parameters
    for substation (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter
    properties none.
  filters: []
  name: List line by parameters substation and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which lines are connected through $ObjectIdentity(0, cim:Substation)?
  - List the lines connected to $ObjectIdentity(0, cim:Substation).
  - What are the lines linked through $ObjectIdentity(0, cim:Substation)?
  - Identify lines that are connected via $ObjectIdentity(0, cim:Substation).
  - What lines pass through $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: STAVANGER
        name: iri_discovery
        output: urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}}, {"line":
          {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:a93b83d7-8a39-ef48-8c29-36de1ac0eaf5"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}},
          {"line": {"type": "uri", "value": "urn:uuid:163037f6-cf93-054e-8a6d-3f58de83b6a3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_c46eae82004f5af2a3cbddbb4de0ed00
    nl_question: Identify lines that are connected via STAVANGER.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176967c
        name: iri_discovery
        output: urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_67ab0e25c4bf37be31c9611608ed8876
    nl_question: Identify lines that are connected via f176967c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696c4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c30c287e-b54f-b542-a328-d523d298efee"}}, {"line":
          {"type": "uri", "value": "urn:uuid:6d5c844f-cbe3-ab4f-88cf-8e178e10dfe2"}},
          {"line": {"type": "uri", "value": "urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c"}},
          {"line": {"type": "uri", "value": "urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b"}},
          {"line": {"type": "uri", "value": "urn:uuid:704f0834-3cea-b640-b4b8-45a457ea7588"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_9c0ade6b0d6542868dc2df3f949e196a
    nl_question: What lines pass through f17696c4-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SANDEFJORD
        name: iri_discovery
        output: urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65"}}, {"line":
          {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_38c4f52caca60445ee7f3e90ae441e03
    nl_question: Identify lines that are connected via SANDEFJORD.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769648-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:a93b83d7-8a39-ef48-8c29-36de1ac0eaf5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_0a0ff10c2dae1e1ceea795ab29c2b4e4
    nl_question: Identify lines that are connected via f1769648-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_bdb28e483ef22ef75eee43be1b103e1c
- description: A graph pattern which lists all values for line limited by parameters
    for voltagelevel (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter
    properties none.
  filters: []
  name: List line by parameters voltagelevel and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which lines are connected through part to $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the lines connected through part to $ObjectIdentity(0, cim:VoltageLevel).
  - What are the lines associated through part with $ObjectIdentity(0, cim:VoltageLevel)?
  - List all lines connected through part to $ObjectIdentity(0, cim:VoltageLevel).
  - Can you give me the lines that are connected to $ObjectIdentity(0, cim:VoltageLevel)
    through part?
  questions:
  - expected_steps:
    - - args:
          query: GRUNDFOR420
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771"}}, {"line":
          {"type": "uri", "value": "urn:uuid:ff3505b4-ebd4-164f-940a-339566d09ed7"}},
          {"line": {"type": "uri", "value": "urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_b919be9a5545f8754bab691206352e31
    nl_question: List all lines connected through part to GRUNDFOR420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: AURLAND 420
        name: iri_discovery
        output: urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}}, {"line":
          {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_b83e96de1a6f247dff1b3094a703463c
    nl_question: What are the lines associated through part with AURLAND 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:0f789428-2713-f747-9a0c-2794752e9055"}}, {"line":
          {"type": "uri", "value": "urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159"}},
          {"line": {"type": "uri", "value": "urn:uuid:e0da7c50-49a5-d94d-bb37-a41195c9a18e"}},
          {"line": {"type": "uri", "value": "urn:uuid:9595d4f7-2fa6-1f40-a741-7ae636b831ae"}},
          {"line": {"type": "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:1cbc2362-28fc-7845-81aa-058185329c2a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_714c54f1af11b53c47e269d55e2bf688
    nl_question: Which lines are connected through part to f17695d4-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769660
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}, {"line":
          {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_c7e00a2768ce7824d7afc662b0cdc512
    nl_question: Identify the lines connected through part to f1769660.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769666
        name: iri_discovery
        output: urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_d943776847f54b222af58514a8db1610
    nl_question: List all lines connected through part to f1769666.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_4d3a9793ebcb50251c38001f738da69f
- description: A graph pattern which lists all values for line limited by parameters
    for line (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter properties
    none.
  filters: []
  name: List line by parameters line and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which lines are connected through parts to $ObjectIdentity(0, cim:Line)?
  - What lines are directly connected to $ObjectIdentity(0, cim:Line) via parts?
  - Identify the lines that are connected to $ObjectIdentity(0, cim:Line) through
    parts.
  - List all lines that are linked to $ObjectIdentity(0, cim:Line) through some parts.
  - What are the other lines connected to $ObjectIdentity(0, cim:Line) via parts?
  questions:
  - expected_steps:
    - - args:
          query: 1bd30b0a
        name: iri_discovery
        output: urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741>
            .

            <urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e"}}, {"line":
          {"type": "uri", "value": "urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405"}},
          {"line": {"type": "uri", "value": "urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741"}},
          {"line": {"type": "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:fd79db98-7494-8348-8442-0400e115ef44"}},
          {"line": {"type": "uri", "value": "urn:uuid:4b85da4e-97d2-304a-b902-68cf587c2488"}},
          {"line": {"type": "uri", "value": "urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_0733d4294bd45bdad9c173bdb2c2f777
    nl_question: List all lines that are linked to 1bd30b0a through some parts.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741
  - expected_steps:
    - - args:
          query: 3ca9d0f7-4994-714f-8e09-7799609c5568
        name: iri_discovery
        output: urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568>
            .

            <urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568"}}, {"line":
          {"type": "uri", "value": "urn:uuid:da2bff0f-480e-a844-af79-d2e7550e8b7c"}},
          {"line": {"type": "uri", "value": "urn:uuid:4d9d05e8-d8b0-2847-a18b-55219605945e"}},
          {"line": {"type": "uri", "value": "urn:uuid:c1670524-00d4-a649-a22e-51c9ea238f8a"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_a09cf235885d03d3a315c8d4a59651e6
    nl_question: Which lines are connected through parts to 3ca9d0f7-4994-714f-8e09-7799609c5568?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568
  - expected_steps:
    - - args:
          query: 83f55d5f-90cd-da41-82ac-86783a45ab16
        name: iri_discovery
        output: urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16>
            .

            <urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:ec7fe146-024b-b94f-a850-7770b8bbe5b6"}}, {"line":
          {"type": "uri", "value": "urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc"}},
          {"line": {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:28e8bca7-a94f-cc45-9b85-7c872de68a17"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_8e0b3b692b946b932c3838037e24ae1e
    nl_question: What lines are directly connected to 83f55d5f-90cd-da41-82ac-86783a45ab16
      via parts?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16
  - expected_steps:
    - - args:
          query: LC 420PORJUS-GRUNDFOR
        name: iri_discovery
        output: urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771>
            .

            <urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:416644bd-4033-9346-b73a-888189030d58"}}, {"line":
          {"type": "uri", "value": "urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771"}},
          {"line": {"type": "uri", "value": "urn:uuid:ff3505b4-ebd4-164f-940a-339566d09ed7"}},
          {"line": {"type": "uri", "value": "urn:uuid:6d5c844f-cbe3-ab4f-88cf-8e178e10dfe2"}},
          {"line": {"type": "uri", "value": "urn:uuid:26143bb2-a542-8544-9503-0315356e3aa6"}},
          {"line": {"type": "uri", "value": "urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b"}},
          {"line": {"type": "uri", "value": "urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:c46c1cab-bf10-ba48-85c9-7983dc83cac4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_fdcf1a4a1355e56b432dc10bf8378bde
    nl_question: What are the other lines connected to LC 420PORJUS-GRUNDFOR via parts?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771
  - expected_steps:
    - - args:
          query: 92d6c8c8
        name: iri_discovery
        output: urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6>
            .

            <urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:416644bd-4033-9346-b73a-888189030d58"}}, {"line":
          {"type": "uri", "value": "urn:uuid:c6f09cba-a293-a84c-bafe-4f6edb362801"}},
          {"line": {"type": "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}},
          {"line": {"type": "uri", "value": "urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6"}},
          {"line": {"type": "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}},
          {"line": {"type": "uri", "value": "urn:uuid:02b33ebb-c87f-4b48-89aa-b6b1421b62a4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_13ff8c25c110f6c3d383edaf86f48c2c
    nl_question: What lines are directly connected to 92d6c8c8 via parts?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6
  sparql_template: '?line a cim:Line ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Line)} .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_1c84cf8881fb5d9acf4bd4673976ceef
- description: A graph pattern which lists all values for line limited by parameters
    for bay (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter properties
    none.
  filters: []
  name: List line by parameters bay and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which lines are connected through the bay $ObjectIdentity(0, cim:Bay)?
  - Identify the lines connected via $ObjectIdentity(0, cim:Bay).
  - What lines are associated with the bay $ObjectIdentity(0, cim:Bay)?
  - List the lines that connect through bay $ObjectIdentity(0, cim:Bay).
  - The bay $ObjectIdentity(0, cim:Bay) is connected to which lines?
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 300AS1
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_d8b87d2ce865e14f84171faecb7fda30
    nl_question: Identify the lines connected via ARENDAL 300AS1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
  - expected_steps:
    - - args:
          query: e789e752-840f-6244-aca3-735295ad7b1e
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e>
            .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_444390f457c6cf8ec423e40babd3d732
    nl_question: Identify the lines connected via e789e752-840f-6244-aca3-735295ad7b1e.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: KRISTIAN300FE1
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_e9535f11021e15cf68b929a4c743def3
    nl_question: What lines are associated with the bay KRISTIAN300FE1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: 9ba118a2
        name: iri_discovery
        output: urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d>
            .

            <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_85bf841441ee93a4b883127188808324
    nl_question: List the lines that connect through bay 9ba118a2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
  - expected_steps:
    - - args:
          query: b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:connectedThroughPart <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_1f447f7dd41c0c08c25d19b4bce1ed91
    nl_question: Identify the lines connected via b61b6279-c21e-8241-aeb7-8d9bd3ead57c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  sparql_template: '?line a cim:Line ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_b77d3d0e74e4eec26b1a8ff903a669d5
- description: A graph pattern which lists all values for line limited by parameters
    for subgeographicalregion (https://cim.ucaiug.io/ns#Line.Region), aclinesegment
    (https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List line by parameters subgeographicalregion, aclinesegment and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Line.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which line in $ObjectIdentity(0, cim:SubGeographicalRegion) consists of the AC
    line segment $ObjectIdentity(1, cim:ACLineSegment)?
  - Identify the line within $ObjectIdentity(0, cim:SubGeographicalRegion) that has
    $ObjectIdentity(1, cim:ACLineSegment) as a part.
  - What line is located in $ObjectIdentity(0, cim:SubGeographicalRegion) and comprises
    the AC line segment $ObjectIdentity(1, cim:ACLineSegment)?
  - List the lines in $ObjectIdentity(0, cim:SubGeographicalRegion) that include $ObjectIdentity(1,
    cim:ACLineSegment) as a segment.
  - Which lines in $ObjectIdentity(0, cim:SubGeographicalRegion) are composed of the
    AC line segment $ObjectIdentity(1, cim:ACLineSegment)?
  questions:
  - expected_steps:
    - - args:
          query: f1769aac
        name: iri_discovery
        output: urn:uuid:f1769aac-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695c3
        name: iri_discovery
        output: urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPart <urn:uuid:f1769aac-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769aac-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:9595d4f7-2fa6-1f40-a741-7ae636b831ae"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_0e4d9a91e9195de83e48dd5e3d586606
    nl_question: Which line in f17695c3 consists of the AC line segment f1769aac?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769aac-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c20-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769619-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPart <urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_519ee1fa70fca133595c15fa0a6d040e
    nl_question: Which line in f1769619-9aeb-11e5-91da-b8763fd99c5f consists of the
      AC line segment f1769c20-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c2c
        name: iri_discovery
        output: urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: NO5 SGR
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPart <urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_b4c7b5a29edbff14bd824de21b2cab61
    nl_question: Which lines in NO5 SGR are composed of the AC line segment f1769c2c?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769b24-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SE3 SGR
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPart <urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_4c44ff376a180cdb63db1683e136a7a3
    nl_question: Identify the line within SE3 SGR that has f1769b24-9aeb-11e5-91da-b8763fd99c5f
      as a part.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769b24-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a58-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695af-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPart <urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_e989b7ad18b1d285c67aeca286c09930
    nl_question: List the lines in f17695af-9aeb-11e5-91da-b8763fd99c5f that include
      f1769a58-9aeb-11e5-91da-b8763fd99c5f as a segment.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cim:Line.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)} ;

    cimr:hasPart {$ObjectIdentity(1, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .

    {$ObjectIdentity(1, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_a73bedbe98ced2a417bc1f9c837799e0
- description: A graph pattern which lists all values for line limited by parameters
    for subgeographicalregion (https://cim.ucaiug.io/ns#Line.Region), aclinesegment
    (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List line by parameters subgeographicalregion, aclinesegment and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Line.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which lines in $ObjectIdentity(0, cim:SubGeographicalRegion) have parts that include
    $ObjectIdentity(1, cim:ACLineSegment)?
  - List the lines in $ObjectIdentity(0, cim:SubGeographicalRegion) containing $ObjectIdentity(1,
    cim:ACLineSegment) as a part.
  - Identify the lines in $ObjectIdentity(0, cim:SubGeographicalRegion) that have
    $ObjectIdentity(1, cim:ACLineSegment) as a transitive part.
  - What are the lines in $ObjectIdentity(0, cim:SubGeographicalRegion) associated
    with the part $ObjectIdentity(1, cim:ACLineSegment)?
  - Can you provide the lines in $ObjectIdentity(0, cim:SubGeographicalRegion) that
    include $ObjectIdentity(1, cim:ACLineSegment) in their composition?
  questions:
  - expected_steps:
    - - args:
          query: 420FORSMARK-OSKARHA 1
        name: iri_discovery
        output: urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695af
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_faeaae9063f2be53c0a714f86ae1a1d3
    nl_question: Can you provide the lines in f17695af that include 420FORSMARK-OSKARHA
      1 in their composition?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769cc8
        name: iri_discovery
        output: urn:uuid:f1769cc8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: NO2 SGR
        name: iri_discovery
        output: urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769cc8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769cc8-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_88f55cb7beee1f336752b8e62b521615
    nl_question: List the lines in NO2 SGR containing f1769cc8 as a part.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769cc8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420RINGHALS-HALDEN  1
        name: iri_discovery
        output: urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SE3 SGR
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:026c0a0d-083f-0e40-b0c5-ff466be4ac34"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_2f176bef8fb8790dc88ff48dde675f39
    nl_question: Identify the lines in SE3 SGR that have 420RINGHALS-HALDEN  1 as
      a transitive part.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420RINGHALS-MALMO 2
        name: iri_discovery
        output: urn:uuid:f1769b84-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695af-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769b84-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769b84-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_279e4ce0c2fc51295d8c7af6a5900389
    nl_question: What are the lines in f17695af-9aeb-11e5-91da-b8763fd99c5f associated
      with the part 420RINGHALS-MALMO 2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769b84-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420GEILO-EIDFJORD 1
        name: iri_discovery
        output: urn:uuid:f1769c50-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769619-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769c50-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769c50-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_3f8923949d7d2475c3f332195801fc5e
    nl_question: Which lines in f1769619-9aeb-11e5-91da-b8763fd99c5f have parts that
      include 420GEILO-EIDFJORD 1?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769c50-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cim:Line.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)} ;

    cimr:hasPartTransitive {$ObjectIdentity(1, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .

    {$ObjectIdentity(1, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_7ee56f663edc4af46a7041d65681f0e8
- description: A graph pattern which lists all values for line limited by parameters
    for aclinesegment (https://cim.ucaiug.io/rules#hasPart), aclinesegment (https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List line by parameters aclinesegment, aclinesegment and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#ACLineSegment
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which line contains $ObjectIdentity(0, cim:ACLineSegment) as part and $ObjectIdentity(1,
    cim:ACLineSegment) as part of its transitive connections?
  - Identify the line that directly includes $ObjectIdentity(0, cim:ACLineSegment)
    and is transitively connected to $ObjectIdentity(1, cim:ACLineSegment).
  - What is the line that has $ObjectIdentity(0, cim:ACLineSegment) as its part and
    $ObjectIdentity(1, cim:ACLineSegment) through transitive connections?
  - List the line that contains both $ObjectIdentity(0, cim:ACLineSegment) directly
    and $ObjectIdentity(1, cim:ACLineSegment) indirectly through transitive parts.
  - Find the line that includes $ObjectIdentity(0, cim:ACLineSegment) as a part and
    $ObjectIdentity(1, cim:ACLineSegment) as a transitive part.
  questions:
  - expected_steps:
    - - args:
          query: f1769b60-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769b60
        name: iri_discovery
        output: urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            <urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:026c0a0d-083f-0e40-b0c5-ff466be4ac34"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_8dde2a95e85b8cf9060cdb96f8056b80
    nl_question: Identify the line that directly includes f1769b60 and is transitively
      connected to f1769b60-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769b60-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420RINGHALS-MALMO 1
        name: iri_discovery
        output: urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769b78-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            <urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:fd79db98-7494-8348-8442-0400e115ef44"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_e6beb345b49bdee27d78850034229e4a
    nl_question: Identify the line that directly includes f1769b78-9aeb-11e5-91da-b8763fd99c5f
      and is transitively connected to 420RINGHALS-MALMO 1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769b78-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769bc0
        name: iri_discovery
        output: urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 420HALDEN-KONGSBER
        name: iri_discovery
        output: urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            <urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:ec7fe146-024b-b94f-a850-7770b8bbe5b6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_93886fd02b54aea7114ee5bfb0f87b89
    nl_question: Identify the line that directly includes 420HALDEN-KONGSBER and is
      transitively connected to f1769bc0.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769bc0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d1c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769d1c
        name: iri_discovery
        output: urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            <urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c1670524-00d4-a649-a22e-51c9ea238f8a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_ed41ed46a3cde59b1d2243df874bbb83
    nl_question: Which line contains f1769d1c as part and f1769d1c-9aeb-11e5-91da-b8763fd99c5f
      as part of its transitive connections?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a70
        name: iri_discovery
        output: urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 420FORSMARK-OSKARHA 1
        name: iri_discovery
        output: urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cimr:hasPart <urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:hasPartTransitive <urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            <urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_ede8318d25955a64199179ab829ecbcd
    nl_question: Find the line that includes 420FORSMARK-OSKARHA 1 as a part and f1769a70
      as a transitive part.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:ACLineSegment): urn:uuid:f1769a70-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cimr:hasPart {$ObjectIdentity(0, cim:ACLineSegment)} ;

    cimr:hasPartTransitive {$ObjectIdentity(1, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .

    {$ObjectIdentity(1, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_1bacce340841bf59271fa222db12c7b3
- description: A graph pattern which lists all values for line limited by parameters
    for line (https://cim.ucaiug.io/ns#Line.Region, https://cim.ucaiug.io/ns#SubGeographicalRegion.Lines)
    and by filter properties none.
  filters: []
  name: List line by parameters line and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Line.Region
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Lines
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which lines are part of the same region as $ObjectIdentity(0, cim:Line)?
  - Identify the lines within the region that also contains $ObjectIdentity(0, cim:Line).
  - What lines share a region with $ObjectIdentity(0, cim:Line)?
  - List all lines in the same sub-geographical region as $ObjectIdentity(0, cim:Line).
  - Which lines are located in the sub-geographical region of $ObjectIdentity(0, cim:Line)?
  questions:
  - expected_steps:
    - - args:
          query: LC 300ASKER-ARENDAL
        name: iri_discovery
        output: urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Lines <urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c>
            .

            <urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}, {"line":
          {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}},
          {"line": {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}},
          {"line": {"type": "uri", "value": "urn:uuid:7ddc4e21-814d-4b4b-9de2-14bc98cbb99f"}},
          {"line": {"type": "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_9328a9262bdb4c3c76c92727be20168c
    nl_question: What lines share a region with LC 300ASKER-ARENDAL?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c
  - expected_steps:
    - - args:
          query: LC 420HJALTA-TENHULT 1
        name: iri_discovery
        output: urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Lines <urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159>
            .

            <urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159"}}, {"line":
          {"type": "uri", "value": "urn:uuid:174636f9-3007-f447-b84a-67a7bed47d90"}},
          {"line": {"type": "uri", "value": "urn:uuid:ff3505b4-ebd4-164f-940a-339566d09ed7"}},
          {"line": {"type": "uri", "value": "urn:uuid:3fb607c1-4813-c849-a401-b4a02da4c0c4"}},
          {"line": {"type": "uri", "value": "urn:uuid:9595d4f7-2fa6-1f40-a741-7ae636b831ae"}},
          {"line": {"type": "uri", "value": "urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e"}},
          {"line": {"type": "uri", "value": "urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b"}},
          {"line": {"type": "uri", "value": "urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:1cbc2362-28fc-7845-81aa-058185329c2a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_18b1c0f727ab9dc5cbdd7cb22c43d424
    nl_question: Which lines are located in the sub-geographical region of LC 420HJALTA-TENHULT
      1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159
  - expected_steps:
    - - args:
          query: 83f55d5f-90cd-da41-82ac-86783a45ab16
        name: iri_discovery
        output: urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Lines <urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16>
            .

            <urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1"}}, {"line":
          {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}},
          {"line": {"type": "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}},
          {"line": {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_e28b0522f5baea5988af89d35cd1f0d3
    nl_question: What lines share a region with 83f55d5f-90cd-da41-82ac-86783a45ab16?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16
  - expected_steps:
    - - args:
          query: fd79db98-7494-8348-8442-0400e115ef44
        name: iri_discovery
        output: urn:uuid:fd79db98-7494-8348-8442-0400e115ef44
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Lines <urn:uuid:fd79db98-7494-8348-8442-0400e115ef44>
            .

            <urn:uuid:fd79db98-7494-8348-8442-0400e115ef44> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:0f789428-2713-f747-9a0c-2794752e9055"}}, {"line":
          {"type": "uri", "value": "urn:uuid:416644bd-4033-9346-b73a-888189030d58"}},
          {"line": {"type": "uri", "value": "urn:uuid:026c0a0d-083f-0e40-b0c5-ff466be4ac34"}},
          {"line": {"type": "uri", "value": "urn:uuid:e0da7c50-49a5-d94d-bb37-a41195c9a18e"}},
          {"line": {"type": "uri", "value": "urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b"}},
          {"line": {"type": "uri", "value": "urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405"}},
          {"line": {"type": "uri", "value": "urn:uuid:c6f09cba-a293-a84c-bafe-4f6edb362801"}},
          {"line": {"type": "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:fd79db98-7494-8348-8442-0400e115ef44"}},
          {"line": {"type": "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}},
          {"line": {"type": "uri", "value": "urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6"}},
          {"line": {"type": "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}},
          {"line": {"type": "uri", "value": "urn:uuid:02b33ebb-c87f-4b48-89aa-b6b1421b62a4"}},
          {"line": {"type": "uri", "value": "urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_a58bbbde7b51fe17c4e3eb38b95c5e0b
    nl_question: Identify the lines within the region that also contains fd79db98-7494-8348-8442-0400e115ef44.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:fd79db98-7494-8348-8442-0400e115ef44
  - expected_steps:
    - - args:
          query: c043978d-ed90-2e47-bc2a-da27ebb63127
        name: iri_discovery
        output: urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Lines <urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127>
            .

            <urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1"}}, {"line":
          {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}},
          {"line": {"type": "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}},
          {"line": {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_aaad435ee174814372a0922fbdbedd9f
    nl_question: List all lines in the same sub-geographical region as c043978d-ed90-2e47-bc2a-da27ebb63127.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127
  sparql_template: '?line a cim:Line ;

    cim:Line.Region/cim:SubGeographicalRegion.Lines {$ObjectIdentity(0, cim:Line)}
    .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_49e917394920a2ff6ed3725550096634
- description: A graph pattern which lists all values for line limited by parameters
    for geographicalregion (https://cim.ucaiug.io/ns#Line.Region, https://cim.ucaiug.io/ns#SubGeographicalRegion.Region)
    and by filter properties none.
  filters: []
  name: List line by parameters geographicalregion and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Line.Region
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Region
    type: https://cim.ucaiug.io/ns#GeographicalRegion
  paraphrases:
  - Which lines belong to the geographical region $ObjectIdentity(0, cim:GeographicalRegion)?
  - List all lines that are part of the geographical region $ObjectIdentity(0, cim:GeographicalRegion).
  - What lines are located within the geographical region $ObjectIdentity(0, cim:GeographicalRegion)?
  - Identify the lines associated with the geographical region $ObjectIdentity(0,
    cim:GeographicalRegion).
  - What are the lines in the geographical region $ObjectIdentity(0, cim:GeographicalRegion)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd9048c
        name: iri_discovery
        output: urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Region <urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4> a cim:GeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1"}}, {"line":
          {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}},
          {"line": {"type": "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}},
          {"line": {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}},
          {"line": {"type": "uri", "value": "urn:uuid:1a2fa6e6-f211-fe44-8bbf-a5ac1b97e5fc"}},
          {"line": {"type": "uri", "value": "urn:uuid:c30c287e-b54f-b542-a328-d523d298efee"}},
          {"line": {"type": "uri", "value": "urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b"}},
          {"line": {"type": "uri", "value": "urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c"}},
          {"line": {"type": "uri", "value": "urn:uuid:704f0834-3cea-b640-b4b8-45a457ea7588"}},
          {"line": {"type": "uri", "value": "urn:uuid:da2bff0f-480e-a844-af79-d2e7550e8b7c"}},
          {"line": {"type": "uri", "value": "urn:uuid:c1670524-00d4-a649-a22e-51c9ea238f8a"}},
          {"line": {"type": "uri", "value": "urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65"}},
          {"line": {"type": "uri", "value": "urn:uuid:3ca9d0f7-4994-714f-8e09-7799609c5568"}},
          {"line": {"type": "uri", "value": "urn:uuid:ec7fe146-024b-b94f-a850-7770b8bbe5b6"}},
          {"line": {"type": "uri", "value": "urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc"}},
          {"line": {"type": "uri", "value": "urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516"}},
          {"line": {"type": "uri", "value": "urn:uuid:a93b83d7-8a39-ef48-8c29-36de1ac0eaf5"}},
          {"line": {"type": "uri", "value": "urn:uuid:0fe64e6a-4952-d84a-a4e5-08af6fbce229"}},
          {"line": {"type": "uri", "value": "urn:uuid:4d9d05e8-d8b0-2847-a18b-55219605945e"}},
          {"line": {"type": "uri", "value": "urn:uuid:181da395-2007-6542-b60a-70968bf2fa38"}},
          {"line": {"type": "uri", "value": "urn:uuid:28e8bca7-a94f-cc45-9b85-7c872de68a17"}},
          {"line": {"type": "uri", "value": "urn:uuid:d52a3445-d70b-1144-827f-f4d6e1412fb4"}},
          {"line": {"type": "uri", "value": "urn:uuid:336d1458-d916-1441-8e86-89ce3de43223"}},
          {"line": {"type": "uri", "value": "urn:uuid:163037f6-cf93-054e-8a6d-3f58de83b6a3"}},
          {"line": {"type": "uri", "value": "urn:uuid:0f789428-2713-f747-9a0c-2794752e9055"}},
          {"line": {"type": "uri", "value": "urn:uuid:416644bd-4033-9346-b73a-888189030d58"}},
          {"line": {"type": "uri", "value": "urn:uuid:026c0a0d-083f-0e40-b0c5-ff466be4ac34"}},
          {"line": {"type": "uri", "value": "urn:uuid:e0da7c50-49a5-d94d-bb37-a41195c9a18e"}},
          {"line": {"type": "uri", "value": "urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b"}},
          {"line": {"type": "uri", "value": "urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405"}},
          {"line": {"type": "uri", "value": "urn:uuid:c6f09cba-a293-a84c-bafe-4f6edb362801"}},
          {"line": {"type": "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:fd79db98-7494-8348-8442-0400e115ef44"}},
          {"line": {"type": "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}},
          {"line": {"type": "uri", "value": "urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6"}},
          {"line": {"type": "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}},
          {"line": {"type": "uri", "value": "urn:uuid:02b33ebb-c87f-4b48-89aa-b6b1421b62a4"}},
          {"line": {"type": "uri", "value": "urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468"}},
          {"line": {"type": "uri", "value": "urn:uuid:f713ef27-5e35-b241-93b8-ad2fdd60e159"}},
          {"line": {"type": "uri", "value": "urn:uuid:174636f9-3007-f447-b84a-67a7bed47d90"}},
          {"line": {"type": "uri", "value": "urn:uuid:ff3505b4-ebd4-164f-940a-339566d09ed7"}},
          {"line": {"type": "uri", "value": "urn:uuid:3fb607c1-4813-c849-a401-b4a02da4c0c4"}},
          {"line": {"type": "uri", "value": "urn:uuid:9595d4f7-2fa6-1f40-a741-7ae636b831ae"}},
          {"line": {"type": "uri", "value": "urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e"}},
          {"line": {"type": "uri", "value": "urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b"}},
          {"line": {"type": "uri", "value": "urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:1cbc2362-28fc-7845-81aa-058185329c2a"}},
          {"line": {"type": "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}},
          {"line": {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}},
          {"line": {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}},
          {"line": {"type": "uri", "value": "urn:uuid:7ddc4e21-814d-4b4b-9de2-14bc98cbb99f"}},
          {"line": {"type": "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}},
          {"line": {"type": "uri", "value": "urn:uuid:1bd30b0a-476f-4e4d-b187-4b5fcc1d4741"}},
          {"line": {"type": "uri", "value": "urn:uuid:4b85da4e-97d2-304a-b902-68cf587c2488"}},
          {"line": {"type": "uri", "value": "urn:uuid:6527036e-b9b9-684b-a1fe-1e94910e3771"}},
          {"line": {"type": "uri", "value": "urn:uuid:6d5c844f-cbe3-ab4f-88cf-8e178e10dfe2"}},
          {"line": {"type": "uri", "value": "urn:uuid:26143bb2-a542-8544-9503-0315356e3aa6"}},
          {"line": {"type": "uri", "value": "urn:uuid:c46c1cab-bf10-ba48-85c9-7983dc83cac4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_6f888b56a7e6ad62ec694577845eb9c5
    nl_question: List all lines that are part of the geographical region 2dd9048c.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeographicalRegion): urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?line a cim:Line ;

    cim:Line.Region/cim:SubGeographicalRegion.Region {$ObjectIdentity(0, cim:GeographicalRegion)}
    .

    {$ObjectIdentity(0, cim:GeographicalRegion)} a cim:GeographicalRegion ;

    .'
  template_id: template_list_643c712e57ce90a2d2bb18436dd32eaa
- description: A graph pattern which lists all values for line limited by parameters
    for substation (https://cim.ucaiug.io/ns#Line.Region, https://cim.ucaiug.io/ns#SubGeographicalRegion.Substations)
    and by filter properties none.
  filters: []
  name: List line by parameters substation and filters none
  outputs:
  - name: line
    type: cim:Line
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Line.Region
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Substations
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which lines are connected to the region containing $ObjectIdentity(0, cim:Substation)?
  - What lines belong to the region of $ObjectIdentity(0, cim:Substation)?
  - Identify the lines associated with the region of $ObjectIdentity(0, cim:Substation).
  - List all the lines in the region of $ObjectIdentity(0, cim:Substation).
  - What are the lines connected through the region of $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: RINGHALS
        name: iri_discovery
        output: urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:0f789428-2713-f747-9a0c-2794752e9055"}}, {"line":
          {"type": "uri", "value": "urn:uuid:416644bd-4033-9346-b73a-888189030d58"}},
          {"line": {"type": "uri", "value": "urn:uuid:026c0a0d-083f-0e40-b0c5-ff466be4ac34"}},
          {"line": {"type": "uri", "value": "urn:uuid:e0da7c50-49a5-d94d-bb37-a41195c9a18e"}},
          {"line": {"type": "uri", "value": "urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b"}},
          {"line": {"type": "uri", "value": "urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e"}},
          {"line": {"type": "uri", "value": "urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405"}},
          {"line": {"type": "uri", "value": "urn:uuid:c6f09cba-a293-a84c-bafe-4f6edb362801"}},
          {"line": {"type": "uri", "value": "urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:fd79db98-7494-8348-8442-0400e115ef44"}},
          {"line": {"type": "uri", "value": "urn:uuid:4c4a2d4d-cb38-1b44-809b-de652658bdb6"}},
          {"line": {"type": "uri", "value": "urn:uuid:92d6c8c8-8977-4b49-bd2a-34be753ca8a6"}},
          {"line": {"type": "uri", "value": "urn:uuid:95673616-2f0d-344d-8445-fc5ab072fec9"}},
          {"line": {"type": "uri", "value": "urn:uuid:02b33ebb-c87f-4b48-89aa-b6b1421b62a4"}},
          {"line": {"type": "uri", "value": "urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_92bc056de6e5f0bc24a58ade45b40857
    nl_question: What lines belong to the region of RINGHALS?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769682-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}, {"line":
          {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}},
          {"line": {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}},
          {"line": {"type": "uri", "value": "urn:uuid:7ddc4e21-814d-4b4b-9de2-14bc98cbb99f"}},
          {"line": {"type": "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_c24962673e01ddcd6944d131e6ebcffa
    nl_question: List all the lines in the region of f1769682-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: FEDA_HVDC
        name: iri_discovery
        output: urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827"}}, {"line":
          {"type": "uri", "value": "urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed"}},
          {"line": {"type": "uri", "value": "urn:uuid:508e6a84-b922-5344-a535-5ded6671e583"}},
          {"line": {"type": "uri", "value": "urn:uuid:05090715-38e3-0942-8219-759ae0e7929d"}},
          {"line": {"type": "uri", "value": "urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8"}},
          {"line": {"type": "uri", "value": "urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337"}},
          {"line": {"type": "uri", "value": "urn:uuid:7ddc4e21-814d-4b4b-9de2-14bc98cbb99f"}},
          {"line": {"type": "uri", "value": "urn:uuid:2043d2c7-7a72-a14f-acca-b9fb9393b95c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_2399d30f8699c9f128b7c971981c976e
    nl_question: Which lines are connected to the region containing FEDA_HVDC?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: DAGALI
        name: iri_discovery
        output: urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1"}}, {"line":
          {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}},
          {"line": {"type": "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}},
          {"line": {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_9a505d36c1631d5ee63421358e226a93
    nl_question: Identify the lines associated with the region of DAGALI.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SIMA
        name: iri_discovery
        output: urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?line WHERE {

            ?line a cim:Line ;

            cim:Line.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["line"]}, "results": {"bindings": [{"line": {"type":
          "uri", "value": "urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1"}}, {"line":
          {"type": "uri", "value": "urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9"}},
          {"line": {"type": "uri", "value": "urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae"}},
          {"line": {"type": "uri", "value": "urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f"}},
          {"line": {"type": "uri", "value": "urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1"}},
          {"line": {"type": "uri", "value": "urn:uuid:83f55d5f-90cd-da41-82ac-86783a45ab16"}},
          {"line": {"type": "uri", "value": "urn:uuid:c043978d-ed90-2e47-bc2a-da27ebb63127"}},
          {"line": {"type": "uri", "value": "urn:uuid:f27d61b3-06ad-2f4e-a1d9-2315695e127a"}},
          {"line": {"type": "uri", "value": "urn:uuid:0955a8a7-95f5-744e-90a7-a0a8f5b6cdd2"}},
          {"line": {"type": "uri", "value": "urn:uuid:293e49bc-c995-fc46-a69c-380876b317a1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - line
    id: question_497cedfd92909418e9973002d98f4fd1
    nl_question: Which lines are connected to the region containing SIMA?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?line a cim:Line ;

    cim:Line.Region/cim:SubGeographicalRegion.Substations {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_99ac828eea43366489ae2ebe68bc26ec
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties none.
  filters: []
  name: List generatingunit by parameters none and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - What are the generating units?
  - List all generating units.
  - Provide the details of available generating units.
  - Which entities are classified as generating units?
  - Can you identify all the generating units?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769831-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769850-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769943-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176986c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769857-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769883-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769865-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769985-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769823-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176982a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176994a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176998c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769950-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699fa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176981c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176989f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769898-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176985e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769956-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769849-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698e3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_98fc50c608c13f258bd4d180361085a3
    nl_question: Provide the details of available generating units.
    parameter_bindings: {}
  sparql_template: ?generatingunit a cim:GeneratingUnit .
  template_id: template_list_088663c1493d5dd6c088bcf4373e5bf2
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlareageneratingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit)
    and by filter properties none.
  filters: []
  name: List generatingunit by parameters controlareageneratingunit and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  paraphrases:
  - Which generating unit is associated with $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)?
  - Identify the generating unit linked to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit).
  - What generating unit is connected to the control area generating unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit)?
  - List the generating unit related to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit).
  - Find the generating unit associated with the control area unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit).
  questions:
  - expected_steps:
    - - args:
          query: f1769848-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_dc6b89ce3af8817347d77d7a9b0f1ce7
    nl_question: Which generating unit is associated with f1769848-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a15-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_5c4eeb5b31980ab33f984766e207ef0d
    nl_question: List the generating unit related to f1769a15-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: CAGU_FI_HELSINKIG1
        name: iri_discovery
        output: urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_ce652873c78cb701a7cf64d3b2154d16
    nl_question: Identify the generating unit linked to CAGU_FI_HELSINKIG1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176981b-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_35abbdb25fb1cb63cd7f1264a8ce6c86
    nl_question: Identify the generating unit linked to f176981b-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698e2
        name: iri_discovery
        output: urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_dde064eb63798bbd9f1ab348590eadd5
    nl_question: Which generating unit is associated with f17698e2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)}
    .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .'
  template_id: template_list_a72be31ac9c3eb0c66ffd4ed50eb81fb
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for rotatingmachine (https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine)
    and by filter properties none.
  filters: []
  name: List generatingunit by parameters rotatingmachine and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine
    type: https://cim.ucaiug.io/ns#RotatingMachine
  paraphrases:
  - Which generating unit is using the rotating machine $ObjectIdentity(0, cim:RotatingMachine)?
  - Identify the generating unit associated with the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine).
  - What is the generating unit connected to the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine)?
  - List the generating unit that utilizes the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine).
  - Provide the generating unit linked to the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine).
  questions:
  - expected_steps:
    - - args:
          query: f1769902-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_00834fe9d9397b1c1ec9d646fb5bd714
    nl_question: List the generating unit that utilizes the rotating machine f1769902-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176983d
        name: iri_discovery
        output: urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_cbb8eb72315e785cbeef43eb2a54d323
    nl_question: Provide the generating unit linked to the rotating machine f176983d.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a20
        name: iri_discovery
        output: urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_71121378205c2232b097d889a77696c7
    nl_question: Which generating unit is using the rotating machine f1769a20?
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176986f-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176986f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176986f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176986f-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176986c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_c1b99555b4bd1eea91df3c4f0e52cfa2
    nl_question: List the generating unit that utilizes the rotating machine f176986f-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176986f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 M2
        name: iri_discovery
        output: urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_5676346f46f140b555e18b8f926d14f2
    nl_question: Identify the generating unit associated with the rotating machine
      MALMO   420 M2.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.RotatingMachine {$ObjectIdentity(0, cim:RotatingMachine)} .

    {$ObjectIdentity(0, cim:RotatingMachine)} a cim:RotatingMachine ;

    .'
  template_id: template_list_eadc0539f32b9ab30301eb4097041931
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for scheduleresource (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource)
    and by filter properties none.
  filters: []
  name: List generatingunit by parameters scheduleresource and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    type: https://cim4.eu/ns/nc#ScheduleResource
  paraphrases:
  - Which generating unit is associated with $ObjectIdentity(0, nc:ScheduleResource)?
  - Identify the generating unit linked to the scheduled resource $ObjectIdentity(0,
    nc:ScheduleResource).
  - What generating unit has $ObjectIdentity(0, nc:ScheduleResource) as its schedule
    resource?
  - List the generating units that are associated with the schedule resource $ObjectIdentity(0,
    nc:ScheduleResource).
  - Which generating unit's schedule resource corresponds to $ObjectIdentity(0, nc:ScheduleResource)?
  questions:
  - expected_steps:
    - - args:
          query: SR-NOKG09
        name: iri_discovery
        output: urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102>
            .

            <urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_7c7e781c7d9fcf021d3c3b2ff2aeaf48
    nl_question: Which generating unit is associated with SR-NOKG09?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102
  - expected_steps:
    - - args:
          query: ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c
        name: iri_discovery
        output: urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c>
            .

            <urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769883-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176989f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769898-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_1c257deccd728fb2bb0ffc169a84cf1d
    nl_question: List the generating units that are associated with the schedule resource
      ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c
  - expected_steps:
    - - args:
          query: 7825e759
        name: iri_discovery
        output: urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8>
            .

            <urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_2615a9c304571db748ba8a3b4485bd88
    nl_question: Which generating unit is associated with 7825e759?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8
  - expected_steps:
    - - args:
          query: dab56647
        name: iri_discovery
        output: urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61>
            .

            <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698e3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_0fc9cd17a9dd5c51c6b72945032e10a7
    nl_question: Which generating unit is associated with dab56647?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
  - expected_steps:
    - - args:
          query: 2ad2b84f
        name: iri_discovery
        output: urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f>
            .

            <urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_8039d51b7a8a6c05d5bf89e59c6106af
    nl_question: Identify the generating unit linked to the scheduled resource 2ad2b84f.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    nc:GeneratingUnit.ScheduleResource {$ObjectIdentity(0, nc:ScheduleResource)} .

    {$ObjectIdentity(0, nc:ScheduleResource)} a nc:ScheduleResource ;

    .'
  template_id: template_list_bc8b5398a575a3bb5d58d4c0a07ce6ed
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for substation (https://cim.ucaiug.io/rules#isPart) and by filter properties
    none.
  filters: []
  name: List generatingunit by parameters substation and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which generating units are part of $ObjectIdentity(0, cim:Substation)?
  - Identify the generating units associated with $ObjectIdentity(0, cim:Substation).
  - What generating units belong to $ObjectIdentity(0, cim:Substation)?
  - List all generating units that are part of $ObjectIdentity(0, cim:Substation).
  - Which generating units are included within $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: f17695c8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPart <urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769831-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769823-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176982a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176981c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_e48e2f800b8c69b5dac4e097a5f28bbd
    nl_question: What generating units belong to f17695c8-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696c4
        name: iri_discovery
        output: urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPart <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699fa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_a9e2f6d5661a948cf5e7f471063bb0fb
    nl_question: Which generating units are included within f17696c4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ae
        name: iri_discovery
        output: urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPart <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_806fc632cfaf8550acb6f75ecf4c7dd3
    nl_question: Which generating units are included within f17696ae?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176963c
        name: iri_discovery
        output: urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPart <urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_4301c79ae0ebb3f97e8f23da16a9b9b3
    nl_question: List all generating units that are part of f176963c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769604-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPart <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_444d0623a051fc80e3f43a36b969f93c
    nl_question: What generating units belong to f1769604-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cimr:isPart {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_b1a00ca1147535d9e06126dbf16fb423
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for substation (https://cim.ucaiug.io/rules#isPartTransitive) and by
    filter properties none.
  filters: []
  name: List generatingunit by parameters substation and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which generating units are part of $ObjectIdentity(0, cim:Substation)?
  - List the generating units that belong to $ObjectIdentity(0, cim:Substation).
  - What generating units are included in $ObjectIdentity(0, cim:Substation)?
  - Identify the generating units that are part of the substation $ObjectIdentity(0,
    cim:Substation).
  - Provide the generating units contained within $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f176965a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPartTransitive <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_67de738a9e31f3fe6b3f961017ab1dc5
    nl_question: Which generating units are part of f176965a-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695aa-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPartTransitive <urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_34a66f9e73fa81bede783d5dd4a017a4
    nl_question: What generating units are included in f17695aa-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695df
        name: iri_discovery
        output: urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPartTransitive <urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_fc277b880140efa135951f9469c40e08
    nl_question: Provide the generating units contained within f17695df.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769604
        name: iri_discovery
        output: urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPartTransitive <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_5298d45aaa0ca7e2dc206f1233ca12bf
    nl_question: List the generating units that belong to f1769604.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176963c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cimr:isPartTransitive <urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_6d01c8ff0a37e83c3ed7ca5a4865fc83
    nl_question: List the generating units that belong to f176963c-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_ef602f3cd544e4b64fcbecab39390236
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties generatingunit.maxoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.maxOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters none and filters generatingunit.maxoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - Which generating units have a maximum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float) MW?
  - List the generating units with a max operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float) Megawatts.
  - Provide the generating units that have $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) as their maximum operating active power.
  - What are the generating units with an operating power limit of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float) MW?
  - Identify all generating units with a maximum active power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float) MW.
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.maxOperatingP "900"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699fa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_7f22636a37ad96f64a72d5ec28528f22
    nl_question: Which generating units have a maximum operating power of 900 MW?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '900'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.maxOperatingP "1050"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_ce92bb230cf451becc99fb33552cad45
    nl_question: Identify all generating units with a maximum active power of 1050
      MW.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1050'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.maxOperatingP "1230"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769850-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176986c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769857-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769865-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176985e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769849-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_1d1cc728fbda0e571e3b2744ad4ec25d
    nl_question: List the generating units with a max operating power of 1230 Megawatts.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1230'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.maxOperatingP "850"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_c73fc511b713777e129697e7e876ddd2
    nl_question: Provide the generating units that have 850 as their maximum operating
      active power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '850'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.maxOperatingP "1075"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698e3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_2ada55dca6ae0c9011f28cadc2dd3153
    nl_question: Which generating units have a maximum operating power of 1075 MW?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1075'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.maxOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float)} .'
  template_id: template_list_d8420c352863093280caf398a181a425
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties generatingunit.minoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.minOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters none and filters generatingunit.minoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - Which generating units have a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) Megawatts?
  - Provide generators with a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float).
  - List the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float) minimum operating power.
  - Which generating units have a minimum operating active power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float)?
  - Get generators with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float) MW minimum operating active power.
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769831-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769850-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769943-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176986c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769857-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769883-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769865-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769985-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769823-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176982a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176994a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176998c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769950-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699fa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176981c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176989f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769898-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176985e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769956-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769849-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698e3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_73b8fa2c2a863297ed59f4b141da8e29
    nl_question: Provide generators with a minimum operating power of 0.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.minOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)} .'
  template_id: template_list_9919d86a4550130e356564cad207b8a6
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties generatingunit.nominalp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.nominalP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters none and filters generatingunit.nominalp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - Which generating units have a nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) Megawatts?
  - List the generating units with nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) MW.
  - Provide generating units with a nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float).
  - What generators have a nominal power equal to $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) MW?
  - Identify the generators with a nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.nominalP "750.456"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769883-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176989f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769898-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_19058b3529b68a780d47b7b0cdf43cc3
    nl_question: Identify the generators with a nominal power of 750.456.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '750.456'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.nominalP "260.104"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_86d0026479bbba59f6692dc6199339e7
    nl_question: What generators have a nominal power equal to 260.104 MW?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '260.104'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.nominalP "248.65"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_e4a262c617c4f87b572739248d74ad02
    nl_question: What generators have a nominal power equal to 248.65 MW?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '248.65'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.nominalP "139.462"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_bd14efcf9ad4cc40d3a5ffe8cefbf3f7
    nl_question: What generators have a nominal power equal to 139.462 MW?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '139.462'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.nominalP "199.925"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_d2c4a9d95c46ea81b71dc006190cd305
    nl_question: Provide generating units with a nominal power of 199.925.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '199.925'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.nominalP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float)} .'
  template_id: template_list_f34aa0f9535e0c874fe3ee5c5aa97d18
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties generatingunit.normalpf.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.normalPF
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters none and filters generatingunit.normalpf
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - Which generating units have a normal power factor of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.normalPF, xsd:float)?
  - Provide generating units with a normal power factor of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.normalPF, xsd:float).
  - List the generating units with a normal power factor of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.normalPF, xsd:float).
  - What generating units operate at a normal power factor of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.normalPF, xsd:float)?
  - Identify generators that have $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.normalPF,
    xsd:float) as their normal power factor.
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.normalPF "1"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769831-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769850-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176986c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769857-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769883-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769865-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769985-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769823-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176982a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176998c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176981c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176989f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769898-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176985e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769849-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698e3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_6de4fd09e64aaf21aa952caf0865a5f0
    nl_question: Provide generating units with a normal power factor of 1.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.normalPF, xsd:float): '1'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.normalPF "0"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769943-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176994a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769950-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699fa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769956-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_55e48427b07e8178cb51e0b3b14cd6ba
    nl_question: Identify generators that have 0 as their normal power factor.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.normalPF, xsd:float): '0'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.normalPF {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.normalPF,
    xsd:float)} .'
  template_id: template_list_5e6d7b1411029fe6fd99f9f7f09e27d0
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties generatingunit.ratedgrossmaxp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.ratedGrossMaxP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters none and filters generatingunit.ratedgrossmaxp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - What generating units have a rated gross maximum power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedGrossMaxP, xsd:float)?
  - List the generating units with a rated gross max power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedGrossMaxP, xsd:float).
  - Identify generators with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP,
    xsd:float) rated gross maximum power.
  - Which generating units have a gross max rated power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedGrossMaxP, xsd:float)?
  - Provide all generating units whose rated gross maximum power is $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedGrossMaxP, xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedGrossMaxP "1280"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_0bf0434febd7be4bedc81c753b999375
    nl_question: List the generating units with a rated gross max power of 1280.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP, xsd:float): '1280'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedGrossMaxP "620"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769943-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176994a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769950-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769956-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_cea73569262be15a51e11b8141f332c1
    nl_question: Which generating units have a gross max rated power of 620?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP, xsd:float): '620'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedGrossMaxP "1167"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_f8d818e6bb310c6271f29afb1ac5fe4b
    nl_question: Identify generators with 1167 rated gross maximum power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP, xsd:float): '1167'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedGrossMaxP "1100"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_52bcb48485a7c4b102834993bafb3fd5
    nl_question: Identify generators with 1100 rated gross maximum power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP, xsd:float): '1100'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedGrossMaxP "1217"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_679156bcb71e107810fb9f1fd0f0cfc7
    nl_question: List the generating units with a rated gross max power of 1217.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP, xsd:float): '1217'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ratedGrossMaxP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedGrossMaxP,
    xsd:float)} .'
  template_id: template_list_425fbebde6fbb99751ddd523c42911ac
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for none and by filter properties generatingunit.ratednetmaxp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.ratedNetMaxP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters none and filters generatingunit.ratednetmaxp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters: []
  paraphrases:
  - Which generating units have a rated net maximum power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedNetMaxP, xsd:float) MW?
  - List the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP,
    xsd:float) rated net max power.
  - Provide the generating units having a rated net maximum power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedNetMaxP, xsd:float) megawatts.
  - What generating units have their rated net maximum power set to $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.ratedNetMaxP, xsd:float)?
  - Identify the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP,
    xsd:float) MW rated net power.
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedNetMaxP "620"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769943-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176994a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769950-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769956-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_11bd07f72c7daad53e376ef12ef30d48
    nl_question: Identify the generating units with 620 MW rated net power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP, xsd:float): '620'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedNetMaxP "1100"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_c30c284b926af11c1912ae4e6fec0523
    nl_question: List the generating units with 1100 rated net max power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP, xsd:float): '1100'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedNetMaxP "1167"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_433e74d6abf96694cb8edb1b157d0b1d
    nl_question: List the generating units with 1167 rated net max power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP, xsd:float): '1167'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedNetMaxP "1120"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_36eacbb81169ac10882d607e4a9e21ea
    nl_question: Which generating units have a rated net maximum power of 1120 MW?
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP, xsd:float): '1120'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ratedNetMaxP "850"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_49cbdd3972462446ad4a026626858017
    nl_question: Identify the generating units with 850 MW rated net power.
    parameter_bindings:
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP, xsd:float): '850'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ratedNetMaxP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.ratedNetMaxP,
    xsd:float)} .'
  template_id: template_list_179278896b9e35f97cbe14a9d032cf51
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlareageneratingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit)
    and by filter properties generatingunit.maxoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.maxOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters controlareageneratingunit and filters generatingunit.maxoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  paraphrases:
  - Which generating units belong to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    and have a max operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) Megawatts?
  - List the generating units in $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    with a maximum operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float).
  - Identify the generating units under $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    having $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float)
    MW max power.
  - Which generating units associated with $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    have a maximum active power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float)?
  - Find all generators in $ObjectIdentity(0, cim:ControlAreaGeneratingUnit) with
    a maximum power rating of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float).
  questions:
  - expected_steps:
    - - args:
          query: f17699c0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1167"^^xsd:float .

            <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_e4da929ac9e7e66162a4f405093050d7
    nl_question: List the generating units in f17699c0-9aeb-11e5-91da-b8763fd99c5f
      with a maximum operating power of 1167.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1167'
  - expected_steps:
    - - args:
          query: f1769882
        name: iri_discovery
        output: urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1000"^^xsd:float .

            <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_2b26033ab4de67f1321289f0b687fbc3
    nl_question: Which generating units belong to f1769882 and have a max operating
      power of 1000 Megawatts?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1000'
  - expected_steps:
    - - args:
          query: CAGU_SE4_MALMO G1
        name: iri_discovery
        output: urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1183"^^xsd:float .

            <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_a5ba778f37aca3d5bcd7e66d6c700fcf
    nl_question: Which generating units belong to CAGU_SE4_MALMO G1 and have a max
      operating power of 1183 Megawatts?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1183'
  - expected_steps:
    - - args:
          query: CAGU_NO3_TRONDHEIG1
        name: iri_discovery
        output: urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1000"^^xsd:float .

            <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_27363ac7dfc59d6b6ccefb806cb65a25
    nl_question: List the generating units in CAGU_NO3_TRONDHEIG1 with a maximum operating
      power of 1000.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1000'
  - expected_steps:
    - - args:
          query: f1769848-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1230"^^xsd:float .

            <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_bcbb8dd1df4cdf8239fd877a362d7f98
    nl_question: Which generating units belong to f1769848-9aeb-11e5-91da-b8763fd99c5f
      and have a max operating power of 1230 Megawatts?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1230'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)}
    ;

    cim:GeneratingUnit.maxOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float)} .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .'
  template_id: template_list_9b26aae45e5ea8da74f78b3578d94870
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlareageneratingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit)
    and by filter properties generatingunit.minoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.minOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters controlareageneratingunit and filters generatingunit.minoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  paraphrases:
  - Which generating units, part of $ObjectIdentity(0, cim:ControlAreaGeneratingUnit),
    have a minimum operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)?
  - List generating units with a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) in $ObjectIdentity(0, cim:ControlAreaGeneratingUnit).
  - What generating units associated with $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    have $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float)
    as their minimum operating power?
  - Can you identify generating units in $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    with a min operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)?
  - What are the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float) minimum power in $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)?
  questions:
  - expected_steps:
    - - args:
          query: CAGU_NO2_KRISTING1
        name: iri_discovery
        output: urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_fae44ecf06643ceb11c353e9362d8f33
    nl_question: What are the generating units with 0 minimum power in CAGU_NO2_KRISTING1?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: CAGU_NO3_TRONDHEIG1
        name: iri_discovery
        output: urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_7c11731715e89d8364f1e69f437aa808
    nl_question: Which generating units, part of CAGU_NO3_TRONDHEIG1, have a minimum
      operating power of 0?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: f176981b
        name: iri_discovery
        output: urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_9ebda5c63dd5e4c3ae05291294120e2f
    nl_question: What generating units associated with f176981b have 0 as their minimum
      operating power?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: f1769848-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_8cbdaf188a18c73ce05e6e263572fe65
    nl_question: What generating units associated with f1769848-9aeb-11e5-91da-b8763fd99c5f
      have 0 as their minimum operating power?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: f17699a2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_82920b59bab8621bdd011479bc319560
    nl_question: What are the generating units with 0 minimum power in f17699a2-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)}
    ;

    cim:GeneratingUnit.minOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)} .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .'
  template_id: template_list_4788e4b60c4036a3b069cad1e8111935
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlareageneratingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit)
    and by filter properties generatingunit.nominalp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.nominalP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters controlareageneratingunit and filters generatingunit.nominalp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  paraphrases:
  - Which generating units linked to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    have a nominal power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float) MW?
  - Identify the generating units associated with $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    with a nominal power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float).
  - List generating units that have $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float) MW nominal power and are part of $ObjectIdentity(0, cim:ControlAreaGeneratingUnit).
  - What generating units related to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    have a nominal power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float)?
  - Provide details of generating units with nominal power $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) MW that are tied to $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit).
  questions:
  - expected_steps:
    - - args:
          query: f1769882
        name: iri_discovery
        output: urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "750.456"^^xsd:float .

            <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_4620f5c1bb6ce9a4727fba5f44b70844
    nl_question: List generating units that have 750.456 MW nominal power and are
      part of f1769882.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '750.456'
  - expected_steps:
    - - args:
          query: f1769848
        name: iri_discovery
        output: urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "440.397"^^xsd:float .

            <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_9f4d8fc12af7c2f9775a05744b71e1c1
    nl_question: Provide details of generating units with nominal power 440.397 MW
      that are tied to f1769848.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '440.397'
  - expected_steps:
    - - args:
          query: f1769984-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "269.964"^^xsd:float .

            <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_396ed61291b99e3a100a10cea6f6875b
    nl_question: What generating units related to f1769984-9aeb-11e5-91da-b8763fd99c5f
      have a nominal power of 269.964?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '269.964'
  - expected_steps:
    - - args:
          query: CAGU_NO5_SIMA G1
        name: iri_discovery
        output: urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "807.547"^^xsd:float .

            <urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_37962e9ce47f8a40cffec9bae60da4e1
    nl_question: Provide details of generating units with nominal power 807.547 MW
      that are tied to CAGU_NO5_SIMA G1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '807.547'
  - expected_steps:
    - - args:
          query: f176991c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176991c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176991c-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "248.65"^^xsd:float .

            <urn:uuid:f176991c-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_13bb668cae8d1e1c1589673bfe93dda3
    nl_question: Which generating units linked to f176991c-9aeb-11e5-91da-b8763fd99c5f
      have a nominal power of 248.65 MW?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176991c-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '248.65'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)}
    ;

    cim:GeneratingUnit.nominalP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float)} .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .'
  template_id: template_list_7da1df82aa08521eb033712f401cdbff
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for rotatingmachine (https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine)
    and by filter properties generatingunit.maxoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.maxOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters rotatingmachine and filters generatingunit.maxoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine
    type: https://cim.ucaiug.io/ns#RotatingMachine
  paraphrases:
  - Which generating units include the rotating machine $ObjectIdentity(0, cim:RotatingMachine)
    and have a maximum operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) Megawatts?
  - Identify the generating units that are connected to rotating machine $ObjectIdentity(0,
    cim:RotatingMachine) and have a max operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float).
  - What are the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) MW maximum power that include rotating machine $ObjectIdentity(0, cim:RotatingMachine)?
  - List generating units with rotating machine $ObjectIdentity(0, cim:RotatingMachine)
    that operate at a maximum power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) MW.
  - Give me the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) max power containing rotating machine $ObjectIdentity(0, cim:RotatingMachine).
  questions:
  - expected_steps:
    - - args:
          query: f176994d
        name: iri_discovery
        output: urn:uuid:f176994d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176994d-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "620"^^xsd:float .

            <urn:uuid:f176994d-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176994a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_72d367143ccf171f9fad5a6d6190ce86
    nl_question: What are the generating units with 620 MW maximum power that include
      rotating machine f176994d?
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176994d-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '620'
  - expected_steps:
    - - args:
          query: f17699e0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1167"^^xsd:float .

            <urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_0ce5fc7d7baceba123951336994f6f65
    nl_question: Give me the generating units with 1167 max power containing rotating
      machine f17699e0-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1167'
  - expected_steps:
    - - args:
          query: SIMA    300 M5
        name: iri_discovery
        output: urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1075"^^xsd:float .

            <urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_ac332f2f3a1e77494e3af4f65ba7f52d
    nl_question: What are the generating units with 1075 MW maximum power that include
      rotating machine SIMA    300 M5?
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1075'
  - expected_steps:
    - - args:
          query: MALMO   420 M5
        name: iri_discovery
        output: urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1183"^^xsd:float .

            <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_d9b8da0e709404e70d452c5f6a042392
    nl_question: Identify the generating units that are connected to rotating machine
      MALMO   420 M5 and have a max operating power of 1183.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1183'
  - expected_steps:
    - - args:
          query: f176982d
        name: iri_discovery
        output: urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.maxOperatingP "1000"^^xsd:float .

            <urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176982a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_93dd90dda7c8b0a30a9b24f11e0e2204
    nl_question: Identify the generating units that are connected to rotating machine
      f176982d and have a max operating power of 1000.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1000'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.RotatingMachine {$ObjectIdentity(0, cim:RotatingMachine)} ;

    cim:GeneratingUnit.maxOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float)} .

    {$ObjectIdentity(0, cim:RotatingMachine)} a cim:RotatingMachine ;

    .'
  template_id: template_list_a3ef32ad21c069f823642480fb2ada01
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for rotatingmachine (https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine)
    and by filter properties generatingunit.minoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.minOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters rotatingmachine and filters generatingunit.minoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine
    type: https://cim.ucaiug.io/ns#RotatingMachine
  paraphrases:
  - Which generating units have a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) and are associated with rotating
    machine $ObjectIdentity(0, cim:RotatingMachine)?
  - List the generating units with a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) and linked to $ObjectIdentity(0,
    cim:RotatingMachine).
  - Find generating units that have $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float) as their minimum operating power and are connected to $ObjectIdentity(0,
    cim:RotatingMachine).
  - What are the generating units having a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) and associated with the rotating
    machine $ObjectIdentity(0, cim:RotatingMachine)?
  - Provide generating units with a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) that are connected to $ObjectIdentity(0,
    cim:RotatingMachine).
  questions:
  - expected_steps:
    - - args:
          query: PORJUS  420 M2
        name: iri_discovery
        output: urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176981c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_476ae5323f96df623bfcec6769578973
    nl_question: Provide generating units with a minimum operating power of 0 that
      are connected to PORJUS  420 M2.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: f1769853-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769853-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769853-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f1769853-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769850-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_a69a4757d073b85574f3a4546789afdf
    nl_question: Find generating units that have 0 as their minimum operating power
      and are connected to f1769853-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769853-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: BLAFALLI300 M1
        name: iri_discovery
        output: urn:uuid:f1769961-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769961-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f1769961-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_ae47884b8f618b0ce11ca7adffa1560a
    nl_question: Find generating units that have 0 as their minimum operating power
      and are connected to BLAFALLI300 M1.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769961-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: f176982d-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176982a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_4ebc0aa9715db80f226f56a121d522a4
    nl_question: Provide generating units with a minimum operating power of 0 that
      are connected to f176982d-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: f17698c9
        name: iri_discovery
        output: urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_ee677b8b2b93558bf168e4a10456649f
    nl_question: Which generating units have a minimum operating power of 0 and are
      associated with rotating machine f17698c9?
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.RotatingMachine {$ObjectIdentity(0, cim:RotatingMachine)} ;

    cim:GeneratingUnit.minOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)} .

    {$ObjectIdentity(0, cim:RotatingMachine)} a cim:RotatingMachine ;

    .'
  template_id: template_list_4847250f4ef7e7fc5bde98678313be90
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for rotatingmachine (https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine)
    and by filter properties generatingunit.nominalp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.nominalP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters rotatingmachine and filters generatingunit.nominalp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine
    type: https://cim.ucaiug.io/ns#RotatingMachine
  paraphrases:
  - Which generating units are associated with the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine) and have a nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float)?
  - Identify generating units linked to $ObjectIdentity(0, cim:RotatingMachine) with
    nominal power $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float).
  - What generating units have a nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) and are connected to the rotating machine
    $ObjectIdentity(0, cim:RotatingMachine)?
  - List the generating units with nominal power $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) that are associated with the rotating
    machine $ObjectIdentity(0, cim:RotatingMachine).
  - Provide generating units connected to $ObjectIdentity(0, cim:RotatingMachine)
    and having $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float)
    as nominal power.
  questions:
  - expected_steps:
    - - args:
          query: f17698ed
        name: iri_discovery
        output: urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "807.547"^^xsd:float .

            <urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_a7a15b179ba4d86e140bdb8ef82ad5ea
    nl_question: Identify generating units linked to f17698ed with nominal power 807.547.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '807.547'
  - expected_steps:
    - - args:
          query: f1769a04
        name: iri_discovery
        output: urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "435.385"^^xsd:float .

            <urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_205521318d09f8654a08ac5e08fad94b
    nl_question: What generating units have a nominal power of 435.385 and are connected
      to the rotating machine f1769a04?
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '435.385'
  - expected_steps:
    - - args:
          query: f1769810-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "392.863"^^xsd:float .

            <urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_cf72141290a6509e6d86812e97fa51cd
    nl_question: Identify generating units linked to f1769810-9aeb-11e5-91da-b8763fd99c5f
      with nominal power 392.863.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '392.863'
  - expected_steps:
    - - args:
          query: f1769929
        name: iri_discovery
        output: urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "323.652"^^xsd:float .

            <urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_85f246d0d52fab90fe6889b91d1324c8
    nl_question: Identify generating units linked to f1769929 with nominal power 323.652.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '323.652'
  - expected_steps:
    - - args:
          query: f17699f5-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699f5-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17699f5-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.nominalP "685.687"^^xsd:float .

            <urn:uuid:f17699f5-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_248f782af864617a8fb11548b6192008
    nl_question: Which generating units are associated with the rotating machine f17699f5-9aeb-11e5-91da-b8763fd99c5f
      and have a nominal power of 685.687?
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17699f5-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '685.687'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.RotatingMachine {$ObjectIdentity(0, cim:RotatingMachine)} ;

    cim:GeneratingUnit.nominalP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float)} .

    {$ObjectIdentity(0, cim:RotatingMachine)} a cim:RotatingMachine ;

    .'
  template_id: template_list_867fe68c5d4f724d40065322ba3af478
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for scheduleresource (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource)
    and by filter properties generatingunit.maxoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.maxOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters scheduleresource and filters generatingunit.maxoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    type: https://cim4.eu/ns/nc#ScheduleResource
  paraphrases:
  - Which generating units with a max operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float) are associated with $ObjectIdentity(0,
    nc:ScheduleResource) schedule resource?
  - List generating units linked to $ObjectIdentity(0, nc:ScheduleResource) and operating
    at $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float)
    maximum power.
  - What are the generating units with a maximum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.maxOperatingP, xsd:float) associated with $ObjectIdentity(0,
    nc:ScheduleResource)?
  - Identify generating units connected to $ObjectIdentity(0, nc:ScheduleResource)
    that have a max operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float).
  - Which generating units, operating at $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float) MW, are scheduled with $ObjectIdentity(0, nc:ScheduleResource)?
  questions:
  - expected_steps:
    - - args:
          query: 5ff5264a-70fd-40f9-b5bf-0020c677c2fe
        name: iri_discovery
        output: urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe>
            ;

            cim:GeneratingUnit.maxOperatingP "1183"^^xsd:float .

            <urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_28aaaea5030d03fbdc9a307ba57698a5
    nl_question: What are the generating units with a maximum operating power of 1183
      associated with 5ff5264a-70fd-40f9-b5bf-0020c677c2fe?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1183'
  - expected_steps:
    - - args:
          query: dab56647
        name: iri_discovery
        output: urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61>
            ;

            cim:GeneratingUnit.maxOperatingP "1075"^^xsd:float .

            <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698e3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_69e8026b123018b345d3a8be80e92b29
    nl_question: Which generating units with a max operating power of 1075 are associated
      with dab56647 schedule resource?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1075'
  - expected_steps:
    - - args:
          query: 3eabc0b3
        name: iri_discovery
        output: urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102>
            ;

            cim:GeneratingUnit.maxOperatingP "1050"^^xsd:float .

            <urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176993b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176992d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_2f2617450ae18636e58530f56db6580a
    nl_question: What are the generating units with a maximum operating power of 1050
      associated with 3eabc0b3?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1050'
  - expected_steps:
    - - args:
          query: SR-NOKG15
        name: iri_discovery
        output: urn:uuid:25dae699-5c94-4ed3-91df-d015a62d235b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:25dae699-5c94-4ed3-91df-d015a62d235b>
            ;

            cim:GeneratingUnit.maxOperatingP "900"^^xsd:float .

            <urn:uuid:25dae699-5c94-4ed3-91df-d015a62d235b> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699fa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_b35902f1183df18949e31a81ff3db519
    nl_question: List generating units linked to SR-NOKG15 and operating at 900 maximum
      power.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:25dae699-5c94-4ed3-91df-d015a62d235b
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '900'
  - expected_steps:
    - - args:
          query: ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c
        name: iri_discovery
        output: urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c>
            ;

            cim:GeneratingUnit.maxOperatingP "1000"^^xsd:float .

            <urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769883-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176989f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769898-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_5f2157de8618b80ebf126a8e7160d951
    nl_question: What are the generating units with a maximum operating power of 1000
      associated with ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:ae6cb5a5-b679-4307-bc6d-f1fe70cb3a2c
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP, xsd:float): '1000'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    nc:GeneratingUnit.ScheduleResource {$ObjectIdentity(0, nc:ScheduleResource)} ;

    cim:GeneratingUnit.maxOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.maxOperatingP,
    xsd:float)} .

    {$ObjectIdentity(0, nc:ScheduleResource)} a nc:ScheduleResource ;

    .'
  template_id: template_list_ae77f60f3abf9c49267beb95281754ad
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for scheduleresource (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource)
    and by filter properties generatingunit.minoperatingp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.minOperatingP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters scheduleresource and filters generatingunit.minoperatingp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    type: https://cim4.eu/ns/nc#ScheduleResource
  paraphrases:
  - Which generating units have a minimum operating power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.minOperatingP, xsd:float) and are associated with $ObjectIdentity(0,
    nc:ScheduleResource)?
  - Identify the generating units linked to $ObjectIdentity(0, nc:ScheduleResource)
    with a minimum operating power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float).
  - List the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float) minimum operating power and schedule resources of $ObjectIdentity(0,
    nc:ScheduleResource).
  - What generating units are related to $ObjectIdentity(0, nc:ScheduleResource) and
    have a minimum active power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)?
  - Provide generating units associated with $ObjectIdentity(0, nc:ScheduleResource)
    having a min operational power of $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float).
  questions:
  - expected_steps:
    - - args:
          query: 7ac39667
        name: iri_discovery
        output: urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_178c2368e23fb7c71a53bc96941c5835
    nl_question: Provide generating units associated with 7ac39667 having a min operational
      power of 0.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: 0726d132-976b-4b46-8015-c0fdce45cd47
        name: iri_discovery
        output: urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_f3cc53d895ba8ce95be695ed1b04765c
    nl_question: Provide generating units associated with 0726d132-976b-4b46-8015-c0fdce45cd47
      having a min operational power of 0.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: e69c9068-d9ab-4197-b46a-8552e0d58557
        name: iri_discovery
        output: urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_044659c0da0597dd1ad45d04e756be48
    nl_question: List the generating units with 0 minimum operating power and schedule
      resources of e69c9068-d9ab-4197-b46a-8552e0d58557.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: 7ac39667-7920-42ad-9f10-bcb766a2b681
        name: iri_discovery
        output: urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769800-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176980d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769807-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_417292ba4a5de6a41ba20f36b19464e7
    nl_question: Provide generating units associated with 7ac39667-7920-42ad-9f10-bcb766a2b681
      having a min operational power of 0.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:7825e759-1c96-490a-8f29-3aa3cb776cc8
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  - expected_steps:
    - - args:
          query: e301f841
        name: iri_discovery
        output: urn:uuid:e301f841-e969-4f95-8c22-f737b2f73c79
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:e301f841-e969-4f95-8c22-f737b2f73c79>
            ;

            cim:GeneratingUnit.minOperatingP "0"^^xsd:float .

            <urn:uuid:e301f841-e969-4f95-8c22-f737b2f73c79> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769850-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176986c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769857-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769865-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176985e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769849-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_c5baafab9845fea7c641f67c97e82f8f
    nl_question: Which generating units have a minimum operating power of 0 and are
      associated with e301f841?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:e301f841-e969-4f95-8c22-f737b2f73c79
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP, xsd:float): '0'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    nc:GeneratingUnit.ScheduleResource {$ObjectIdentity(0, nc:ScheduleResource)} ;

    cim:GeneratingUnit.minOperatingP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.minOperatingP,
    xsd:float)} .

    {$ObjectIdentity(0, nc:ScheduleResource)} a nc:ScheduleResource ;

    .'
  template_id: template_list_08629f3a75c7ac55dfbe9de7af99e2bb
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for scheduleresource (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource)
    and by filter properties generatingunit.nominalp.
  filters:
  - property: https://cim.ucaiug.io/ns#GeneratingUnit.nominalP
    subject: cim:GeneratingUnit
    type: xsd:float
  name: List generatingunit by parameters scheduleresource and filters generatingunit.nominalp
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    type: https://cim4.eu/ns/nc#ScheduleResource
  paraphrases:
  - Which generating units with nominal power of $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) are linked to $ObjectIdentity(0, nc:ScheduleResource)?
  - Identify the generating units having nominal power $ValueFilter(cim:GeneratingUnit,
    cim:GeneratingUnit.nominalP, xsd:float) associated with $ObjectIdentity(0, nc:ScheduleResource).
  - What generating units with nominal power $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float) relate to schedule resource $ObjectIdentity(0, nc:ScheduleResource)?
  - List the generating units with $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float) nominal power connected to $ObjectIdentity(0, nc:ScheduleResource).
  - Provide generating units with nominal power $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float) that are tied to $ObjectIdentity(0, nc:ScheduleResource).
  questions:
  - expected_steps:
    - - args:
          query: bd52ca52
        name: iri_discovery
        output: urn:uuid:bd52ca52-19a2-467b-ad03-e77af426d092
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:bd52ca52-19a2-467b-ad03-e77af426d092>
            ;

            cim:GeneratingUnit.nominalP "739.674"^^xsd:float .

            <urn:uuid:bd52ca52-19a2-467b-ad03-e77af426d092> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_293ea8178a1aa83c0a15e7e47a1dff22
    nl_question: What generating units with nominal power 739.674 relate to schedule
      resource bd52ca52?
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:bd52ca52-19a2-467b-ad03-e77af426d092
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '739.674'
  - expected_steps:
    - - args:
          query: 0726d132
        name: iri_discovery
        output: urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47>
            ;

            cim:GeneratingUnit.nominalP "274.554"^^xsd:float .

            <urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698cd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_bcc3f4340676af15e87779ec806d61cb
    nl_question: List the generating units with 274.554 nominal power connected to
      0726d132.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:0726d132-976b-4b46-8015-c0fdce45cd47
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '274.554'
  - expected_steps:
    - - args:
          query: 7ac39667-7920-42ad-9f10-bcb766a2b681
        name: iri_discovery
        output: urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681>
            ;

            cim:GeneratingUnit.nominalP "681.833"^^xsd:float .

            <urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_b9a3e145b40ba200cca4c4108435bbd6
    nl_question: List the generating units with 681.833 nominal power connected to
      7ac39667-7920-42ad-9f10-bcb766a2b681.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:7ac39667-7920-42ad-9f10-bcb766a2b681
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '681.833'
  - expected_steps:
    - - args:
          query: 2ad2b84f
        name: iri_discovery
        output: urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f>
            ;

            cim:GeneratingUnit.nominalP "248.65"^^xsd:float .

            <urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_d80b520b87eaa2997b2c098d0ad3e09a
    nl_question: Identify the generating units having nominal power 248.65 associated
      with 2ad2b84f.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:2ad2b84f-9b6e-48db-96d9-3dcbd5d9fc6f
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '248.65'
  - expected_steps:
    - - args:
          query: SR-NOKG14
        name: iri_discovery
        output: urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9>
            ;

            cim:GeneratingUnit.nominalP "685.687"^^xsd:float .

            <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699c1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_443c2688b2e54331f8e3c41629e004e7
    nl_question: Identify the generating units having nominal power 685.687 associated
      with SR-NOKG14.
    parameter_bindings:
      $ObjectIdentity(0, nc:ScheduleResource): urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
      $ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP, xsd:float): '685.687'
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    nc:GeneratingUnit.ScheduleResource {$ObjectIdentity(0, nc:ScheduleResource)} ;

    cim:GeneratingUnit.nominalP {$ValueFilter(cim:GeneratingUnit, cim:GeneratingUnit.nominalP,
    xsd:float)} .

    {$ObjectIdentity(0, nc:ScheduleResource)} a nc:ScheduleResource ;

    .'
  template_id: template_list_5bbfc56cd6c5ae8119d1ca7dfa1e7354
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlareageneratingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit),
    rotatingmachine (https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine) and
    by filter properties none.
  filters: []
  name: List generatingunit by parameters controlareageneratingunit, rotatingmachine
    and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine
    type: https://cim.ucaiug.io/ns#RotatingMachine
  paraphrases:
  - Which generating unit is associated with $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    and $ObjectIdentity(1, cim:RotatingMachine)?
  - Identify the generating unit linked to control area generating unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit) and rotating machine $ObjectIdentity(1, cim:RotatingMachine).
  - What is the generating unit connected to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    and $ObjectIdentity(1, cim:RotatingMachine)?
  - List the generating unit involving $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    and $ObjectIdentity(1, cim:RotatingMachine).
  - Find the generating unit that is related to both $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    and $ObjectIdentity(1, cim:RotatingMachine).
  questions:
  - expected_steps:
    - - args:
          query: f1769a15
        name: iri_discovery
        output: urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: MALMO   420 M1
        name: iri_discovery
        output: urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_c4a8be9e5433fc6518d3864fd00d7fd2
    nl_question: What is the generating unit connected to f1769a15 and MALMO   420
      M1?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RotatingMachine): urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: CAGU_SE2_GROUNDFORG1
        name: iri_discovery
        output: urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769845-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769845-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769845-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:f1769845-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_98f5589ff0f019d0cb1a826b30e680c3
    nl_question: List the generating unit involving CAGU_SE2_GROUNDFORG1 and f1769845-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769848-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RotatingMachine): urn:uuid:f1769845-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176992c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769929
        name: iri_discovery
        output: urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_14858b5a708e7d57764cab398fe6a4dc
    nl_question: Find the generating unit that is related to both f176992c-9aeb-11e5-91da-b8763fd99c5f
      and f1769929.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RotatingMachine): urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769882
        name: iri_discovery
        output: urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: OSKARSHA420 M1
        name: iri_discovery
        output: urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_b22e25abf14e061b5aa722993b1cef8a
    nl_question: List the generating unit involving f1769882 and OSKARSHA420 M1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RotatingMachine): urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176981b-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: PORJUS  420 M1
        name: iri_discovery
        output: urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_767b7fe64beb16504d7b88e115b96ee3
    nl_question: Find the generating unit that is related to both f176981b-9aeb-11e5-91da-b8763fd99c5f
      and PORJUS  420 M1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RotatingMachine): urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)}
    ;

    cim:GeneratingUnit.RotatingMachine {$ObjectIdentity(1, cim:RotatingMachine)} .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .

    {$ObjectIdentity(1, cim:RotatingMachine)} a cim:RotatingMachine ;

    .'
  template_id: template_list_d1f2d10334c14ce3a42aecc4c9d6597a
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlareageneratingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit),
    scheduleresource (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource) and by
    filter properties none.
  filters: []
  name: List generatingunit by parameters controlareageneratingunit, scheduleresource
    and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    type: https://cim4.eu/ns/nc#ScheduleResource
  paraphrases:
  - Which generating unit has Control Area Generating Unit $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    and Schedule Resource $ObjectIdentity(1, nc:ScheduleResource)?
  - Identify the generating unit associated with Control Area Generating Unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit) and Schedule Resource $ObjectIdentity(1, nc:ScheduleResource).
  - What generating unit is linked to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    as its Control Area Generating Unit and $ObjectIdentity(1, nc:ScheduleResource)
    as its Schedule Resource?
  - List the generating unit that corresponds to Control Area Generating Unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit) and Schedule Resource $ObjectIdentity(1, nc:ScheduleResource).
  - Find the generating unit having $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    as its Control Area Generating Unit and $ObjectIdentity(1, nc:ScheduleResource)
    as its Schedule Resource.
  questions:
  - expected_steps:
    - - args:
          query: CAGU_NO3_TRONDHEIG1
        name: iri_discovery
        output: urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 24b6fc32
        name: iri_discovery
        output: urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef>
            .

            <urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_e937ffcf7605bfaff521c0e64541c512
    nl_question: What generating unit is linked to CAGU_NO3_TRONDHEIG1 as its Control
      Area Generating Unit and 24b6fc32 as its Schedule Resource?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769984-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef
  - expected_steps:
    - - args:
          query: f17698e2
        name: iri_discovery
        output: urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SR-NOKG07
        name: iri_discovery
        output: urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61>
            .

            <urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_e6e3ee1c0f96abd441d80cff97741ce0
    nl_question: Identify the generating unit associated with Control Area Generating
      Unit f17698e2 and Schedule Resource SR-NOKG07.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17698e2-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
  - expected_steps:
    - - args:
          query: f176992c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 3eabc0b3-1afe-439c-98a1-3fc0ef12e102
        name: iri_discovery
        output: urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102>
            .

            <urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_60a39058bafa6b03346d8526d24a1009
    nl_question: Which generating unit has Control Area Generating Unit f176992c-9aeb-11e5-91da-b8763fd99c5f
      and Schedule Resource 3eabc0b3-1afe-439c-98a1-3fc0ef12e102?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176992c-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:3eabc0b3-1afe-439c-98a1-3fc0ef12e102
  - expected_steps:
    - - args:
          query: CAGU_NO4_MO G1
        name: iri_discovery
        output: urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: e69c9068
        name: iri_discovery
        output: urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557>
            .

            <urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_303b6eec859d3219245e28f2c0f6ff5e
    nl_question: Identify the generating unit associated with Control Area Generating
      Unit CAGU_NO4_MO G1 and Schedule Resource e69c9068.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:e69c9068-d9ab-4197-b46a-8552e0d58557
  - expected_steps:
    - - args:
          query: CAGU_FI_HELSINKIG1
        name: iri_discovery
        output: urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SR-NOKG14
        name: iri_discovery
        output: urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9>
            .

            <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_5a554d764afdd1593ee824ffb5b6da4c
    nl_question: Which generating unit has Control Area Generating Unit CAGU_FI_HELSINKIG1
      and Schedule Resource SR-NOKG14?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)}
    ;

    nc:GeneratingUnit.ScheduleResource {$ObjectIdentity(1, nc:ScheduleResource)} .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .

    {$ObjectIdentity(1, nc:ScheduleResource)} a nc:ScheduleResource ;

    .'
  template_id: template_list_304ede748cac5f20ad6b8af9cc8fc3d2
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for rotatingmachine (https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine),
    scheduleresource (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource) and by
    filter properties none.
  filters: []
  name: List generatingunit by parameters rotatingmachine, scheduleresource and filters
    none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.RotatingMachine
    type: https://cim.ucaiug.io/ns#RotatingMachine
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    type: https://cim4.eu/ns/nc#ScheduleResource
  paraphrases:
  - Which generating unit is associated with the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine) and schedule resource $ObjectIdentity(1, nc:ScheduleResource)?
  - Identify the generating unit linked to $ObjectIdentity(0, cim:RotatingMachine)
    and $ObjectIdentity(1, nc:ScheduleResource).
  - What generating unit has connections to the rotating machine $ObjectIdentity(0,
    cim:RotatingMachine) and the schedule resource $ObjectIdentity(1, nc:ScheduleResource)?
  - List the generating unit that involves $ObjectIdentity(0, cim:RotatingMachine)
    as its rotating machine and $ObjectIdentity(1, nc:ScheduleResource) as its schedule
    resource.
  - Find the generating unit associated with both $ObjectIdentity(0, cim:RotatingMachine)
    and $ObjectIdentity(1, nc:ScheduleResource).
  questions:
  - expected_steps:
    - - args:
          query: 7ac39667-7920-42ad-9f10-bcb766a2b681
        name: iri_discovery
        output: urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17699e7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17699e7-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9>
            .

            <urn:uuid:f17699e7-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699e4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_77974679e9bba22607f21c357e8a4406
    nl_question: Identify the generating unit linked to f17699e7-9aeb-11e5-91da-b8763fd99c5f
      and 7ac39667-7920-42ad-9f10-bcb766a2b681.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17699e7-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
  - expected_steps:
    - - args:
          query: SR-NOKG14
        name: iri_discovery
        output: urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: HELSINKI420 M4
        name: iri_discovery
        output: urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9>
            .

            <urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            <urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_709ca70d32c61e686080453dc932a6cf
    nl_question: Identify the generating unit linked to HELSINKI420 M4 and SR-NOKG14.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:939d9c9b-5c0f-46eb-941b-ea90ceac4db9
  - expected_steps:
    - - args:
          query: 5ff5264a
        name: iri_discovery
        output: urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769a2e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe>
            .

            <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            <urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_38afe1415b96c8c057eb3638f1dbf31d
    nl_question: Identify the generating unit linked to f1769a2e-9aeb-11e5-91da-b8763fd99c5f
      and 5ff5264a.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:5ff5264a-70fd-40f9-b5bf-0020c677c2fe
  - expected_steps:
    - - args:
          query: dab56647-fc6e-41ac-b2f4-ca2c8a669b61
        name: iri_discovery
        output: urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SIMA    300 M3
        name: iri_discovery
        output: urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61>
            .

            <urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            <urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698ea-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_c6b348963b0f171162ce9f1d2afb8e5a
    nl_question: List the generating unit that involves SIMA    300 M3 as its rotating
      machine and dab56647-fc6e-41ac-b2f4-ca2c8a669b61 as its schedule resource.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:dab56647-fc6e-41ac-b2f4-ca2c8a669b61
  - expected_steps:
    - - args:
          query: 24b6fc32
        name: iri_discovery
        output: urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f176998f
        name: iri_discovery
        output: urn:uuid:f176998f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.RotatingMachine <urn:uuid:f176998f-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:GeneratingUnit.ScheduleResource <urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef>
            .

            <urn:uuid:f176998f-9aeb-11e5-91da-b8763fd99c5f> a cim:RotatingMachine
            ;

            .

            <urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef> a nc:ScheduleResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176998c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_224c0d2b970e6ffe119fa4f6717d26a5
    nl_question: List the generating unit that involves f176998f as its rotating machine
      and 24b6fc32 as its schedule resource.
    parameter_bindings:
      $ObjectIdentity(0, cim:RotatingMachine): urn:uuid:f176998f-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:ScheduleResource): urn:uuid:24b6fc32-57fc-4f13-a102-46a4d80826ef
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.RotatingMachine {$ObjectIdentity(0, cim:RotatingMachine)} ;

    nc:GeneratingUnit.ScheduleResource {$ObjectIdentity(1, nc:ScheduleResource)} .

    {$ObjectIdentity(0, cim:RotatingMachine)} a cim:RotatingMachine ;

    .

    {$ObjectIdentity(1, nc:ScheduleResource)} a nc:ScheduleResource ;

    .'
  template_id: template_list_fdb36d89bac10c6c71b2221a8b9f4fe5
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for generatingunit (https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource,
    https://cim4.eu/ns/nc#ScheduleResource.GeneratingUnit) and by filter properties
    none.
  filters: []
  name: List generatingunit by parameters generatingunit and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#GeneratingUnit.ScheduleResource
    - https://cim4.eu/ns/nc#ScheduleResource.GeneratingUnit
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which generating units share the same schedule resource with $ObjectIdentity(0,
    cim:GeneratingUnit)?
  - Identify generating units linked to the same schedule as $ObjectIdentity(0, cim:GeneratingUnit).
  - What generating units are associated with the schedule resource of $ObjectIdentity(0,
    cim:GeneratingUnit)?
  - List all generating units that have the same schedule resource as $ObjectIdentity(0,
    cim:GeneratingUnit).
  - Are there any other generating units sharing the schedule resource with $ObjectIdentity(0,
    cim:GeneratingUnit)?
  questions:
  - expected_steps:
    - - args:
          query: RINGHALSG2
        name: iri_discovery
        output: urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource/nc:ScheduleResource.GeneratingUnit
            <urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_4db70c9a84707d718186e68abcbdf622
    nl_question: Which generating units share the same schedule resource with RINGHALSG2?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a1d-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource/nc:ScheduleResource.GeneratingUnit
            <urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769a2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_7c0c0d32e4d92df05f43a1a4ade12abd
    nl_question: Which generating units share the same schedule resource with f1769a1d-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769a1d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769964
        name: iri_discovery
        output: urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource/nc:ScheduleResource.GeneratingUnit
            <urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176996a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_43a0d7e59cb7204a02afd7cdea93dd10
    nl_question: Are there any other generating units sharing the schedule resource
      with f1769964?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769964-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698ba-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource/nc:ScheduleResource.GeneratingUnit
            <urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_126aaa9c0d857f97f6b8e7b75ec01089
    nl_question: What generating units are associated with the schedule resource of
      f17698ba-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176990e
        name: iri_discovery
        output: urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            nc:GeneratingUnit.ScheduleResource/nc:ScheduleResource.GeneratingUnit
            <urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769907-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_bf481954d278410d7fce9de619b794bf
    nl_question: Identify generating units linked to the same schedule as f176990e.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    nc:GeneratingUnit.ScheduleResource/nc:ScheduleResource.GeneratingUnit {$ObjectIdentity(0,
    cim:GeneratingUnit)} .

    {$ObjectIdentity(0, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_01d0c357562521853f7f111f4375220b
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for controlarea (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit,
    https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit.ControlArea) and by filter
    properties none.
  filters: []
  name: List generatingunit by parameters controlarea and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    - https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit.ControlArea
    type: https://cim.ucaiug.io/ns#ControlArea
  paraphrases:
  - Which generating units are part of the control area $ObjectIdentity(0, cim:ControlArea)?
  - List all generating units associated with the control area $ObjectIdentity(0,
    cim:ControlArea).
  - What generating units belong to the control area $ObjectIdentity(0, cim:ControlArea)?
  - Provide all generating units within the control area $ObjectIdentity(0, cim:ControlArea).
  - Identify the generating units linked to the control area $ObjectIdentity(0, cim:ControlArea).
  questions:
  - expected_steps:
    - - args:
          query: f1769606
        name: iri_discovery
        output: urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.ControlArea
            <urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_115f36bb1e190e02b3b627b523e7c9aa
    nl_question: List all generating units associated with the control area f1769606.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlArea): urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SE CA
        name: iri_discovery
        output: urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.ControlArea
            <urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"generatingunit": {"type": "uri", "value": "urn:uuid:f176987b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_f155e0472b804e645c657602c6f2afe5
    nl_question: Identify the generating units linked to the control area SE CA.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlArea): urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696b0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.ControlArea
            <urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_a41a56dd31fecb25e0f30e10fee7bdf3
    nl_question: Identify the generating units linked to the control area f17696b0-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlArea): urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.ControlArea
    {$ObjectIdentity(0, cim:ControlArea)} .

    {$ObjectIdentity(0, cim:ControlArea)} a cim:ControlArea ;

    .'
  template_id: template_list_0ee93b9b9cd00f67cfc11667a7f3ddd3
- description: A graph pattern which lists all values for generatingunit limited by
    parameters for generatingunit (https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit,
    https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit.GeneratingUnit) and by filter
    properties none.
  filters: []
  name: List generatingunit by parameters generatingunit and filters none
  outputs:
  - name: generatingunit
    type: cim:GeneratingUnit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeneratingUnit.ControlAreaGeneratingUnit
    - https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit.GeneratingUnit
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which generating units are in the same control area as $ObjectIdentity(0, cim:GeneratingUnit)?
  - Identify the generating units sharing a control area with $ObjectIdentity(0, cim:GeneratingUnit).
  - What are the other generating units in the control area of $ObjectIdentity(0,
    cim:GeneratingUnit)?
  - List all generating units in the same control area as $ObjectIdentity(0, cim:GeneratingUnit).
  - The control area of $ObjectIdentity(0, cim:GeneratingUnit) includes which generating
    units?
  questions:
  - expected_steps:
    - - args:
          query: f17698db
        name: iri_discovery
        output: urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.GeneratingUnit
            <urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_00398fe48979484d955392d5e1432070
    nl_question: Which generating units are in the same control area as f17698db?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17698db-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176999b-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.GeneratingUnit
            <urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_b6fc2e7e612f66a7677671bcf42d0061
    nl_question: Which generating units are in the same control area as f176999b-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f176999b-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176997d-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.GeneratingUnit
            <urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_649ced21be10207880017ff3c61ac8f5
    nl_question: Which generating units are in the same control area as f176997d-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f176997d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769841
        name: iri_discovery
        output: urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.GeneratingUnit
            <urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_1a037db943f2966478161e1755eb4cce
    nl_question: Which generating units are in the same control area as f1769841?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769841-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699b9
        name: iri_discovery
        output: urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?generatingunit WHERE {

            ?generatingunit a cim:GeneratingUnit ;

            cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.GeneratingUnit
            <urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["generatingunit"]}, "results": {"bindings": [{"generatingunit":
          {"type": "uri", "value": "urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - generatingunit
    id: question_d0c03637249d596fbe747ebb7684fde2
    nl_question: What are the other generating units in the control area of f17699b9?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17699b9-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?generatingunit a cim:GeneratingUnit ;

    cim:GeneratingUnit.ControlAreaGeneratingUnit/cim:ControlAreaGeneratingUnit.GeneratingUnit
    {$ObjectIdentity(0, cim:GeneratingUnit)} .

    {$ObjectIdentity(0, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_02446fa4820c60b09c6127af3cc8e368
- description: A graph pattern which lists all values for substation limited by parameters
    for none and by filter properties none.
  filters: []
  name: List substation by parameters none and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters: []
  paraphrases:
  - Which entities are classified as substations?
  - List all the substations in the dataset.
  - What are the substations present in the data?
  - Identify all entities that are substations.
  - Can you provide a list of all substations?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_eed33b25224a3941b091c625bec65065
    nl_question: Identify all entities that are substations.
    parameter_bindings: {}
  sparql_template: ?substation a cim:Substation .
  template_id: template_list_0a13d12fe57078c383228ba3296c3a3f
- description: A graph pattern which lists all values for substation limited by parameters
    for subgeographicalregion (https://cim.ucaiug.io/ns#Substation.Region) and by
    filter properties none.
  filters: []
  name: List substation by parameters subgeographicalregion and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  paraphrases:
  - Which substations belong to $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - List all substations in the sub-geographical region $ObjectIdentity(0, cim:SubGeographicalRegion).
  - What are the substations located in $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - Identify the substations that are part of $ObjectIdentity(0, cim:SubGeographicalRegion).
  - Show me all substations within the region $ObjectIdentity(0, cim:SubGeographicalRegion).
  questions:
  - expected_steps:
    - - args:
          query: f1769699-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_30c2fa7d8d4e1be8940b5ec66dc8a818
    nl_question: Which substations belong to f1769699-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SE4 SGR
        name: iri_discovery
        output: urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_317def938dab5b928310c923e81961de
    nl_question: List all substations in the sub-geographical region SE4 SGR.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695cd-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5240d426b78e3d8f3f4adf501636b543
    nl_question: Show me all substations within the region f17695cd-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769619-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_9edb4ab73395cc48b5185d2f4505c2b0
    nl_question: Which substations belong to f1769619-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695c3
        name: iri_discovery
        output: urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_13003ac887a53e980cdf4419c014503d
    nl_question: What are the substations located in f17695c3?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)} .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .'
  template_id: template_list_c5f4bc9ec4617036d12e0f9213659b0f
- description: A graph pattern which lists all values for substation limited by parameters
    for voltagelevel (https://cim.ucaiug.io/ns#Substation.VoltageLevels) and by filter
    properties none.
  filters: []
  name: List substation by parameters voltagelevel and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which voltage levels are associated with the substation containing $ObjectIdentity(0,
    cim:VoltageLevel)?
  - Identify the substation that contains the voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - Which substation does the voltage level $ObjectIdentity(0, cim:VoltageLevel) belong
    to?
  - List the substations associated with voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - What is the substation containing the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  questions:
  - expected_steps:
    - - args:
          query: f176969a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_edca715c8cd9b5e7e9bf42e6cd567840
    nl_question: List the substations associated with voltage level f176969a-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRETTEN 300
        name: iri_discovery
        output: urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_9224a8af4fa756980a0d12fe7f3ef27f
    nl_question: Which voltage levels are associated with the substation containing
      TRETTEN 300?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d4
        name: iri_discovery
        output: urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e657cbb243142a1aa44aff3d4f08967d
    nl_question: Identify the substation that contains the voltage level f17695d4.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: EIDFJORD420
        name: iri_discovery
        output: urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_3e6cca4c48d2ec516806178a758acc40
    nl_question: List the substations associated with voltage level EIDFJORD420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: PORJUS  420
        name: iri_discovery
        output: urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e021ad7cbced2d1dfc4d2eca26a38053
    nl_question: List the substations associated with voltage level PORJUS  420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_e1b011c50c01b5872cc366e355e34c82
- description: A graph pattern which lists all values for substation limited by parameters
    for generatingunit (https://cim.ucaiug.io/rules#hasPart) and by filter properties
    none.
  filters: []
  name: List substation by parameters generatingunit and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which substations include $ObjectIdentity(0, cim:GeneratingUnit) as a part?
  - Identify the substations that have $ObjectIdentity(0, cim:GeneratingUnit) as one
    of their components.
  - What is the substation containing $ObjectIdentity(0, cim:GeneratingUnit)?
  - List the substations that $ObjectIdentity(0, cim:GeneratingUnit) is part of.
  - Which substation is associated with generating unit $ObjectIdentity(0, cim:GeneratingUnit)?
  questions:
  - expected_steps:
    - - args:
          query: f1769934-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cba504d21f6875d4fc5ba6ccddb09714
    nl_question: Which substations include f1769934-9aeb-11e5-91da-b8763fd99c5f as
      a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769934-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a07
        name: iri_discovery
        output: urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c64d8bb0daaa8a922e256ab0cfb201e5
    nl_question: What is the substation containing f1769a07?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769a07-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699d6
        name: iri_discovery
        output: urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_326a89a61ae2b7d0016f419544e2d76f
    nl_question: Which substation is associated with generating unit f17699d6?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RINGHALSG6
        name: iri_discovery
        output: urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_7f5e3d2a0042aaa36380a4de5155668b
    nl_question: Which substations include RINGHALSG6 as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17698c6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698a7
        name: iri_discovery
        output: urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_ab78749034572c13c54b0beddad7c173
    nl_question: Identify the substations that have f17698a7 as one of their components.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17698a7-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPart {$ObjectIdentity(0, cim:GeneratingUnit)} .

    {$ObjectIdentity(0, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_05d6d82147757724bd6b2fbcced8f3ad
- description: A graph pattern which lists all values for substation limited by parameters
    for powertransformer (https://cim.ucaiug.io/rules#hasPart) and by filter properties
    none.
  filters: []
  name: List substation by parameters powertransformer and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which substation contains the power transformer $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the substation that has the power transformer $ObjectIdentity(0, cim:PowerTransformer).
  - What substation is associated with the power transformer $ObjectIdentity(0, cim:PowerTransformer)?
  - In which substation is the power transformer $ObjectIdentity(0, cim:PowerTransformer)
    located?
  - List the substation owning the power transformer $ObjectIdentity(0, cim:PowerTransformer).
  questions:
  - expected_steps:
    - - args:
          query: f1769d7c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4f36df9a47b5db9761c6ff5919d871e1
    nl_question: What substation is associated with the power transformer f1769d7c-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d8e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8f7b2adb450acceb15cd683708b77939
    nl_question: Identify the substation that has the power transformer f1769d8e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KVILLDALT1
        name: iri_discovery
        output: urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_ef69e4c5142276f60b5628239b92638f
    nl_question: What substation is associated with the power transformer KVILLDALT1?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769e1e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_db52a7aa80aad700299947a159ca92b4
    nl_question: List the substation owning the power transformer f1769e1e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769dd6-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769dd6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f1769dd6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769dd6-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e480a5bf0c898b973554295b7f71bcb4
    nl_question: List the substation owning the power transformer f1769dd6-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dd6-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPart {$ObjectIdentity(0, cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_b579e8e2b7e1bf371a6dba415946ce74
- description: A graph pattern which lists all values for substation limited by parameters
    for voltagelevel (https://cim.ucaiug.io/rules#hasPart) and by filter properties
    none.
  filters: []
  name: List substation by parameters voltagelevel and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which substation contains the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the substation that has the voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - What substation is $ObjectIdentity(0, cim:VoltageLevel) a part of?
  - List the substations that include voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - In which substation is the voltage level $ObjectIdentity(0, cim:VoltageLevel)
    located?
  questions:
  - expected_steps:
    - - args:
          query: SANDEFJO420
        name: iri_discovery
        output: urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_27e8c7c5a818724d4f0fae39d19e087f
    nl_question: Identify the substation that has the voltage level SANDEFJO420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 1f4fabd4-8c57-c245-b107-4e64c9007ae3
        name: iri_discovery
        output: urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3> .

            <urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c3f32c47b06cc036d38374a91a6488b9
    nl_question: Which substation contains the voltage level 1f4fabd4-8c57-c245-b107-4e64c9007ae3?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3
  - expected_steps:
    - - args:
          query: f176963e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0470978fcb974d8cae1c880fc9fb8f37
    nl_question: In which substation is the voltage level f176963e-9aeb-11e5-91da-b8763fd99c5f
      located?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695e1
        name: iri_discovery
        output: urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_deb86f980a8aadbaec26bdec9143d5bf
    nl_question: Identify the substation that has the voltage level f17695e1.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ba
        name: iri_discovery
        output: urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPart <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f412dead0f9e451db5aa4e77021cc211
    nl_question: List the substations that include voltage level f17695ba.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPart {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_ae8ac10fc29ecde7ae2e1d96a5a378ab
- description: A graph pattern which lists all values for substation limited by parameters
    for generatingunit (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters generatingunit and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which substations have $ObjectIdentity(0, cim:GeneratingUnit) as part of their
    components?
  - Identify the substations that include $ObjectIdentity(0, cim:GeneratingUnit) in
    their structure.
  - List the substations containing $ObjectIdentity(0, cim:GeneratingUnit) as a component.
  - What substations have $ObjectIdentity(0, cim:GeneratingUnit) as part of their
    equipment?
  - Find the substations associated with $ObjectIdentity(0, cim:GeneratingUnit).
  questions:
  - expected_steps:
    - - args:
          query: f1769873
        name: iri_discovery
        output: urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0075cd4e9aa037401c88faceb4167a55
    nl_question: Find the substations associated with f1769873.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769873-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIANG1
        name: iri_discovery
        output: urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_608961ea93900e1b9c525aca353fc485
    nl_question: What substations have KRISTIANG1 as part of their equipment?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769925-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699d6
        name: iri_discovery
        output: urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_73844935089a735b0cbbc0d9114b7b19
    nl_question: Which substations have f17699d6 as part of their components?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17699d6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: BLAFALLIG4
        name: iri_discovery
        output: urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cf8fdd794136e99e7de0e4ae0be9144b
    nl_question: Identify the substations that include BLAFALLIG4 in their structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769970-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769839-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_103f1c747b666d70d69a426961f1bcf9
    nl_question: What substations have f1769839-9aeb-11e5-91da-b8763fd99c5f as part
      of their equipment?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:GeneratingUnit)} .

    {$ObjectIdentity(0, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_a2d460048508f327a96ebee9d8c5a0ae
- description: A graph pattern which lists all values for substation limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/rules#hasPartTransitive) and by
    filter properties none.
  filters: []
  name: List substation by parameters synchronousmachine and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which substations contain the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the substations that include $ObjectIdentity(0, cim:SynchronousMachine)
    as part of their equipment.
  - List all substations where the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)
    is located.
  - What substations have $ObjectIdentity(0, cim:SynchronousMachine) as a part of
    their components?
  - Find the substations that are associated with the synchronous machine $ObjectIdentity(0,
    cim:SynchronousMachine).
  questions:
  - expected_steps:
    - - args:
          query: f1769834-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2664b8b7653cfac887bc63ba3c3b27fa
    nl_question: What substations have f1769834-9aeb-11e5-91da-b8763fd99c5f as a part
      of their components?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698f4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17698f4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17698f4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698f4-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_afc1f7f99ec863d778747903695f81fc
    nl_question: What substations have f17698f4-9aeb-11e5-91da-b8763fd99c5f as a part
      of their components?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698f4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699d2
        name: iri_discovery
        output: urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cdbaf61f34901310312cb90cc311e2bb
    nl_question: Identify the substations that include f17699d2 as part of their equipment.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MO      300 M2
        name: iri_discovery
        output: urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cb4e9505ed543a0c2a987c093325ee0a
    nl_question: Which substations contain the synchronous machine MO      300 M2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 M3
        name: iri_discovery
        output: urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4d3fae6cb8c3e126023bc7e0db835fc7
    nl_question: Identify the substations that include MALMO   420 M3 as part of their
      equipment.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_9ba7303ed56c24171072f798b9942540
- description: A graph pattern which lists all values for substation limited by parameters
    for powertransformer (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters powertransformer and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which substations contain the power transformer $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the substation that has $ObjectIdentity(0, cim:PowerTransformer) as part
    of its equipment.
  - List the substations that include the power transformer $ObjectIdentity(0, cim:PowerTransformer).
  - What substation is $ObjectIdentity(0, cim:PowerTransformer) a part of?
  - Provide the name of the substation containing the power transformer $ObjectIdentity(0,
    cim:PowerTransformer).
  questions:
  - expected_steps:
    - - args:
          query: f1769dfa-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_bdce11244ef601ee775017fed6cce63b
    nl_question: Identify the substation that has f1769dfa-9aeb-11e5-91da-b8763fd99c5f
      as part of its equipment.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: STAVANGET1
        name: iri_discovery
        output: urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_fdb326d194877a55a73d5fabb7aa3694
    nl_question: What substation is STAVANGET1 a part of?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769dc4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_585126c4e715c3d9f69e243d56a80101
    nl_question: What substation is f1769dc4-9aeb-11e5-91da-b8763fd99c5f a part of?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769db2
        name: iri_discovery
        output: urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5e2cf3f8f88b7491cf62cf1801bd1c8c
    nl_question: Which substations contain the power transformer f1769db2?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d7c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2722887789fc12bf32ba7a7c73eea041
    nl_question: List the substations that include the power transformer f1769d7c-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_1b9b05fea75129b01e4b26a6c09e8b15
- description: A graph pattern which lists all values for substation limited by parameters
    for busbarsection (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters busbarsection and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which substations have $ObjectIdentity(0, cim:BusbarSection) as a part?
  - Identify the substation that includes $ObjectIdentity(0, cim:BusbarSection) as
    part of its equipment.
  - What is the substation containing $ObjectIdentity(0, cim:BusbarSection)?
  - List all substations with $ObjectIdentity(0, cim:BusbarSection) as a transitive
    part.
  - Which substation includes $ObjectIdentity(0, cim:BusbarSection) as one of its
    components?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90155
        name: iri_discovery
        output: urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_78e5340de5fdd2dcd1d5ab62229af887
    nl_question: Which substations have 2dd90155 as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: KVILLDAL300 A
        name: iri_discovery
        output: urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c9625879ed518934bc92bfbbe66c31c2
    nl_question: List all substations with KVILLDAL300 A as a transitive part.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901ad
        name: iri_discovery
        output: urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_70b81deaa4870e9fbf632869c6039940
    nl_question: What is the substation containing 2dd901ad?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_00d952a99045aaf441f63c4efbf64daa
    nl_question: What is the substation containing 2dd901c1-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90165
        name: iri_discovery
        output: urn:uuid:2dd90165-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd90165-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90165-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b7852482b872492975a2ece85425ac5c
    nl_question: What is the substation containing 2dd90165?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90165-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_8646584f6cf41a4be47b25b7376d8db6
- description: A graph pattern which lists all values for substation limited by parameters
    for conformload (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters conformload and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which substations have $ObjectIdentity(0, cim:ConformLoad) as a conform load?
  - Identify the substations that include $ObjectIdentity(0, cim:ConformLoad) as part
    of their connected equipment.
  - What substation contains $ObjectIdentity(0, cim:ConformLoad) as a conform load
    in its hierarchy?
  - List the substations that have $ObjectIdentity(0, cim:ConformLoad) in their structure.
  - Within which substation is $ObjectIdentity(0, cim:ConformLoad) located as a conform
    load?
  questions:
  - expected_steps:
    - - args:
          query: TRETTEN 300 L1
        name: iri_discovery
        output: urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_47a894977bb8a3fded4101e8b4f1568b
    nl_question: Which substations have TRETTEN 300 L1 as a conform load?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769758-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_94321226397b6901d58c453197f36f86
    nl_question: Identify the substations that include f1769758-9aeb-11e5-91da-b8763fd99c5f
      as part of their connected equipment.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176971c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6493b3f037a5a3bc617fcd54730d138b
    nl_question: List the substations that have f176971c-9aeb-11e5-91da-b8763fd99c5f
      in their structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRONDHEI300 L2
        name: iri_discovery
        output: urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a7ea03adfe7df847bffa22f9c16877ba
    nl_question: List the substations that have TRONDHEI300 L2 in their structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSKARSHA420 L2
        name: iri_discovery
        output: urn:uuid:f1769710-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769710-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769710-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_59c9f266c7d59360dcb8c774d2b2b298
    nl_question: List the substations that have OSKARSHA420 L2 in their structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769710-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_277348d4df9ae477f77f59f5ce35015e
- description: A graph pattern which lists all values for substation limited by parameters
    for voltagelevel (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters voltagelevel and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which substation contains the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the substation that has the voltage level $ObjectIdentity(0, cim:VoltageLevel)
    as a part.
  - What is the substation associated with the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  - List the substation that includes $ObjectIdentity(0, cim:VoltageLevel) within
    its parts.
  - In which substation can the voltage level $ObjectIdentity(0, cim:VoltageLevel)
    be found?
  questions:
  - expected_steps:
    - - args:
          query: f17696aa
        name: iri_discovery
        output: urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4db32f7062a5b20265e251157125e9d5
    nl_question: In which substation can the voltage level f17696aa be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KONGSBER420
        name: iri_discovery
        output: urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_58b6dcd243563e4787f59b27a6315d23
    nl_question: Which substation contains the voltage level KONGSBER420?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176963e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_9b8295115f862c5442a5c2244cb4e11f
    nl_question: Which substation contains the voltage level f176963e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769678-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_02a754396a51eedd977a90edc7e0b3f3
    nl_question: Identify the substation that has the voltage level f1769678-9aeb-11e5-91da-b8763fd99c5f
      as a part.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176969a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_50953bd73d223472db6d38a5b39f132f
    nl_question: Which substation contains the voltage level f176969a-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_d333e791c81ec05f54b38be1b305008a
- description: A graph pattern which lists all values for substation limited by parameters
    for substation (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter
    properties none.
  filters: []
  name: List substation by parameters substation and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which substations are connected to $ObjectIdentity(0, cim:Substation)?
  - What other substations are directly connected to $ObjectIdentity(0, cim:Substation)?
  - List all substations connected through any parts to $ObjectIdentity(0, cim:Substation).
  - Identify substations that are linked to $ObjectIdentity(0, cim:Substation).
  - What substations are connected to $ObjectIdentity(0, cim:Substation) through parts?
  questions:
  - expected_steps:
    - - args:
          query: f1769630
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_1645c5b4c650275e22f798435c992ac1
    nl_question: Identify substations that are linked to f1769630.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OULU
        name: iri_discovery
        output: urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4a56520c147bdb0e1bed138a8afca85e
    nl_question: What substations are connected to OULU through parts?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769682
        name: iri_discovery
        output: urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_76657e9bdbb2ff01326b01f014aaaa53
    nl_question: What other substations are directly connected to f1769682?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695df
        name: iri_discovery
        output: urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6de6e623cf13bb9aa97b93b26fa8f509
    nl_question: Identify substations that are linked to f17695df.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695e5-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b38b5174f3c0636e19c2ae84fadb4160
    nl_question: List all substations connected through any parts to f17695e5-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_40403bd0b3b0d723303e1ea22388f8e2
- description: A graph pattern which lists all values for substation limited by parameters
    for voltagelevel (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter
    properties none.
  filters: []
  name: List substation by parameters voltagelevel and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which substations are connected through $ObjectIdentity(0, cim:VoltageLevel)?
  - List all substations that are linked via $ObjectIdentity(0, cim:VoltageLevel).
  - Identify the substations connected through the voltage level $ObjectIdentity(0,
    cim:VoltageLevel).
  - What substations are associated with the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  - Provide the substations that are connected by $ObjectIdentity(0, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_477c28799fc40f738f9e54c36edf6f73
    nl_question: List all substations that are linked via KRISTIAN300.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769656
        name: iri_discovery
        output: urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4ff229764ed7d7b45278139e7f563043
    nl_question: List all substations that are linked via f1769656.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769650
        name: iri_discovery
        output: urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_bb3f5e99e4d179280da5fcd097373f2a
    nl_question: Provide the substations that are connected by f1769650.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: STAVANGE300
        name: iri_discovery
        output: urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_22055d54276727cc2984e71811444aff
    nl_question: List all substations that are linked via STAVANGE300.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769638
        name: iri_discovery
        output: urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_1692ef5a3c0633b4881994fba727caa4
    nl_question: List all substations that are linked via f1769638.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_d793a7af0d3dc195095c7bd870003eb9
- description: A graph pattern which lists all values for substation limited by parameters
    for line (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter properties
    none.
  filters: []
  name: List substation by parameters line and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which substations are connected through the line $ObjectIdentity(0, cim:Line)?
  - List all substations linked via $ObjectIdentity(0, cim:Line).
  - What substations are connected to $ObjectIdentity(0, cim:Line)?
  - Identify substations associated with the line $ObjectIdentity(0, cim:Line).
  - What are the substations connected through $ObjectIdentity(0, cim:Line)?
  questions:
  - expected_steps:
    - - args:
          query: 05685f5b-c14f-3447-a034-333ba7a1c516
        name: iri_discovery
        output: urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516>
            .

            <urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_35fd11f6fe5e6defcfb2d77b55230e3c
    nl_question: Which substations are connected through the line 05685f5b-c14f-3447-a034-333ba7a1c516?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:05685f5b-c14f-3447-a034-333ba7a1c516
  - expected_steps:
    - - args:
          query: 4d521d6f
        name: iri_discovery
        output: urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9>
            .

            <urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0e1ced08b0ea2f007125f0f133f080c1
    nl_question: What are the substations connected through 4d521d6f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:4d521d6f-d6c7-0f45-b963-c02615a150b9
  - expected_steps:
    - - args:
          query: 47332c85
        name: iri_discovery
        output: urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed>
            .

            <urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5828afa946cd39e724147577b2c36827
    nl_question: Which substations are connected through the line 47332c85?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:47332c85-17a4-7a41-abd5-2b92e4b800ed
  - expected_steps:
    - - args:
          query: 181da395
        name: iri_discovery
        output: urn:uuid:181da395-2007-6542-b60a-70968bf2fa38
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:181da395-2007-6542-b60a-70968bf2fa38>
            .

            <urn:uuid:181da395-2007-6542-b60a-70968bf2fa38> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_538a8e757cb4df1a542c61ea40d3aa7f
    nl_question: What are the substations connected through 181da395?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:181da395-2007-6542-b60a-70968bf2fa38
  - expected_steps:
    - - args:
          query: LC 300OSLO-KVILLDAL
        name: iri_discovery
        output: urn:uuid:0fe64e6a-4952-d84a-a4e5-08af6fbce229
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:0fe64e6a-4952-d84a-a4e5-08af6fbce229>
            .

            <urn:uuid:0fe64e6a-4952-d84a-a4e5-08af6fbce229> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_08ba9ac3bf63e81baace5c0c47bd50e2
    nl_question: What are the substations connected through LC 300OSLO-KVILLDAL?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:0fe64e6a-4952-d84a-a4e5-08af6fbce229
  sparql_template: '?substation a cim:Substation ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Line)} .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_0e58a15d35560f390d8b530d3d5f21f0
- description: A graph pattern which lists all values for substation limited by parameters
    for nonconformload (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters nonconformload and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which substations have $ObjectIdentity(0, cim:NonConformLoad) as one of their
    non-conform loads?
  - Identify the substations containing the non-conform load $ObjectIdentity(0, cim:NonConformLoad).
  - What substation includes $ObjectIdentity(0, cim:NonConformLoad) as a part?
  - List the substations that have $ObjectIdentity(0, cim:NonConformLoad) as a non-conform
    load component.
  - In which substation can $ObjectIdentity(0, cim:NonConformLoad) be found?
  questions:
  - expected_steps:
    - - args:
          query: f176978e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_495db691285b835f57c43db43e5cc042
    nl_question: What substation includes f176978e-9aeb-11e5-91da-b8763fd99c5f as
      a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KARLSH  420 L1
        name: iri_discovery
        output: urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4ca63e723dd2127c914ca407c90e49d8
    nl_question: In which substation can KARLSH  420 L1 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ESTLINK 420 L1
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_1bc7ceb222b4e9256c0331f90614c1d9
    nl_question: Identify the substations containing the non-conform load ESTLINK
      420 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697f4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_63d04b7f22385752e8199bed56c6ec4f
    nl_question: In which substation can f17697f4-9aeb-11e5-91da-b8763fd99c5f be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697be-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_151838ecef8ca93688d5c0ce424644be
    nl_question: What substation includes f17697be-9aeb-11e5-91da-b8763fd99c5f as
      a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_4c176697ef8096e4bedfd3995f15154c
- description: A graph pattern which lists all values for substation limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/rules#hasPartTransitive) and
    by filter properties none.
  filters: []
  name: List substation by parameters linearshuntcompensator and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which substations have $ObjectIdentity(0, cim:LinearShuntCompensator) as a part?
  - Identify the substation that contains $ObjectIdentity(0, cim:LinearShuntCompensator)
    as part of its structure.
  - In which substation can $ObjectIdentity(0, cim:LinearShuntCompensator) be found?
  - What is the substation that includes $ObjectIdentity(0, cim:LinearShuntCompensator)
    as one of its components?
  - List the substations that have $ObjectIdentity(0, cim:LinearShuntCompensator)
    within them.
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 300 LSC1
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_672085a9bbd8bcae1c25eafff4130920
    nl_question: In which substation can ARENDAL 300 LSC1 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_3c34233a5ead233141165ab74f0026ab
    nl_question: What is the substation that includes 2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
      as one of its components?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90405
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a02ab74a36b224c8cc386e1c10a3ab71
    nl_question: In which substation can 2dd90405 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_147676cd8f243016148c01a553e528a8
    nl_question: In which substation can 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903c0
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_55b15869b3d4122085123a701e151e89
    nl_question: Identify the substation that contains 2dd903c0 as part of its structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_c157ea5e2c660b0eead689597d1fa63e
- description: A graph pattern which lists all values for substation limited by parameters
    for breaker (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties
    none.
  filters: []
  name: List substation by parameters breaker and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which substation contains breaker $ObjectIdentity(0, cim:Breaker) as part of its
    equipment?
  - Identify the substation that has breaker $ObjectIdentity(0, cim:Breaker) in its
    composition.
  - What is the substation that includes breaker $ObjectIdentity(0, cim:Breaker) as
    one of its components?
  - List the substation associated with breaker $ObjectIdentity(0, cim:Breaker).
  - To which substation does breaker $ObjectIdentity(0, cim:Breaker) belong?
  questions:
  - expected_steps:
    - - args:
          query: dd8be3ea-8ad3-f148-898c-5509662d5159
        name: iri_discovery
        output: urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159>
            .

            <urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_fc82c3496161f534584201814de16a97
    nl_question: Identify the substation that has breaker dd8be3ea-8ad3-f148-898c-5509662d5159
      in its composition.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159
  - expected_steps:
    - - args:
          query: 56013ae5
        name: iri_discovery
        output: urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e>
            .

            <urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a494d112274b98e41795512e33124c0a
    nl_question: Which substation contains breaker 56013ae5 as part of its equipment?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e
  - expected_steps:
    - - args:
          query: 22e5ddcf
        name: iri_discovery
        output: urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2>
            .

            <urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_271e9b1d60b828ca241b1ac17394653f
    nl_question: To which substation does breaker 22e5ddcf belong?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2
  - expected_steps:
    - - args:
          query: 30b297b4-8e19-da40-9f52-fb9175136a22
        name: iri_discovery
        output: urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22>
            .

            <urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5b1bf540aa065c314dac70b013315a35
    nl_question: Which substation contains breaker 30b297b4-8e19-da40-9f52-fb9175136a22
      as part of its equipment?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22
  - expected_steps:
    - - args:
          query: 0d415b1b
        name: iri_discovery
        output: urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e>
            .

            <urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_7d711310d51c08a1cc1dec55fe81257f
    nl_question: List the substation associated with breaker 0d415b1b.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_96a3aa34e7d1f78abdbcb654d85268ee
- description: A graph pattern which lists all values for substation limited by parameters
    for disconnector (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List substation by parameters disconnector and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which substation contains the disconnector $ObjectIdentity(0, cim:Disconnector)
    as part of its equipment?
  - Identify the substations that include the disconnector $ObjectIdentity(0, cim:Disconnector)
    as a transitive part.
  - Find the substation that has the disconnector $ObjectIdentity(0, cim:Disconnector)
    as one of its components.
  - What is the substation associated with the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - List the substations that have $ObjectIdentity(0, cim:Disconnector) as a part
    of their structure.
  questions:
  - expected_steps:
    - - args:
          query: 0192045c-3523-324a-a050-c9dddd6fe2d0
        name: iri_discovery
        output: urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0>
            .

            <urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b987bf5724a062c46fda3b2cf75edb1b
    nl_question: Identify the substations that include the disconnector 0192045c-3523-324a-a050-c9dddd6fe2d0
      as a transitive part.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0
  - expected_steps:
    - - args:
          query: bdc35ecf-da90-de41-9345-b8c4228f63bd
        name: iri_discovery
        output: urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd>
            .

            <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_16ebd4a0e6396839143586a2fa6ac742
    nl_question: Which substation contains the disconnector bdc35ecf-da90-de41-9345-b8c4228f63bd
      as part of its equipment?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
  - expected_steps:
    - - args:
          query: KRISTIAN300G3  BD_S
        name: iri_discovery
        output: urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90>
            .

            <urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_270ce6eee04aa3ee379fdd8e0f6ed567
    nl_question: Identify the substations that include the disconnector KRISTIAN300G3  BD_S
      as a transitive part.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90
  - expected_steps:
    - - args:
          query: KRISTIAN300L2  AD_S
        name: iri_discovery
        output: urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d>
            .

            <urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_74bee4fea62709f3ed36e5ad65b05541
    nl_question: List the substations that have KRISTIAN300L2  AD_S as a part of their
      structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d
  - expected_steps:
    - - args:
          query: ARENDAL 300KR1 AD_S
        name: iri_discovery
        output: urn:uuid:e3672ff8-a637-5046-a7f7-cd1760746ed4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:e3672ff8-a637-5046-a7f7-cd1760746ed4>
            .

            <urn:uuid:e3672ff8-a637-5046-a7f7-cd1760746ed4> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6a896a6186171f2f8593c6ed14fa9798
    nl_question: List the substations that have ARENDAL 300KR1 AD_S as a part of their
      structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:e3672ff8-a637-5046-a7f7-cd1760746ed4
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:Disconnector)} .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_f4e3257de1da0313293d06681d957c22
- description: A graph pattern which lists all values for substation limited by parameters
    for bay (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties
    none.
  filters: []
  name: List substation by parameters bay and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which substations include $ObjectIdentity(0, cim:Bay) as a part?
  - Identify the substations that have $ObjectIdentity(0, cim:Bay) as their part.
  - List all substations containing $ObjectIdentity(0, cim:Bay) as one of their parts.
  - What is the substation that $ObjectIdentity(0, cim:Bay) is a part of?
  - Find the substation that includes $ObjectIdentity(0, cim:Bay) as part of its structure.
  questions:
  - expected_steps:
    - - args:
          query: d965c17e-a3fe-c447-8139-b55a1201b3b3
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b99e5fae66010fc6fe514bda2e339885
    nl_question: Which substations include d965c17e-a3fe-c447-8139-b55a1201b3b3 as
      a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: 95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08>
            .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f1ef68e7a8a40b4620c95a852d4c8e53
    nl_question: Find the substation that includes 95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
      as part of its structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  - expected_steps:
    - - args:
          query: b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b4e2097e794960793dfd63180d5aedb5
    nl_question: List all substations containing b61b6279-c21e-8241-aeb7-8d9bd3ead57c
      as one of their parts.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  - expected_steps:
    - - args:
          query: e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f6a0db9781502b7aafdd86f86ebd3051
    nl_question: Which substations include e5943b0f-8c95-ef4c-a6f6-16b9ace48341 as
      a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  - expected_steps:
    - - args:
          query: bc25cadf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:hasPartTransitive <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf>
            .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2030c0ad067bef0221a7934896fe4ce8
    nl_question: Identify the substations that have bc25cadf as their part.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  sparql_template: '?substation a cim:Substation ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_eb853e34fd35abc9697a2501f9ac3eee
- description: A graph pattern which lists all values for substation limited by parameters
    for bay (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter properties
    none.
  filters: []
  name: List substation by parameters bay and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which substations are connected through $ObjectIdentity(0, cim:Bay)?
  - Identify the substation connected via $ObjectIdentity(0, cim:Bay).
  - What substations are associated with $ObjectIdentity(0, cim:Bay)?
  - List the substations that are connected to $ObjectIdentity(0, cim:Bay).
  - Through which substation is $ObjectIdentity(0, cim:Bay) connected?
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300G3
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_39b05e0b1b4b89ffa57872d656f887dc
    nl_question: Through which substation is KRISTIAN300G3 connected?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: KRISTIAN300ST1
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_bc1de836112364bbd37fac956a6e597d
    nl_question: List the substations that are connected to KRISTIAN300ST1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  - expected_steps:
    - - args:
          query: 9ba118a2
        name: iri_discovery
        output: urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d>
            .

            <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_fb5670ae597cc3bae3cdbfa72ece6f10
    nl_question: List the substations that are connected to 9ba118a2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
  - expected_steps:
    - - args:
          query: 95f000f9
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08>
            .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e2b99ae5a94701b30e6becbc0ec371cf
    nl_question: Through which substation is 95f000f9 connected?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  - expected_steps:
    - - args:
          query: f72994d8
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cimr:connectedThroughPart <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_d851e6ecae850621c91a1fe85a2e9299
    nl_question: What substations are associated with f72994d8?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
  sparql_template: '?substation a cim:Substation ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_4ab0aa7fba0fbbb1ae7ac4fc57785cb5
- description: A graph pattern which lists all values for substation limited by parameters
    for subgeographicalregion (https://cim.ucaiug.io/ns#Substation.Region), voltagelevel
    (https://cim.ucaiug.io/ns#Substation.VoltageLevels) and by filter properties none.
  filters: []
  name: List substation by parameters subgeographicalregion, voltagelevel and filters
    none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which substations in $ObjectIdentity(0, cim:SubGeographicalRegion) contain the
    voltage level $ObjectIdentity(1, cim:VoltageLevel)?
  - List all substations in $ObjectIdentity(0, cim:SubGeographicalRegion) that have
    the voltage level $ObjectIdentity(1, cim:VoltageLevel).
  - Identify the substations in $ObjectIdentity(0, cim:SubGeographicalRegion) associated
    with the voltage level $ObjectIdentity(1, cim:VoltageLevel).
  - What substations with voltage level $ObjectIdentity(1, cim:VoltageLevel) are present
    in $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - Provide substations in $ObjectIdentity(0, cim:SubGeographicalRegion) that include
    voltage level $ObjectIdentity(1, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: f17696cf
        name: iri_discovery
        output: urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17696d0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Substation.VoltageLevels <urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b93231f4804f714aecd14e4af3541e7b
    nl_question: Which substations in f17696cf contain the voltage level f17696d0-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696cf-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695c3
        name: iri_discovery
        output: urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: HJALTA  420
        name: iri_discovery
        output: urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Substation.VoltageLevels <urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_ae43d657dcee562008fcd793feb62348
    nl_question: Identify the substations in f17695c3 associated with the voltage
      level HJALTA  420.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695af
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695f3
        name: iri_discovery
        output: urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Substation.VoltageLevels <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8853bf96495eeeda8cb002871a24c408
    nl_question: Provide substations in f17695af that include voltage level f17695f3.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769619-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: HAGAFOSS420
        name: iri_discovery
        output: urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Substation.VoltageLevels <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_59825eb602d5b18b6454c52f14122ba0
    nl_question: List all substations in f1769619-9aeb-11e5-91da-b8763fd99c5f that
      have the voltage level HAGAFOSS420.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769619
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: EIDFJORD420
        name: iri_discovery
        output: urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Substation.VoltageLevels <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c6c32ad16b694ba8f0e155baf695020e
    nl_question: List all substations in f1769619 that have the voltage level EIDFJORD420.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)} ;

    cim:Substation.VoltageLevels {$ObjectIdentity(1, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .

    {$ObjectIdentity(1, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_7ff5fec9ac5a3c68bc63ef44c8b1050a
- description: A graph pattern which lists all values for substation limited by parameters
    for subgeographicalregion (https://cim.ucaiug.io/ns#Substation.Region), generatingunit
    (https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List substation by parameters subgeographicalregion, generatingunit and filters
    none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which substations in $ObjectIdentity(0, cim:SubGeographicalRegion) contain $ObjectIdentity(1,
    cim:GeneratingUnit) as part of them?
  - Identify the substations in the region $ObjectIdentity(0, cim:SubGeographicalRegion)
    that have $ObjectIdentity(1, cim:GeneratingUnit) as a part.
  - What substations located in $ObjectIdentity(0, cim:SubGeographicalRegion) include
    $ObjectIdentity(1, cim:GeneratingUnit)?
  - List the substations in $ObjectIdentity(0, cim:SubGeographicalRegion) that contain
    $ObjectIdentity(1, cim:GeneratingUnit).
  - Which substations belonging to $ObjectIdentity(0, cim:SubGeographicalRegion) have
    $ObjectIdentity(1, cim:GeneratingUnit) as their component?
  questions:
  - expected_steps:
    - - args:
          query: f17698ba
        name: iri_discovery
        output: urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695af-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_457ce05bd0a832778076b58d25838eb8
    nl_question: Which substations in f17695af-9aeb-11e5-91da-b8763fd99c5f contain
      f17698ba as part of them?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f17698ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   G2
        name: iri_discovery
        output: urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769609-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_84c23df09ed24b49adc3a9e71f25374b
    nl_question: What substations located in f1769609-9aeb-11e5-91da-b8763fd99c5f
      include ASKER   G2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f176991d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   G1
        name: iri_discovery
        output: urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769609
        name: iri_discovery
        output: urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a80070410239838fd502ee5f25078a96
    nl_question: Which substations belonging to f1769609 have ASKER   G1 as their
      component?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769609-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f1769915-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769891-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695af
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b0bbbda2186e6073b65acf6e66eb2f3d
    nl_question: Which substations belonging to f17695af have f1769891-9aeb-11e5-91da-b8763fd99c5f
      as their component?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f1769891-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176995d
        name: iri_discovery
        output: urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: NO2 SGR
        name: iri_discovery
        output: urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region <urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            <urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_969756d7c971550da164bbf7b4952980
    nl_question: Which substations belonging to NO2 SGR have f176995d as their component?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f176965f-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f176995d-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)} ;

    cimr:hasPart {$ObjectIdentity(1, cim:GeneratingUnit)} .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .

    {$ObjectIdentity(1, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_1b0d7acc1e958bff7207608028dfc99c
- description: A graph pattern which lists all values for substation limited by parameters
    for voltagelevel (https://cim.ucaiug.io/ns#Substation.VoltageLevels), generatingunit
    (https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List substation by parameters voltagelevel, generatingunit and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    type: https://cim.ucaiug.io/ns#VoltageLevel
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which substations have the voltage level $ObjectIdentity(0, cim:VoltageLevel)
    and include the generating unit $ObjectIdentity(1, cim:GeneratingUnit)?
  - Identify the substations associated with $ObjectIdentity(0, cim:VoltageLevel)
    that contain the generator $ObjectIdentity(1, cim:GeneratingUnit).
  - List the substations connected to voltage level $ObjectIdentity(0, cim:VoltageLevel)
    and having the generating unit $ObjectIdentity(1, cim:GeneratingUnit).
  - What substations include the voltage level $ObjectIdentity(0, cim:VoltageLevel)
    and the generator $ObjectIdentity(1, cim:GeneratingUnit)?
  - Provide substations that have both the voltage level $ObjectIdentity(0, cim:VoltageLevel)
    and the generating unit $ObjectIdentity(1, cim:GeneratingUnit).
  questions:
  - expected_steps:
    - - args:
          query: f17695ce
        name: iri_discovery
        output: urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: PORJUS G1
        name: iri_discovery
        output: urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6376bb1975c99fafcde4e87c7f862392
    nl_question: What substations include the voltage level f17695ce and the generator
      PORJUS G1?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f1769814-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696b4
        name: iri_discovery
        output: urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17699cf
        name: iri_discovery
        output: urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6abf9dc7415d149530364ce7673ce90d
    nl_question: Identify the substations associated with f17696b4 that contain the
      generator f17699cf.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f17699cf-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695e1-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769839
        name: iri_discovery
        output: urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6af7fc308210ba5b57bf0718881461a7
    nl_question: What substations include the voltage level f17695e1-9aeb-11e5-91da-b8763fd99c5f
      and the generator f1769839?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f1769839-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696d0
        name: iri_discovery
        output: urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769a24-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4625cfe3732dd696ab09400d9a60c054
    nl_question: List the substations connected to voltage level f17696d0 and having
      the generating unit f1769a24-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f1769a24-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696a4
        name: iri_discovery
        output: urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17699a3
        name: iri_discovery
        output: urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels <urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cimr:hasPart <urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c168dec99c4ba9e27b365005eff74736
    nl_question: What substations include the voltage level f17696a4 and the generator
      f17699a3?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:GeneratingUnit): urn:uuid:f17699a3-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels {$ObjectIdentity(0, cim:VoltageLevel)} ;

    cimr:hasPart {$ObjectIdentity(1, cim:GeneratingUnit)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .

    {$ObjectIdentity(1, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_209250fe8453278270ceb1262b016c79
- description: A graph pattern which lists all values for substation limited by parameters
    for diagram (https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects, https://cim.ucaiug.io/ns#DiagramObject.Diagram)
    and by filter properties none.
  filters: []
  name: List substation by parameters diagram and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects
    - https://cim.ucaiug.io/ns#DiagramObject.Diagram
    type: https://cim.ucaiug.io/ns#Diagram
  paraphrases:
  - Which substations are linked to the diagram $ObjectIdentity(0, cim:Diagram)?
  - List all substations associated with the diagram $ObjectIdentity(0, cim:Diagram).
  - What substations are connected to the diagram $ObjectIdentity(0, cim:Diagram)?
  - Identify substations that belong to the diagram $ObjectIdentity(0, cim:Diagram).
  - Provide substations related to the diagram $ObjectIdentity(0, cim:Diagram).
  questions:
  - expected_steps:
    - - args:
          query: fa38b92a-d616-11e5-9a54-c8f73334bf7e
        name: iri_discovery
        output: urn:uuid:fa38b92a-d616-11e5-9a54-c8f73334bf7e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram <urn:uuid:fa38b92a-d616-11e5-9a54-c8f73334bf7e>
            .

            <urn:uuid:fa38b92a-d616-11e5-9a54-c8f73334bf7e> a cim:Diagram ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_1a7c8d7e768da0ac2d4709cabc340fc7
    nl_question: List all substations associated with the diagram fa38b92a-d616-11e5-9a54-c8f73334bf7e.
    parameter_bindings:
      $ObjectIdentity(0, cim:Diagram): urn:uuid:fa38b92a-d616-11e5-9a54-c8f73334bf7e
  - expected_steps:
    - - args:
          query: da3d07e2-aea3-4e5d-811d-7baf6ff02024
        name: iri_discovery
        output: urn:uuid:da3d07e2-aea3-4e5d-811d-7baf6ff02024
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram <urn:uuid:da3d07e2-aea3-4e5d-811d-7baf6ff02024>
            .

            <urn:uuid:da3d07e2-aea3-4e5d-811d-7baf6ff02024> a cim:Diagram ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b4f9ad59ed2b3fb7f96b46d50310371c
    nl_question: Which substations are linked to the diagram da3d07e2-aea3-4e5d-811d-7baf6ff02024?
    parameter_bindings:
      $ObjectIdentity(0, cim:Diagram): urn:uuid:da3d07e2-aea3-4e5d-811d-7baf6ff02024
  - expected_steps:
    - - args:
          query: 4711f609
        name: iri_discovery
        output: urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram <urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d>
            .

            <urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d> a cim:Diagram ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2aed554d5e4f46b29222c0e06fa91cc2
    nl_question: What substations are connected to the diagram 4711f609?
    parameter_bindings:
      $ObjectIdentity(0, cim:Diagram): urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d
  - expected_steps:
    - - args:
          query: 9577b6d2
        name: iri_discovery
        output: urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram <urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147>
            .

            <urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147> a cim:Diagram ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_72547d80fc0b29c86d0587eb56574d01
    nl_question: List all substations associated with the diagram 9577b6d2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Diagram): urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147
  sparql_template: '?substation a cim:Substation ;

    cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram {$ObjectIdentity(0,
    cim:Diagram)} .

    {$ObjectIdentity(0, cim:Diagram)} a cim:Diagram ;

    .'
  template_id: template_list_0b6439935149bead970932698e4ec067
- description: A graph pattern which lists all values for substation limited by parameters
    for diagramobjectpoint (https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects,
    https://cim.ucaiug.io/ns#DiagramObject.DiagramObjectPoints) and by filter properties
    none.
  filters: []
  name: List substation by parameters diagramobjectpoint and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects
    - https://cim.ucaiug.io/ns#DiagramObject.DiagramObjectPoints
    type: https://cim.ucaiug.io/ns#DiagramObjectPoint
  paraphrases:
  - Which substations are associated with the diagram object point $ObjectIdentity(0,
    cim:DiagramObjectPoint)?
  - Identify the substations linked to the diagram object point $ObjectIdentity(0,
    cim:DiagramObjectPoint).
  - What substations correspond to the diagram object point $ObjectIdentity(0, cim:DiagramObjectPoint)?
  - List the substations that have a connection to the diagram object point $ObjectIdentity(0,
    cim:DiagramObjectPoint).
  - Which substations are connected to the diagram object point $ObjectIdentity(0,
    cim:DiagramObjectPoint)?
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:efcbcdd8-38cd-11e8-a5a3-74e5f963e18e
        name: iri_discovery
        output: urn:uuid:efcbcdd8-38cd-11e8-a5a3-74e5f963e18e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:efcbcdd8-38cd-11e8-a5a3-74e5f963e18e> .

            <urn:uuid:efcbcdd8-38cd-11e8-a5a3-74e5f963e18e> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8c2f4de9d00f8abf40bf6acda247ec80
    nl_question: Which substations are connected to the diagram object point urn:uuid:efcbcdd8-38cd-11e8-a5a3-74e5f963e18e?
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:efcbcdd8-38cd-11e8-a5a3-74e5f963e18e
  - expected_steps:
    - - args:
          query: urn:uuid:88d25f52-0f9c-467a-8e32-ecbcb7a2935c
        name: iri_discovery
        output: urn:uuid:88d25f52-0f9c-467a-8e32-ecbcb7a2935c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:88d25f52-0f9c-467a-8e32-ecbcb7a2935c> .

            <urn:uuid:88d25f52-0f9c-467a-8e32-ecbcb7a2935c> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_293cbd96a53cb58047c8bbceb967f4bc
    nl_question: List the substations that have a connection to the diagram object
      point urn:uuid:88d25f52-0f9c-467a-8e32-ecbcb7a2935c.
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:88d25f52-0f9c-467a-8e32-ecbcb7a2935c
  - expected_steps:
    - - args:
          query: urn:uuid:9ac9f799-1520-4c98-9d7e-3ccb9c12e518
        name: iri_discovery
        output: urn:uuid:9ac9f799-1520-4c98-9d7e-3ccb9c12e518
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:9ac9f799-1520-4c98-9d7e-3ccb9c12e518> .

            <urn:uuid:9ac9f799-1520-4c98-9d7e-3ccb9c12e518> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_53e3fa10435288de3a86a9717857eab8
    nl_question: Which substations are connected to the diagram object point urn:uuid:9ac9f799-1520-4c98-9d7e-3ccb9c12e518?
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:9ac9f799-1520-4c98-9d7e-3ccb9c12e518
  - expected_steps:
    - - args:
          query: urn:uuid:efcbcf2c-38cd-11e8-a5a3-74e5f963e18e
        name: iri_discovery
        output: urn:uuid:efcbcf2c-38cd-11e8-a5a3-74e5f963e18e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:efcbcf2c-38cd-11e8-a5a3-74e5f963e18e> .

            <urn:uuid:efcbcf2c-38cd-11e8-a5a3-74e5f963e18e> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a3af8b16d680e8ea422feb974833ef83
    nl_question: Identify the substations linked to the diagram object point urn:uuid:efcbcf2c-38cd-11e8-a5a3-74e5f963e18e.
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:efcbcf2c-38cd-11e8-a5a3-74e5f963e18e
  - expected_steps:
    - - args:
          query: urn:uuid:6c1b8cfa-e292-499c-a0a2-5dc97096a63c
        name: iri_discovery
        output: urn:uuid:6c1b8cfa-e292-499c-a0a2-5dc97096a63c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:6c1b8cfa-e292-499c-a0a2-5dc97096a63c> .

            <urn:uuid:6c1b8cfa-e292-499c-a0a2-5dc97096a63c> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_408b9fae1c7bd7a5b908788570624e45
    nl_question: List the substations that have a connection to the diagram object
      point urn:uuid:6c1b8cfa-e292-499c-a0a2-5dc97096a63c.
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:6c1b8cfa-e292-499c-a0a2-5dc97096a63c
  sparql_template: '?substation a cim:Substation ;

    cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints {$ObjectIdentity(0,
    cim:DiagramObjectPoint)} .

    {$ObjectIdentity(0, cim:DiagramObjectPoint)} a cim:DiagramObjectPoint ;

    .'
  template_id: template_list_d4f6c7bb8b244afae6663b3040a03f00
- description: A graph pattern which lists all values for substation limited by parameters
    for basevoltage (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage)
    and by filter properties none.
  filters: []
  name: List substation by parameters basevoltage and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which substations have the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - Identify the substations associated with the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - List all substations that operate at the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - What substations are linked to the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - Provide a list of substations that utilize the base voltage $ObjectIdentity(0,
    cim:BaseVoltage).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90159
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_bcaf6f01e87ff2aabe678b6838950264
    nl_question: Provide a list of substations that utilize the base voltage 2dd90159.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 300kV
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5820fe7173b1cf72af19b671ed968b19
    nl_question: Identify the substations associated with the base voltage 300kV.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90174
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_56e6b2386704f367741cbd90cb4a9d85
    nl_question: Identify the substations associated with the base voltage 2dd90174.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cim:VoltageLevel.BaseVoltage {$ObjectIdentity(0,
    cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_c5754e37c0f6ca758433cd9ed4541db3
- description: A graph pattern which lists all values for substation limited by parameters
    for bay (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/ns#VoltageLevel.Bays)
    and by filter properties none.
  filters: []
  name: List substation by parameters bay and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/ns#VoltageLevel.Bays
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which bays are part of the voltage levels within $ObjectIdentity(0, cim:Bay)?
  - Identify the substations that have voltage levels including $ObjectIdentity(0,
    cim:Bay).
  - What substations are associated with the bay $ObjectIdentity(0, cim:Bay) within
    their voltage levels?
  - List the substations whose voltage levels contain the bay $ObjectIdentity(0, cim:Bay).
  - From which substation's voltage level does the bay $ObjectIdentity(0, cim:Bay)
    belong?
  questions:
  - expected_steps:
    - - args:
          query: bc25cadf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Bays <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf>
            .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cc48e91856f0d0bbb7ff4092116a4616
    nl_question: List the substations whose voltage levels contain the bay bc25cadf.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  - expected_steps:
    - - args:
          query: e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Bays <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_52e08b0615ff945c6002b83eddf692cd
    nl_question: From which substation's voltage level does the bay e5943b0f-8c95-ef4c-a6f6-16b9ace48341
      belong?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  - expected_steps:
    - - args:
          query: KRISTIAN300ST1
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Bays <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_02f82d6e8822a9677d0d296ab1d6c4ac
    nl_question: What substations are associated with the bay KRISTIAN300ST1 within
      their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  - expected_steps:
    - - args:
          query: b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Bays <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_eee960b7dfee6b63bb84b8d22ce78347
    nl_question: What substations are associated with the bay b61b6279-c21e-8241-aeb7-8d9bd3ead57c
      within their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  - expected_steps:
    - - args:
          query: KRISTIAN300G3
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Bays <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_9b2a921e8f36dc3f6a1de8125245f226
    nl_question: What substations are associated with the bay KRISTIAN300G3 within
      their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cim:VoltageLevel.Bays {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_a0aa88d123d04109fdfe17759ceae3c0
- description: A graph pattern which lists all values for substation limited by parameters
    for substation (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/ns#VoltageLevel.Substation)
    and by filter properties none.
  filters: []
  name: List substation by parameters substation and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which substations share voltage levels with $ObjectIdentity(0, cim:Substation)?
  - What other substations have the same voltage levels as $ObjectIdentity(0, cim:Substation)?
  - List all substations connected through voltage levels to $ObjectIdentity(0, cim:Substation).
  - Identify substations that are associated with the same voltage levels as $ObjectIdentity(0,
    cim:Substation).
  - What substations have voltage levels in common with $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: RINGHALS
        name: iri_discovery
        output: urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Substation <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_326373ce07baae6287b7df690e35af59
    nl_question: Identify substations that are associated with the same voltage levels
      as RINGHALS.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ca-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Substation <urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_719c3c036d4353865f38810f9188254f
    nl_question: What other substations have the same voltage levels as f17696ca-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Substation <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_aa6dbded3cf3050f5564e1aca021f8d6
    nl_question: Identify substations that are associated with the same voltage levels
      as f17695d8-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176968e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Substation <urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_acfd792b13b2b303fb314309e49f72be
    nl_question: Identify substations that are associated with the same voltage levels
      as f176968e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769676-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cim:VoltageLevel.Substation <urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_280210d7cd0517037e648a92badf42f3
    nl_question: Identify substations that are associated with the same voltage levels
      as f1769676-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cim:VoltageLevel.Substation {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_9d86cfa5e07d43e9a09fcca16c43c15b
- description: A graph pattern which lists all values for substation limited by parameters
    for busbarsection (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters busbarsection and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which substations have a voltage level containing $ObjectIdentity(0, cim:BusbarSection)
    as a busbar section?
  - List the substations where $ObjectIdentity(0, cim:BusbarSection) is a part of
    the voltage level.
  - Identify the substations that include $ObjectIdentity(0, cim:BusbarSection) in
    their voltage levels.
  - In which substations is $ObjectIdentity(0, cim:BusbarSection) a part of the voltage
    level?
  - What are the substations whose voltage levels contain $ObjectIdentity(0, cim:BusbarSection)?
  questions:
  - expected_steps:
    - - args:
          query: KONGSBER420 A
        name: iri_discovery
        output: urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6773ef26441a2812a0d6a7cf2b72f3b7
    nl_question: What are the substations whose voltage levels contain KONGSBER420
      A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6c11c7fc7dec145617ed579f2e7fc441
    nl_question: In which substations is 2dd9018d-bdfb-11e5-94fa-c8f73332c8f4 a part
      of the voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9018b
        name: iri_discovery
        output: urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_08ca9b5362f3724f8f1d50b94858be4b
    nl_question: Which substations have a voltage level containing 2dd9018b as a busbar
      section?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90177-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_3871b126eb5cf4bfb8c8a4860f1e447e
    nl_question: Identify the substations that include 2dd90177-bdfb-11e5-94fa-c8f73332c8f4
      in their voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901b3
        name: iri_discovery
        output: urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0fa4ea0e14aa144cf584ad9b6f44ac0d
    nl_question: Which substations have a voltage level containing 2dd901b3 as a busbar
      section?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPart {$ObjectIdentity(0, cim:BusbarSection)}
    .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_a05d77198050f9a012867fcfdb8153c1
- description: A graph pattern which lists all values for substation limited by parameters
    for substation (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#isPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters substation and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What substations are part of the voltage level in $ObjectIdentity(0, cim:Substation)?
  - Which substations belong to the voltage level of $ObjectIdentity(0, cim:Substation)?
  - List the substations associated with the voltage level in $ObjectIdentity(0, cim:Substation).
  - Identify substations that are part of the voltage level of $ObjectIdentity(0,
    cim:Substation).
  - What substations are connected through the voltage level of $ObjectIdentity(0,
    cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: f176966a
        name: iri_discovery
        output: urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPart <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0a029724d078cbf16f0cc6b6fed21415
    nl_question: What substations are part of the voltage level in f176966a?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f1-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPart <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_19fbcc6729ad1d299e415b822a379958
    nl_question: Which substations belong to the voltage level of f17695f1-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696b8
        name: iri_discovery
        output: urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPart <urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a43dc8ee7c4e3372a303bb5816910704
    nl_question: What substations are connected through the voltage level of f17696b8?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HOGASEN
        name: iri_discovery
        output: urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPart <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_6dcfcb5a420c39300f4cd81688ba28fe
    nl_question: What substations are connected through the voltage level of HOGASEN?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRONDHEIM
        name: iri_discovery
        output: urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPart <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_da566fde5bdfed0801437901fea259f0
    nl_question: Identify substations that are part of the voltage level of TRONDHEIM.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:isPart {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_48578f41ac266f06506f72283519c2ee
- description: A graph pattern which lists all values for substation limited by parameters
    for busbarsection (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters busbarsection and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which substation has a voltage level that includes $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the substation containing the voltage level with $ObjectIdentity(0, cim:BusbarSection)
    as part of it.
  - What is the substation associated with the voltage level that contains $ObjectIdentity(0,
    cim:BusbarSection)?
  - List the substations whose voltage levels include $ObjectIdentity(0, cim:BusbarSection).
  - Which substation has $ObjectIdentity(0, cim:BusbarSection) within its voltage
    level structure?
  questions:
  - expected_steps:
    - - args:
          query: KVILLDAL300 A
        name: iri_discovery
        output: urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b65417a9f026890702286451c375db13
    nl_question: Which substation has KVILLDAL300 A within its voltage level structure?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: KARLSH  420 A
        name: iri_discovery
        output: urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5a40ec9c9ef2a09228ddb99418a5221f
    nl_question: Identify the substation containing the voltage level with KARLSH  420
      A as part of it.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8d74c0faff33f843bc202326e0527410
    nl_question: Which substation has 2dd9016a-bdfb-11e5-94fa-c8f73332c8f4 within
      its voltage level structure?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901bb
        name: iri_discovery
        output: urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_787cc5ccbcc6ad84f0ffe58de9eb1f3d
    nl_question: Identify the substation containing the voltage level with 2dd901bb
      as part of it.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: ARRIE   420 A
        name: iri_discovery
        output: urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f83be1211dde817fbd7180122a12a9ed
    nl_question: List the substations whose voltage levels include ARRIE   420 A.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:BusbarSection)}
    .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_ae7fa865df5f3a27bd647ea6b4c5438a
- description: A graph pattern which lists all values for substation limited by parameters
    for substation (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#isPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters substation and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which substations have voltage levels that are part of $ObjectIdentity(0, cim:Substation)?
  - Identify the substations with voltage levels associated with $ObjectIdentity(0,
    cim:Substation).
  - What substations have voltage levels that belong to $ObjectIdentity(0, cim:Substation)?
  - List all substations whose voltage levels are transitive parts of $ObjectIdentity(0,
    cim:Substation).
  - Provide the substations with voltage levels connected to $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: SANDEFJORD
        name: iri_discovery
        output: urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPartTransitive <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e8ec9c69944d817c728b5c69ff93314b
    nl_question: What substations have voltage levels that belong to SANDEFJORD?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769636-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPartTransitive <urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_31cc882e6b43a9bb5ff338d2908fd033
    nl_question: What substations have voltage levels that belong to f1769636-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769630-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPartTransitive <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_9fa357753f7f87647b9bb9e0be5d672a
    nl_question: What substations have voltage levels that belong to f1769630-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769664
        name: iri_discovery
        output: urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPartTransitive <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_02964ab14574b19a72cd47bb4a5204ae
    nl_question: What substations have voltage levels that belong to f1769664?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ae-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:isPartTransitive <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_40ff322632a00b8cd557281c55bd0e30
    nl_question: Identify the substations with voltage levels associated with f17696ae-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:isPartTransitive {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_cb52b744bc9d3e46b334d290179ea093
- description: A graph pattern which lists all values for substation limited by parameters
    for substation (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters substation and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which substations are connected through voltage levels to $ObjectIdentity(0, cim:Substation)?
  - List all substations that have a connection through voltage levels to $ObjectIdentity(0,
    cim:Substation).
  - Identify the substations linked via voltage levels to $ObjectIdentity(0, cim:Substation).
  - What substations are connected to $ObjectIdentity(0, cim:Substation) through voltage
    levels?
  - Provide the substations that are connected through voltage levels to $ObjectIdentity(0,
    cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: ARRIE_HVDC
        name: iri_discovery
        output: urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_d6602aa75fb371c6bc1adc305dd64222
    nl_question: Which substations are connected through voltage levels to ARRIE_HVDC?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ca
        name: iri_discovery
        output: urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f9a106b8bf5a09a611d479b474decda7
    nl_question: What substations are connected to f17696ca through voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695eb
        name: iri_discovery
        output: urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4a7fe77bbb60f619fa627e70d29addad
    nl_question: Which substations are connected through voltage levels to f17695eb?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176967c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f65d92b4edb1b895deeceb5e46b42272
    nl_question: What substations are connected to f176967c-9aeb-11e5-91da-b8763fd99c5f
      through voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ae-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c1ca904cc44065f6f8d578c958f2113c
    nl_question: Provide the substations that are connected through voltage levels
      to f17696ae-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_bc8d38125d82d48b1b55fcfc2eb54229
- description: A graph pattern which lists all values for substation limited by parameters
    for voltagelevel (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters voltagelevel and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which substations have voltage levels connected through $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the substations linked by voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - What substations are connected through the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  - List all substations connected with voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - Find the substations whose voltage level is connected to $ObjectIdentity(0, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: f17695ed-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8f1e374e339d52a8777e5d4397fd481a
    nl_question: Which substations have voltage levels connected through f17695ed-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769684-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f2dedfc5a1bd435653796df4c7c28364
    nl_question: Identify the substations linked by voltage level f1769684-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769632-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_3005f9f2f64427dda00b374aea4fc64c
    nl_question: What substations are connected through the voltage level f1769632-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SIMA    300
        name: iri_discovery
        output: urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_9c9bd10a14fc78f94808789532bbf240
    nl_question: List all substations connected with voltage level SIMA    300.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176960a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8e57573c9323cbd8ef65550cfd58d2ed
    nl_question: Find the substations whose voltage level is connected to f176960a-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:connectedThroughPart {$ObjectIdentity(0, cim:VoltageLevel)}
    .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_a3a30df4ed170e59dbf2ed2278790a20
- description: A graph pattern which lists all values for substation limited by parameters
    for line (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters line and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which substations are connected through voltage levels via $ObjectIdentity(0,
    cim:Line)?
  - Identify substations linked through voltage levels with the line $ObjectIdentity(0,
    cim:Line).
  - What substations have voltage levels connected to $ObjectIdentity(0, cim:Line)?
  - List the substations connected to $ObjectIdentity(0, cim:Line) through voltage
    levels.
  - Through voltage levels, which substations are associated with the line $ObjectIdentity(0,
    cim:Line)?
  questions:
  - expected_steps:
    - - args:
          query: 181da395
        name: iri_discovery
        output: urn:uuid:181da395-2007-6542-b60a-70968bf2fa38
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:181da395-2007-6542-b60a-70968bf2fa38>
            .

            <urn:uuid:181da395-2007-6542-b60a-70968bf2fa38> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0444edecbb879642e5acbd3af24d7b4a
    nl_question: List the substations connected to 181da395 through voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:181da395-2007-6542-b60a-70968bf2fa38
  - expected_steps:
    - - args:
          query: LC 420ARENDAL-SANDEFJORD
        name: iri_discovery
        output: urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337>
            .

            <urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2c058642ac4525390828cf6f862d71fc
    nl_question: What substations have voltage levels connected to LC 420ARENDAL-SANDEFJORD?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337
  - expected_steps:
    - - args:
          query: 49b7d53a
        name: iri_discovery
        output: urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b>
            .

            <urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cd60b16c5ec7ece833ef4cab6a2513d8
    nl_question: What substations have voltage levels connected to 49b7d53a?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:49b7d53a-a5c9-8545-b82d-fdfc8bc8ae6b
  - expected_steps:
    - - args:
          query: c5f535a5-f053-a948-9cee-f6a7b07c7d4f
        name: iri_discovery
        output: urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f>
            .

            <urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5e2d37974d46df18f091dd45466771b0
    nl_question: What substations have voltage levels connected to c5f535a5-f053-a948-9cee-f6a7b07c7d4f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:c5f535a5-f053-a948-9cee-f6a7b07c7d4f
  - expected_steps:
    - - args:
          query: b7134eba-fc6c-cc49-a560-17f37a025b1e
        name: iri_discovery
        output: urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e>
            .

            <urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_92bd9450b9a121a48797f4dd33cf905e
    nl_question: Which substations are connected through voltage levels via b7134eba-fc6c-cc49-a560-17f37a025b1e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:b7134eba-fc6c-cc49-a560-17f37a025b1e
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Line)}
    .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_78a0f2aa2616a39369a5d4ea4be0b934
- description: A graph pattern which lists all values for substation limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters synchronousmachine and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which substation contains the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)
    within its voltage levels?
  - Identify the substation that has $ObjectIdentity(0, cim:SynchronousMachine) as
    a part of its voltage levels.
  - What is the substation associated with the synchronous machine $ObjectIdentity(0,
    cim:SynchronousMachine)?
  - List the substations that include $ObjectIdentity(0, cim:SynchronousMachine) within
    their voltage levels.
  - Which substation is connected to the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)
    in its voltage levels?
  questions:
  - expected_steps:
    - - args:
          query: f1769810-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_36e97dcc659333b737d33ae1e6b32c32
    nl_question: What is the substation associated with the synchronous machine f1769810-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699a6
        name: iri_discovery
        output: urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e5d53e2eee32c09cf5b812bfa76e9611
    nl_question: Which substation is connected to the synchronous machine f17699a6
      in its voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a35-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_543d3139dc6ff47cb73aff145813e5da
    nl_question: Which substation is connected to the synchronous machine f1769a35-9aeb-11e5-91da-b8763fd99c5f
      in its voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769818-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_7baa4295e6fdfb035fab0b600d88fa92
    nl_question: Which substation is connected to the synchronous machine f1769818-9aeb-11e5-91da-b8763fd99c5f
      in its voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRETTEN 300 M2
        name: iri_discovery
        output: urn:uuid:f17698d7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17698d7-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698d7-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_1681ad9fea45961374885d4df53860ee
    nl_question: Which substation contains the synchronous machine TRETTEN 300 M2
      within its voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698d7-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPart {$ObjectIdentity(0, cim:SynchronousMachine)}
    .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_5ef0124ab6c89ad9b8d8f1cbc1f0a18a
- description: A graph pattern which lists all values for substation limited by parameters
    for conformload (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters conformload and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which substations have voltage levels containing $ObjectIdentity(0, cim:ConformLoad)?
  - Identify substations where $ObjectIdentity(0, cim:ConformLoad) is part of a voltage
    level.
  - List the substations with voltage levels that include $ObjectIdentity(0, cim:ConformLoad).
  - In which substations can $ObjectIdentity(0, cim:ConformLoad) be found in the voltage
    levels?
  - Find the substations that have $ObjectIdentity(0, cim:ConformLoad) as part of
    their voltage levels.
  questions:
  - expected_steps:
    - - args:
          query: f17696e6
        name: iri_discovery
        output: urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5e29928b8de45a2f5de0785a095ebe4a
    nl_question: Find the substations that have f17696e6 as part of their voltage
      levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 L1
        name: iri_discovery
        output: urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_7cb81f9dc196881b79cb35c7b66a0c85
    nl_question: Identify substations where MALMO   420 L1 is part of a voltage level.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ec
        name: iri_discovery
        output: urn:uuid:f17696ec-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17696ec-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ec-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_fa3ab4175a1434cfc441055b4f937fd2
    nl_question: Which substations have voltage levels containing f17696ec?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696ec-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769740-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_ce8b8ad2e59dcbc3012f79610172c448
    nl_question: Find the substations that have f1769740-9aeb-11e5-91da-b8763fd99c5f
      as part of their voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696f8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c9b35fc6ed71b547bf9429ebfca01ea3
    nl_question: Which substations have voltage levels containing f17696f8-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPart {$ObjectIdentity(0, cim:ConformLoad)}
    .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_378bea403148b6a696f53ca174d82283
- description: A graph pattern which lists all values for substation limited by parameters
    for bay (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters bay and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - What bays belong to the voltage levels of the substation?
  - Identify the bays that are part of the voltage levels in the substation.
  - List the bays included in the voltage levels of the substation.
  - Which bays are associated with the voltage levels of the substation?
  - Provide details about bays within the voltage levels of the substation.
  questions: []
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_66809ca2835e780bb345cc0702bcb61b
- description: A graph pattern which lists all values for substation limited by parameters
    for breaker (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters breaker and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which substation contains the breaker $ObjectIdentity(0, cim:Breaker) in its voltage
    levels?
  - Identify the substation that includes $ObjectIdentity(0, cim:Breaker) as part
    of its voltage levels.
  - List the substation where $ObjectIdentity(0, cim:Breaker) can be found within
    its voltage levels.
  - What substation holds the breaker $ObjectIdentity(0, cim:Breaker) in its voltage
    levels?
  - Find the substation associated with the breaker $ObjectIdentity(0, cim:Breaker)
    through its voltage levels.
  questions:
  - expected_steps:
    - - args:
          query: a7bb9a3e
        name: iri_discovery
        output: urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042>
            .

            <urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_51d50d3d6cedf7842bf4592e024c9f3f
    nl_question: Identify the substation that includes a7bb9a3e as part of its voltage
      levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042
  - expected_steps:
    - - args:
          query: ARENDAL 300KR2 AB_S
        name: iri_discovery
        output: urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159>
            .

            <urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e3a7ae29a7f214c063e498f7bbec8fe2
    nl_question: Which substation contains the breaker ARENDAL 300KR2 AB_S in its
      voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159
  - expected_steps:
    - - args:
          query: KRISTIAN300G2  AB_S
        name: iri_discovery
        output: urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305>
            .

            <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4cf77a2e8c171ae5cc295a918377e6ef
    nl_question: Identify the substation that includes KRISTIAN300G2  AB_S as part
      of its voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
  - expected_steps:
    - - args:
          query: 0c75da66
        name: iri_discovery
        output: urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253>
            .

            <urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2d09a788226a0fb9a841e469f31ba469
    nl_question: List the substation where 0c75da66 can be found within its voltage
      levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253
  - expected_steps:
    - - args:
          query: fdf147d4
        name: iri_discovery
        output: urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284>
            .

            <urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f5b5229ef12d1faffbed2bfb634efdc8
    nl_question: Find the substation associated with the breaker fdf147d4 through
      its voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Breaker)}
    .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_3ebda90a9b92df2d016d7297946a3d47
- description: A graph pattern which lists all values for substation limited by parameters
    for disconnector (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters disconnector and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which substations contain the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - Identify the substations that have $ObjectIdentity(0, cim:Disconnector) as part
    of their voltage levels.
  - In which substation is the disconnector $ObjectIdentity(0, cim:Disconnector) located?
  - List the substations where $ObjectIdentity(0, cim:Disconnector) is part of the
    voltage levels.
  - What substations include the disconnector $ObjectIdentity(0, cim:Disconnector)
    in their voltage configurations?
  questions:
  - expected_steps:
    - - args:
          query: 3993c419-d9d7-bb4c-8319-6671df77ec90
        name: iri_discovery
        output: urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90>
            .

            <urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4c7f19eb12f2cbef661645b614af6fab
    nl_question: Identify the substations that have 3993c419-d9d7-bb4c-8319-6671df77ec90
      as part of their voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90
  - expected_steps:
    - - args:
          query: bdc35ecf
        name: iri_discovery
        output: urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd>
            .

            <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f3198f5f634130386259b8aea0bf3ec2
    nl_question: Identify the substations that have bdc35ecf as part of their voltage
      levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
  - expected_steps:
    - - args:
          query: ff413319-b126-e444-9e46-3e2268fc19aa
        name: iri_discovery
        output: urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa>
            .

            <urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_0447218af9227c2418a2045a11068d40
    nl_question: In which substation is the disconnector ff413319-b126-e444-9e46-3e2268fc19aa
      located?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa
  - expected_steps:
    - - args:
          query: KRISTIAN300G3  AD_S
        name: iri_discovery
        output: urn:uuid:c9917527-be41-014a-9344-d9df590239e3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:c9917527-be41-014a-9344-d9df590239e3>
            .

            <urn:uuid:c9917527-be41-014a-9344-d9df590239e3> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_315d13e759bfd35dbdc760248637330d
    nl_question: List the substations where KRISTIAN300G3  AD_S is part of the voltage
      levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:c9917527-be41-014a-9344-d9df590239e3
  - expected_steps:
    - - args:
          query: dad36893-9a19-d148-8703-a4f0ddd95077
        name: iri_discovery
        output: urn:uuid:dad36893-9a19-d148-8703-a4f0ddd95077
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:dad36893-9a19-d148-8703-a4f0ddd95077>
            .

            <urn:uuid:dad36893-9a19-d148-8703-a4f0ddd95077> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b4112eaf85547d659b97c3497f090473
    nl_question: Which substations contain the disconnector dad36893-9a19-d148-8703-a4f0ddd95077?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:dad36893-9a19-d148-8703-a4f0ddd95077
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Disconnector)}
    .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_35a2cbdc87b12c5e336aa1af1719adbd
- description: A graph pattern which lists all values for substation limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters synchronousmachine and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which substation contains the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the substation where $ObjectIdentity(0, cim:SynchronousMachine) is located.
  - In which substation can the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)
    be found?
  - List the substation housing the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine).
  - What is the substation associated with the synchronous machine $ObjectIdentity(0,
    cim:SynchronousMachine)?
  questions:
  - expected_steps:
    - - args:
          query: f1769a2e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a987698baf65fe12579c521c18f39cac
    nl_question: Identify the substation where f1769a2e-9aeb-11e5-91da-b8763fd99c5f
      is located.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698ab-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17698ab-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f17698ab-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698ab-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8f84e0368a5de4cfeaab49226009181f
    nl_question: In which substation can the synchronous machine f17698ab-9aeb-11e5-91da-b8763fd99c5f
      be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698ab-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769937-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769937-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f1769937-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769937-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_47eb4187b2f0b0198c6339d18fef21f6
    nl_question: What is the substation associated with the synchronous machine f1769937-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769937-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a04
        name: iri_discovery
        output: urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_d2493d418795658379fbf45acaa9ba70
    nl_question: Identify the substation where f1769a04 is located.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 M6
        name: iri_discovery
        output: urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_be628ee087e2c92d38e9afc637aa720a
    nl_question: Identify the substation where MALMO   420 M6 is located.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:SynchronousMachine)}
    .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_41e77f452d358eb18eb6903d70a67d3c
- description: A graph pattern which lists all values for substation limited by parameters
    for conformload (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters conformload and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which conform loads are part of the voltage levels in the substation?
  - Identify the conform loads associated with the voltage levels in the substation.
  - What conform loads belong to the voltage levels within the substation?
  - List all conform loads that are part of the voltage levels in the substation.
  - What are the conform loads present in the voltage levels of the substation?
  questions: []
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:ConformLoad)}
    .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_32c24a86259042721fdb5585bec2b9c4
- description: A graph pattern which lists all values for substation limited by parameters
    for bay (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters bay and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which substations contain the bay $ObjectIdentity(0, cim:Bay) in their voltage
    levels?
  - Identify the substations where $ObjectIdentity(0, cim:Bay) is part of the voltage
    levels.
  - What substations have the bay $ObjectIdentity(0, cim:Bay) as part of their voltage
    levels?
  - List the substations that include $ObjectIdentity(0, cim:Bay) in their voltage
    levels.
  - In which substations is the bay $ObjectIdentity(0, cim:Bay) located within the
    voltage levels?
  questions:
  - expected_steps:
    - - args:
          query: bc25cadf-543e-8442-a72a-6c11a851d3cf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf>
            .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8d7e91b3153f806cd058067534de365f
    nl_question: Identify the substations where bc25cadf-543e-8442-a72a-6c11a851d3cf
      is part of the voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  - expected_steps:
    - - args:
          query: d965c17e
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5fc400a49097197ef42cde5c88e4a926
    nl_question: List the substations that include d965c17e in their voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: 82c28dce
        name: iri_discovery
        output: urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a>
            .

            <urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2758f8f66941b7be7e33226a67bcbb41
    nl_question: Which substations contain the bay 82c28dce in their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a
  - expected_steps:
    - - args:
          query: e789e752-840f-6244-aca3-735295ad7b1e
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e>
            .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_fd8c5515ec3198ef8b348d25301f6e93
    nl_question: Identify the substations where e789e752-840f-6244-aca3-735295ad7b1e
      is part of the voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: ARENDAL 300AS1
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b3c00fcf629d0da27256760baf2ed0f0
    nl_question: What substations have the bay ARENDAL 300AS1 as part of their voltage
      levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_c4de911508695701c019589455faba94
- description: A graph pattern which lists all values for substation limited by parameters
    for bay (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters bay and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which substations have voltage levels connected through bay $ObjectIdentity(0,
    cim:Bay)?
  - Identify substations with voltage levels that are connected via bay $ObjectIdentity(0,
    cim:Bay).
  - What substations have their voltage levels linked through $ObjectIdentity(0, cim:Bay)?
  - List the substations whose voltage levels are connected to bay $ObjectIdentity(0,
    cim:Bay).
  - Through which substations does voltage level connect to bay $ObjectIdentity(0,
    cim:Bay)?
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 300KR2
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8d29cab63abccca97b1f5707a7c4305a
    nl_question: List the substations whose voltage levels are connected to bay ARENDAL
      300KR2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  - expected_steps:
    - - args:
          query: bd862643
        name: iri_discovery
        output: urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c>
            .

            <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4f8b4b360e896d642f222a4632554157
    nl_question: What substations have their voltage levels linked through bd862643?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
  - expected_steps:
    - - args:
          query: e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4f19517aa9dcad9057306b6ab3f73577
    nl_question: Through which substations does voltage level connect to bay e5943b0f-8c95-ef4c-a6f6-16b9ace48341?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  - expected_steps:
    - - args:
          query: KRISTIAN300G4
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3>
            .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_7724ee2430af60218a86532414765808
    nl_question: What substations have their voltage levels linked through KRISTIAN300G4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
  - expected_steps:
    - - args:
          query: 07a43fc4
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:connectedThroughPart <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a>
            .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e170d5f7d613c252cd1dc9178e4ea232
    nl_question: List the substations whose voltage levels are connected to bay 07a43fc4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_abf2497f55bbb544faed4895b39dcd8a
- description: A graph pattern which lists all values for substation limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/ns#Substation.VoltageLevels,
    https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List substation by parameters linearshuntcompensator and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which substations have a linear shunt compensator identified as $ObjectIdentity(0,
    cim:LinearShuntCompensator)?
  - List the substations containing the linear shunt compensator $ObjectIdentity(0,
    cim:LinearShuntCompensator).
  - Identify the substations where $ObjectIdentity(0, cim:LinearShuntCompensator)
    linear shunt compensator is located.
  - What is the substation that includes the linear shunt compensator $ObjectIdentity(0,
    cim:LinearShuntCompensator)?
  - In which substations can the linear shunt compensator $ObjectIdentity(0, cim:LinearShuntCompensator)
    be found?
  questions:
  - expected_steps:
    - - args:
          query: 2dd903fc
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_87001ff409f069b600a8eaf23204120d
    nl_question: In which substations can the linear shunt compensator 2dd903fc be
      found?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: HAGAFOSS420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_528d365e11f0ac721ac4df590774834e
    nl_question: What is the substation that includes the linear shunt compensator
      HAGAFOSS420 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90408
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f84c9cf53561bb9850a45607af06809a
    nl_question: In which substations can the linear shunt compensator 2dd90408 be
      found?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_4dea716b7f8b63f5ba6d4deb2c055b26
    nl_question: List the substations containing the linear shunt compensator 2dd90405-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903bd
        name: iri_discovery
        output: urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b1de049d28cd5c0173cd9e62e47bb417
    nl_question: List the substations containing the linear shunt compensator 2dd903bd.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPart {$ObjectIdentity(0, cim:LinearShuntCompensator)}
    .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_dc4a0bcf5350995ede548240dfde8817
- description: A graph pattern which lists all values for substation limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/ns#Substation.VoltageLevels,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List substation by parameters linearshuntcompensator and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which substation contains the linear shunt compensator $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the substation that has $ObjectIdentity(0, cim:LinearShuntCompensator)
    as part of its voltage levels.
  - What is the substation that includes the linear shunt compensator $ObjectIdentity(0,
    cim:LinearShuntCompensator)?
  - List the substation linked to the linear shunt compensator $ObjectIdentity(0,
    cim:LinearShuntCompensator).
  - Which substation is associated with voltage levels containing $ObjectIdentity(0,
    cim:LinearShuntCompensator)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_89b2df5c76de206ed188160d431c68b6
    nl_question: Identify the substation that has 2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
      as part of its voltage levels.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5bbb6d112f6255180fc518ab7b7f46e2
    nl_question: What is the substation that includes the linear shunt compensator
      2dd90405-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_30a47ff50e8cdf5631d94254e5127fd8
    nl_question: List the substation linked to the linear shunt compensator 2dd903cc.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903fc
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_b00c119ed8c5cd4d360cd983e722c6fe
    nl_question: List the substation linked to the linear shunt compensator 2dd903fc.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: SKIEN   420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_f830bb98239c5671c1a52aad76913145
    nl_question: List the substation linked to the linear shunt compensator SKIEN   420
      LSC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:LinearShuntCompensator)}
    .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_2c000212f843e3704fc00291b0ca90b3
- description: A graph pattern which lists all values for substation limited by parameters
    for nonconformload (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List substation by parameters nonconformload and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which substations have voltage levels containing the non-conform load $ObjectIdentity(0,
    cim:NonConformLoad)?
  - Identify the substations with voltage levels linked to the non-conform load $ObjectIdentity(0,
    cim:NonConformLoad).
  - What substations include the non-conform load $ObjectIdentity(0, cim:NonConformLoad)
    in their voltage levels?
  - List the substations where the voltage levels are associated with the non-conform
    load $ObjectIdentity(0, cim:NonConformLoad).
  - In which substations is the voltage level connected to the non-conform load $ObjectIdentity(0,
    cim:NonConformLoad)?
  questions:
  - expected_steps:
    - - args:
          query: f17696f2
        name: iri_discovery
        output: urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_90c9612e3faf4251fc8fd8593b23d811
    nl_question: Which substations have voltage levels containing the non-conform
      load f17696f2?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697be-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cdfd9de0209ff321f71e42eb1a61f67c
    nl_question: What substations include the non-conform load f17697be-9aeb-11e5-91da-b8763fd99c5f
      in their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARRIE   420 L1
        name: iri_discovery
        output: urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_e939d50a19ab3441520ae821e551a430
    nl_question: Which substations have voltage levels containing the non-conform
      load ARRIE   420 L1?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIA 300 L1
        name: iri_discovery
        output: urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_eb84dc03cc8b264be05a93d9e2c7040e
    nl_question: Which substations have voltage levels containing the non-conform
      load KRISTIA 300 L1?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176978e
        name: iri_discovery
        output: urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPart <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_5c32d9e4bbf9ebbf1473eee80ca47137
    nl_question: Identify the substations with voltage levels linked to the non-conform
      load f176978e.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPart {$ObjectIdentity(0, cim:NonConformLoad)}
    .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_e116b2b5be6d9ec70ff99e01afc3bc0c
- description: A graph pattern which lists all values for substation limited by parameters
    for nonconformload (https://cim.ucaiug.io/ns#Substation.VoltageLevels, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List substation by parameters nonconformload and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which substations have voltage levels containing the non-conform load $ObjectIdentity(0,
    cim:NonConformLoad)?
  - Identify the substations whose voltage levels include $ObjectIdentity(0, cim:NonConformLoad)
    as a non-conform load.
  - What substations are associated with voltage levels containing the non-conform
    load $ObjectIdentity(0, cim:NonConformLoad)?
  - List all substations with voltage levels that have the non-conform load $ObjectIdentity(0,
    cim:NonConformLoad).
  - Which substations include the non-conform load $ObjectIdentity(0, cim:NonConformLoad)
    in their voltage levels?
  questions:
  - expected_steps:
    - - args:
          query: f176975e
        name: iri_discovery
        output: urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cd7cdf7e36309abbbcf136705efcea3d
    nl_question: Identify the substations whose voltage levels include f176975e as
      a non-conform load.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ESTLINK 420 L1
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2ef33ff60f8f09ed8137612a95668745
    nl_question: What substations are associated with voltage levels containing the
      non-conform load ESTLINK 420 L1?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HELSINKI420 L6
        name: iri_discovery
        output: urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_7f42f478f6cd73d2d6c72bf30b387123
    nl_question: Which substations include the non-conform load HELSINKI420 L6 in
      their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697f4
        name: iri_discovery
        output: urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_a5ca461edbd192e95e888b737b098ae4
    nl_question: What substations are associated with voltage levels containing the
      non-conform load f17697f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697be-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.VoltageLevels/cimr:hasPartTransitive <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_fd57f6e7c893c9d92bb41e0eb76ea069
    nl_question: Which substations include the non-conform load f17697be-9aeb-11e5-91da-b8763fd99c5f
      in their voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.VoltageLevels/cimr:hasPartTransitive {$ObjectIdentity(0, cim:NonConformLoad)}
    .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_ba375dbaf47bee7df88596b160c47331
- description: A graph pattern which lists all values for substation limited by parameters
    for line (https://cim.ucaiug.io/ns#Substation.Region, https://cim.ucaiug.io/ns#SubGeographicalRegion.Lines)
    and by filter properties none.
  filters: []
  name: List substation by parameters line and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.Region
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Lines
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which substations are located in the region of $ObjectIdentity(0, cim:Line)?
  - List the substations connected to the region associated with $ObjectIdentity(0,
    cim:Line).
  - Identify the substations in the region containing $ObjectIdentity(0, cim:Line).
  - What substations are part of the region where $ObjectIdentity(0, cim:Line) is
    located?
  - Provide the names of substations found within the region of $ObjectIdentity(0,
    cim:Line).
  questions:
  - expected_steps:
    - - args:
          query: aefa2609
        name: iri_discovery
        output: urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Lines <urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b>
            .

            <urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_52676a68c0bfee020782ab95e2138de0
    nl_question: Identify the substations in the region containing aefa2609.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b
  - expected_steps:
    - - args:
          query: LC 300AJAURE-MO
        name: iri_discovery
        output: urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Lines <urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e>
            .

            <urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_69fcdd12c867c9b7bf96daf59e718617
    nl_question: Identify the substations in the region containing LC 300AJAURE-MO.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e
  - expected_steps:
    - - args:
          query: f62c7e4e-374c-284f-896e-9b212731a8fc
        name: iri_discovery
        output: urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Lines <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc>
            .

            <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_cd58a8f16528eb1508bb439b3b5a5d93
    nl_question: List the substations connected to the region associated with f62c7e4e-374c-284f-896e-9b212731a8fc.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
  - expected_steps:
    - - args:
          query: ad622f0d
        name: iri_discovery
        output: urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Lines <urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b>
            .

            <urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_27de0e0d9e4bd0e883d8fb7db222123e
    nl_question: What substations are part of the region where ad622f0d is located?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b
  - expected_steps:
    - - args:
          query: 181da395
        name: iri_discovery
        output: urn:uuid:181da395-2007-6542-b60a-70968bf2fa38
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Lines <urn:uuid:181da395-2007-6542-b60a-70968bf2fa38>
            .

            <urn:uuid:181da395-2007-6542-b60a-70968bf2fa38> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_dbd7c20d4fb67ba38fddfe663ae40d65
    nl_question: Identify the substations in the region containing 181da395.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:181da395-2007-6542-b60a-70968bf2fa38
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.Region/cim:SubGeographicalRegion.Lines {$ObjectIdentity(0, cim:Line)}
    .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_607f4ba0e9b1e26168cddd53fa95de95
- description: A graph pattern which lists all values for substation limited by parameters
    for geographicalregion (https://cim.ucaiug.io/ns#Substation.Region, https://cim.ucaiug.io/ns#SubGeographicalRegion.Region)
    and by filter properties none.
  filters: []
  name: List substation by parameters geographicalregion and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.Region
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Region
    type: https://cim.ucaiug.io/ns#GeographicalRegion
  paraphrases:
  - Which substations are located in the geographical region $ObjectIdentity(0, cim:GeographicalRegion)?
  - List all substations belonging to the geographical region $ObjectIdentity(0, cim:GeographicalRegion).
  - What substations are part of $ObjectIdentity(0, cim:GeographicalRegion)?
  - Can you identify the substations in the geographical region $ObjectIdentity(0,
    cim:GeographicalRegion)?
  - Provide the names of substations found within the geographical region $ObjectIdentity(0,
    cim:GeographicalRegion).
  questions:
  - expected_steps:
    - - args:
          query: 2dd9048c
        name: iri_discovery
        output: urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Region <urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4> a cim:GeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176963c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696ca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_2501a1af4f6e8011fde7ec14a3d9a623
    nl_question: List all substations belonging to the geographical region 2dd9048c.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeographicalRegion): urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.Region/cim:SubGeographicalRegion.Region {$ObjectIdentity(0, cim:GeographicalRegion)}
    .

    {$ObjectIdentity(0, cim:GeographicalRegion)} a cim:GeographicalRegion ;

    .'
  template_id: template_list_508ee26e38d84167961058d31ae30cf6
- description: A graph pattern which lists all values for substation limited by parameters
    for substation (https://cim.ucaiug.io/ns#Substation.Region, https://cim.ucaiug.io/ns#SubGeographicalRegion.Substations)
    and by filter properties none.
  filters: []
  name: List substation by parameters substation and filters none
  outputs:
  - name: substation
    type: cim:Substation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Substation.Region
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Substations
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which substations are in the same region as $ObjectIdentity(0, cim:Substation)?
  - List all substations that share a region with $ObjectIdentity(0, cim:Substation).
  - What other substations are located in the same region as $ObjectIdentity(0, cim:Substation)?
  - Identify the substations in the same region with $ObjectIdentity(0, cim:Substation).
  - What are the other substations in the region of $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: f1769676
        name: iri_discovery
        output: urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_ee3a8b218dac99d62e862d4a9cb455ab
    nl_question: What are the other substations in the region of f1769676?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769676-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769636-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_8d5015b9a99c862d2d679d246bf1483b
    nl_question: What other substations are located in the same region as f1769636-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: AURLAND
        name: iri_discovery
        output: urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769636-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_17e02156abf953ada87cfc43f10daaba
    nl_question: What other substations are located in the same region as AURLAND?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176962a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695b8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695f7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_52c6904ca5513ba118653492164c1597
    nl_question: What other substations are located in the same region as f17695b8-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d8
        name: iri_discovery
        output: urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?substation WHERE {

            ?substation a cim:Substation ;

            cim:Substation.Region/cim:SubGeographicalRegion.Substations <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["substation"]}, "results": {"bindings": [{"substation":
          {"type": "uri", "value": "urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"substation": {"type": "uri", "value": "urn:uuid:f17695df-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - substation
    id: question_c4b8d5dfcf414e749b5aa8ba7e2bcf20
    nl_question: What are the other substations in the region of f17695d8?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?substation a cim:Substation ;

    cim:Substation.Region/cim:SubGeographicalRegion.Substations {$ObjectIdentity(0,
    cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_bbab8674500e3ceb56efad5d5248ec17
- description: A graph pattern which lists all values for substation limited by parameters
    for none and by filter properties diagramobject.rotation.
  filters:
  - property: https://cim.ucaiug.io/ns#DiagramObject.rotation
    subject: cim:Substation
    type: xsd:float
  name: List substation by parameters none and filters diagramobject.rotation
  outputs:
  - name: substation
    type: cim:Substation
  parameters: []
  paraphrases:
  - What is the rotation of $ValueFilter(cim:Substation, cim:DiagramObject.rotation,
    xsd:float) for substations?
  - List all substations with a rotation of $ValueFilter(cim:Substation, cim:DiagramObject.rotation,
    xsd:float).
  - Which substations have a rotation value of $ValueFilter(cim:Substation, cim:DiagramObject.rotation,
    xsd:float)?
  - Provide the substations with a diagram object rotation of $ValueFilter(cim:Substation,
    cim:DiagramObject.rotation, xsd:float).
  - Identify the substations with a rotation value of $ValueFilter(cim:Substation,
    cim:DiagramObject.rotation, xsd:float).
  questions: []
  sparql_template: '?substation a cim:Substation ;

    cim:DiagramObject.rotation {$ValueFilter(cim:Substation, cim:DiagramObject.rotation,
    xsd:float)} .'
  template_id: template_list_0f7659d05c072de815160e093ef2c038
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for none and by filter properties none.
  filters: []
  name: List busbarsection by parameters none and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters: []
  paraphrases:
  - What are the busbar sections present in the system?
  - List all the busbar sections in the dataset.
  - Which components in the system are classified as busbar sections?
  - Can you provide the list of busbar sections?
  - Identify all the entities classified as busbar sections.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9017b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90183-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90172-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90170-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9017d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90189-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9015d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9015b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9019f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90185-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90165-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_80f087d2884117a70bbb5626d8fd3f10
    nl_question: Can you provide the list of busbar sections?
    parameter_bindings: {}
  sparql_template: ?busbarsection a cim:BusbarSection .
  template_id: template_list_d7cce03287bf7c82f099bb2e42345e5a
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for voltagelevel (https://cim.ucaiug.io/rules#isPart) and by filter
    properties none.
  filters: []
  name: List busbarsection by parameters voltagelevel and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which busbar sections are part of $ObjectIdentity(0, cim:VoltageLevel)?
  - List all busbar sections that belong to $ObjectIdentity(0, cim:VoltageLevel).
  - Identify the busbar sections included within $ObjectIdentity(0, cim:VoltageLevel).
  - What busbar sections are associated with $ObjectIdentity(0, cim:VoltageLevel)?
  - Can you provide the busbar sections that are part of $ObjectIdentity(0, cim:VoltageLevel)?
  questions:
  - expected_steps:
    - - args:
          query: f17696ba
        name: iri_discovery
        output: urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_2f527b9598685a3fd66c8ec54436a300
    nl_question: Can you provide the busbar sections that are part of f17696ba?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695da-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_b7cf97e4657f967c7b155d3b42ac252e
    nl_question: Identify the busbar sections included within f17695da-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696d0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_04809d5b5a5d534a595f41a402c4e3d3
    nl_question: What busbar sections are associated with f17696d0-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ed
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_45c78bea93854e6082e338453a386137
    nl_question: What busbar sections are associated with f17695ed?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSLO    300
        name: iri_discovery
        output: urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_c2f457c65dc6aefd121fe3d1a32ee4fc
    nl_question: Can you provide the busbar sections that are part of OSLO    300?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:isPart {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_2763e0b8c171a9ef6b66634e06b66fa5
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for substation (https://cim.ucaiug.io/rules#isPartTransitive) and by
    filter properties none.
  filters: []
  name: List busbarsection by parameters substation and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which busbar sections are part of $ObjectIdentity(0, cim:Substation)?
  - Identify all busbar sections that belong to $ObjectIdentity(0, cim:Substation).
  - What are the busbar sections included in $ObjectIdentity(0, cim:Substation)?
  - List the busbar sections that are part of $ObjectIdentity(0, cim:Substation).
  - Provide the busbar sections within $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f1769624-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90183-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_cce81470eb61d7cd321be82a07d2fa66
    nl_question: List the busbar sections that are part of f1769624-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176966a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_fc4c97fab45a757a6e58ea727112caec
    nl_question: Identify all busbar sections that belong to f176966a-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176966a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696c4
        name: iri_discovery
        output: urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_18c6e4ceb7fd12b434c675956aa28c4d
    nl_question: Which busbar sections are part of f17696c4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695eb
        name: iri_discovery
        output: urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_c7f435a7b4cb99b8409d730a00842f3d
    nl_question: Identify all busbar sections that belong to f17695eb.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695eb-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: GEILO
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_24941781f204352f068684322c074d3d
    nl_question: Which busbar sections are part of GEILO?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_7e8c3fc0907dc76c6abd5bfe9bf81f67
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for voltagelevel (https://cim.ucaiug.io/rules#isPartTransitive) and
    by filter properties none.
  filters: []
  name: List busbarsection by parameters voltagelevel and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which busbar sections are part of $ObjectIdentity(0, cim:VoltageLevel)?
  - List all busbar sections that belong to $ObjectIdentity(0, cim:VoltageLevel).
  - What are the busbar sections included in $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the busbar sections that are transitive parts of $ObjectIdentity(0, cim:VoltageLevel).
  - What busbar sections can be found within $ObjectIdentity(0, cim:VoltageLevel)?
  questions:
  - expected_steps:
    - - args:
          query: NARVIK  420
        name: iri_discovery
        output: urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_e8eaa9a7d2f045478404912054c831cd
    nl_question: What busbar sections can be found within NARVIK  420?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769656-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_be01b4f1997e0548d94f60e61452b6d6
    nl_question: What are the busbar sections included in f1769656-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: FEDA    300
        name: iri_discovery
        output: urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_db78a0526be9ad61dae7519abb407ee7
    nl_question: What busbar sections can be found within FEDA    300?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769610
        name: iri_discovery
        output: urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9017b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_5c2f49b9de678267bcdcb70f34e035e8
    nl_question: Which busbar sections are part of f1769610?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696a4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPartTransitive <urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_3efd6077091c6488b08fd38a69c2667b
    nl_question: Which busbar sections are part of f17696a4-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_5321be2f5c328ba746ee782117596316
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for terminal (https://cim.ucaiug.io/rules#Equipment.Terminals) and
    by filter properties none.
  filters: []
  name: List busbarsection by parameters terminal and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Equipment.Terminals
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which busbar sections are connected to terminal $ObjectIdentity(0, cim:Terminal)?
  - Identify the busbar section linked to $ObjectIdentity(0, cim:Terminal).
  - What busbar sections have a connection to terminal $ObjectIdentity(0, cim:Terminal)?
  - List the busbar sections associated with terminal $ObjectIdentity(0, cim:Terminal).
  - Find the busbar section connected through terminal $ObjectIdentity(0, cim:Terminal).
  questions:
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:Equipment.Terminals <urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_bcea12cba05b3be4d091f732b31376a7
    nl_question: List the busbar sections associated with terminal T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9018e
        name: iri_discovery
        output: urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:Equipment.Terminals <urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_d8e22b4162b798b7b115a53ceab5716a
    nl_question: What busbar sections have a connection to terminal 2dd9018e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90176-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:Equipment.Terminals <urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_4bdbfca4d9be38e4913ea28ba4740e16
    nl_question: What busbar sections have a connection to terminal 2dd90176-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 8f8094c3
        name: iri_discovery
        output: urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:Equipment.Terminals <urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213>
            .

            <urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_9f9ae17a97d10100440f3828c37229e0
    nl_question: Find the busbar section connected through terminal 8f8094c3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213
  - expected_steps:
    - - args:
          query: 2dd901a4-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:Equipment.Terminals <urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_9b735c0202a4993e3bb6f1318faeac62
    nl_question: Find the busbar section connected through terminal 2dd901a4-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:Equipment.Terminals {$ObjectIdentity(0, cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_ba82a7dd4bf99e69e731ca85192a9e6a
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for aclinesegment (https://cim.ucaiug.io/rules#connectedTo) and by
    filter properties none.
  filters: []
  name: List busbarsection by parameters aclinesegment and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, cim:ACLineSegment)?
  - Identify the busbar section that is linked to $ObjectIdentity(0, cim:ACLineSegment).
  - What is the busbar section associated with $ObjectIdentity(0, cim:ACLineSegment)?
  - List the busbar sections connected to $ObjectIdentity(0, cim:ACLineSegment).
  - Give me the busbar section that is connected to $ObjectIdentity(0, cim:ACLineSegment).
  questions:
  - expected_steps:
    - - args:
          query: f1769cec
        name: iri_discovery
        output: urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_68e6a1371c999f3b0056ddf3cdacf74f
    nl_question: Which busbar section is connected to f1769cec?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420FORSMARK-JARPSTRO 2
        name: iri_discovery
        output: urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_3eda2a57659b9fb5b25dbc88894738df
    nl_question: Give me the busbar section that is connected to 420FORSMARK-JARPSTRO
      2.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769a64-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a58-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_4d51dcb5848e5b5dd624994148eb5250
    nl_question: Identify the busbar section that is linked to f1769a58-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769a58-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d4c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d4c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769d4c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d4c-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_0f559bdceabddb54ae18b95f501ecd0b
    nl_question: Which busbar section is connected to f1769d4c-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d4c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c20
        name: iri_discovery
        output: urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90183-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_6c31d084722416c151f39edc2cb787e7
    nl_question: List the busbar sections connected to f1769c20.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769c20-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_8222be80f4cbe8fb20fc864ef7e998f0
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for powertransformer (https://cim.ucaiug.io/rules#connectedTo) and
    by filter properties none.
  filters: []
  name: List busbarsection by parameters powertransformer and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the busbar sections linked to $ObjectIdentity(0, cim:PowerTransformer).
  - What busbar sections have a connection to $ObjectIdentity(0, cim:PowerTransformer)?
  - List all busbar sections connected to $ObjectIdentity(0, cim:PowerTransformer).
  - Find the busbar sections associated with $ObjectIdentity(0, cim:PowerTransformer).
  questions:
  - expected_steps:
    - - args:
          query: f1769e42
        name: iri_discovery
        output: urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_4a78687e10828cde47dda8fd02b0ef39
    nl_question: Which busbar sections are connected to f1769e42?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769db2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9017b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_392f3f9360e980fda469727ff06e36db
    nl_question: Find the busbar sections associated with f1769db2-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769de8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_7f4c4e35b23596a03fab63a384b7fd04
    nl_question: Find the busbar sections associated with f1769de8-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769dc4
        name: iri_discovery
        output: urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90183-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90185-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_aa799ef4884aa1c611bc4b7e625689d0
    nl_question: Which busbar sections are connected to f1769dc4?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769da0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90172-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"busbarsection": {"type": "uri", "value": "urn:uuid:2dd90170-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_347f9dd7b184dd6fabda30e2bc48d9ee
    nl_question: Find the busbar sections associated with f1769da0-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_cef3f48390a925d1e9c380241897cbf1
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for busbarsection (https://cim.ucaiug.io/rules#connectedTo) and by
    filter properties none.
  filters: []
  name: List busbarsection by parameters busbarsection and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:BusbarSection)?
  - List all busbar sections that have a connection with $ObjectIdentity(0, cim:BusbarSection).
  - What busbar sections are directly connected to $ObjectIdentity(0, cim:BusbarSection)?
  - Can you identify the busbar sections connected to $ObjectIdentity(0, cim:BusbarSection)?
  - Provide the busbar sections that are linked to $ObjectIdentity(0, cim:BusbarSection).
  questions:
  - expected_steps:
    - - args:
          query: b8666715-5047-5d4d-a882-85fcf5c727b5
        name: iri_discovery
        output: urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> .

            <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_cb7e3a2870ad6ffe14ece5be7a3587b9
    nl_question: What busbar sections are directly connected to b8666715-5047-5d4d-a882-85fcf5c727b5?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
  - expected_steps:
    - - args:
          query: SKIEN   420 A
        name: iri_discovery
        output: urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_0b17129c1069705ddbcc5b5197d0eca1
    nl_question: List all busbar sections that have a connection with SKIEN   420
      A.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901b7
        name: iri_discovery
        output: urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_f63e23f80769c40cffe1dca059b44bdc
    nl_question: Which busbar sections are connected to 2dd901b7?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901b3-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_a2778a17b47edaf7b9b0ebfdd557773e
    nl_question: Provide the busbar sections that are linked to 2dd901b3-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: AJAURE  300 A
        name: iri_discovery
        output: urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_65642862a8236e41d39afb9dd200b472
    nl_question: Can you identify the busbar sections connected to AJAURE  300 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_86d8fd0fdd7df1b9c7384e32364e06df
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for linearshuntcompensator (https://cim.ucaiug.io/rules#connectedTo)
    and by filter properties none.
  filters: []
  name: List busbarsection by parameters linearshuntcompensator and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the busbar sections that have a connection to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What busbar sections are linked to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - List all busbar sections that are connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - Provide the busbar sections connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  questions:
  - expected_steps:
    - - args:
          query: SKIEN   420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_95f5d941ac20af848c83cbe35b2a3a2d
    nl_question: Provide the busbar sections connected to SKIEN   420 LSC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9017b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_e0d667ac192effc1277670f22f7a43c5
    nl_question: Which busbar sections are connected to 2dd903bd-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_313116479ae273115d6d9bf8b50e1af1
    nl_question: Identify the busbar sections that have a connection to 2dd903f9-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: HAGAFOSS420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_5c3235b6c81c376622d402af2838b93d
    nl_question: Which busbar sections are connected to HAGAFOSS420 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90405
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_98b83bdfe3d8f8650fd08e421957ef1d
    nl_question: Identify the busbar sections that have a connection to 2dd90405.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_ec326870cbd8e9e04ae30ca5922bdde8
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for breaker (https://cim.ucaiug.io/rules#connectedTo) and by filter
    properties none.
  filters: []
  name: List busbarsection by parameters breaker and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:Breaker)?
  - Identify the busbar sections that are connected to breaker $ObjectIdentity(0,
    cim:Breaker).
  - What are the busbar sections linked to $ObjectIdentity(0, cim:Breaker)?
  - List all busbar sections connected to breaker $ObjectIdentity(0, cim:Breaker).
  - Can you provide the busbar sections connected with $ObjectIdentity(0, cim:Breaker)?
  questions:
  - expected_steps:
    - - args:
          query: dd8be3ea
        name: iri_discovery
        output: urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159> .

            <urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_1f6092b073b4e58a2a939a48a0818470
    nl_question: Can you provide the busbar sections connected with dd8be3ea?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159
  - expected_steps:
    - - args:
          query: KRISTIAN300G3  AB_S
        name: iri_discovery
        output: urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2> .

            <urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_3116901f3e7745f237ba54fc64613b3d
    nl_question: What are the busbar sections linked to KRISTIAN300G3  AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2
  - expected_steps:
    - - args:
          query: 7113e099
        name: iri_discovery
        output: urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b> .

            <urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_4f0180079d34e02bea443e8718e59944
    nl_question: List all busbar sections connected to breaker 7113e099.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b
  - expected_steps:
    - - args:
          query: KRISTIAN300KV1 AB_S
        name: iri_discovery
        output: urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac> .

            <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_73e156a519b27971775cfc7a596bc702
    nl_question: Can you provide the busbar sections connected with KRISTIAN300KV1
      AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
  - expected_steps:
    - - args:
          query: ARENDAL 300T1  AB_S
        name: iri_discovery
        output: urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5> .

            <urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_1f21d65c7ea4c4ac01aa3d902f9be05c
    nl_question: What are the busbar sections linked to ARENDAL 300T1  AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_4409c9718dd6ecb85aa0c8f9ffe82d8c
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for synchronousmachine (https://cim.ucaiug.io/rules#connectedTo) and
    by filter properties none.
  filters: []
  name: List busbarsection by parameters synchronousmachine and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the busbar section linked to $ObjectIdentity(0, cim:SynchronousMachine).
  - What is the busbar section connected to synchronous machine $ObjectIdentity(0,
    cim:SynchronousMachine)?
  - List the busbar section associated with $ObjectIdentity(0, cim:SynchronousMachine).
  - To which busbar section is $ObjectIdentity(0, cim:SynchronousMachine) connected?
  questions:
  - expected_steps:
    - - args:
          query: f1769a35-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_3928d87f2dace33047cc371849cac0f1
    nl_question: What is the busbar section connected to synchronous machine f1769a35-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699fe-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699fe-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17699fe-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17699fe-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_dbbeb795ad58ba52de9cf22a7a51f67e
    nl_question: Which busbar section is connected to f17699fe-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699fe-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a04
        name: iri_discovery
        output: urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_e89d7c7c779401ab72ac2bccb4250c17
    nl_question: Which busbar section is connected to f1769a04?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a12
        name: iri_discovery
        output: urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_610974b47bdd39a800257bd6e009665a
    nl_question: Identify the busbar section linked to f1769a12.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769902
        name: iri_discovery
        output: urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90183-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_f422287e19d26e5dbaa654c5edbb4fc3
    nl_question: What is the busbar section connected to synchronous machine f1769902?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_3cd37d53f4f1e7d03833f273fb07dfc3
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for conformload (https://cim.ucaiug.io/rules#connectedTo) and by filter
    properties none.
  filters: []
  name: List busbarsection by parameters conformload and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the busbar section associated with $ObjectIdentity(0, cim:ConformLoad).
  - What is the busbar section linked to $ObjectIdentity(0, cim:ConformLoad)?
  - List the busbar sections that are connected to $ObjectIdentity(0, cim:ConformLoad).
  - Which busbar section has a direct connection with $ObjectIdentity(0, cim:ConformLoad)?
  questions:
  - expected_steps:
    - - args:
          query: f17697a0
        name: iri_discovery
        output: urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_868709051a47afc655665e4df75e8bc7
    nl_question: What is the busbar section linked to f17697a0?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: FORSMARK420 L2
        name: iri_discovery
        output: urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_bbdcda773dffee41a5038ca346ef49d9
    nl_question: Which busbar section is connected to FORSMARK420 L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RINGHALS420 L4
        name: iri_discovery
        output: urn:uuid:f1769728-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769728-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769728-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90170-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_b37e25f4eae878ee763f8d9f6e152ee7
    nl_question: Which busbar section has a direct connection with RINGHALS420 L4?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769728-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 L2
        name: iri_discovery
        output: urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_94f024a54a61df91826e2c76d9f3d0ba
    nl_question: List the busbar sections that are connected to MALMO   420 L2.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697dc
        name: iri_discovery
        output: urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_04eb4f72a4285b2669698170d9c6bbfe
    nl_question: Identify the busbar section associated with f17697dc.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_a9220da3ec7ccf9499d7e3a13bce42ad
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for nonconformload (https://cim.ucaiug.io/rules#connectedTo) and by
    filter properties none.
  filters: []
  name: List busbarsection by parameters nonconformload and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the busbar section associated with $ObjectIdentity(0, cim:NonConformLoad).
  - What is the busbar section connected to $ObjectIdentity(0, cim:NonConformLoad)?
  - List all busbar sections linked to $ObjectIdentity(0, cim:NonConformLoad).
  - Find the busbar section that is connected to $ObjectIdentity(0, cim:NonConformLoad).
  questions:
  - expected_steps:
    - - args:
          query: HELSINKI420 L6
        name: iri_discovery
        output: urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_d4c0c2e09f2cadf65aa13e966e491a7a
    nl_question: Find the busbar section that is connected to HELSINKI420 L6.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769764-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_ef6c09903aa75687a4b062212b6c2ff1
    nl_question: Which busbar sections are connected to f1769764-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176978e
        name: iri_discovery
        output: urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_51357297a256c5c2b006588b2ed8806f
    nl_question: Which busbar sections are connected to f176978e?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176972e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90172-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_72a2c2d46841c80a641305e779b6aa66
    nl_question: Which busbar sections are connected to f176972e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697c4
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:connectedTo <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_f7c7c92f6cc4ae4e75487c204b568fef
    nl_question: Identify the busbar section associated with f17697c4.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:connectedTo {$ObjectIdentity(0, cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_18fd68f43fec446d5a76a87d04d836c5
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for voltagelevel (https://cim.ucaiug.io/rules#isPart), substation (https://cim.ucaiug.io/rules#isPartTransitive)
    and by filter properties none.
  filters: []
  name: List busbarsection by parameters voltagelevel, substation and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which busbar sections are part of $ObjectIdentity(0, cim:VoltageLevel) and belong
    to the substation $ObjectIdentity(1, cim:Substation)?
  - List the busbar sections within $ObjectIdentity(0, cim:VoltageLevel) that are
    also part of $ObjectIdentity(1, cim:Substation).
  - What busbar sections are associated with the voltage level $ObjectIdentity(0,
    cim:VoltageLevel) and substation $ObjectIdentity(1, cim:Substation)?
  - Identify all busbar sections included in $ObjectIdentity(0, cim:VoltageLevel)
    and contained in $ObjectIdentity(1, cim:Substation).
  - Provide the busbar sections that belong to $ObjectIdentity(0, cim:VoltageLevel)
    and are part of $ObjectIdentity(1, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f17696dc
        name: iri_discovery
        output: urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: KARLSH_HVDC
        name: iri_discovery
        output: urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_1e8c26e4d9ab2fb0524e0109b6973b02
    nl_question: Identify all busbar sections included in f17696dc and contained in
      KARLSH_HVDC.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:Substation): urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OULU    420
        name: iri_discovery
        output: urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: OULU
        name: iri_discovery
        output: urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_69e638060554a3d9ad328e027d585bf6
    nl_question: Provide the busbar sections that belong to OULU    420 and are part
      of OULU.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:Substation): urn:uuid:f17696c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ce
        name: iri_discovery
        output: urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695c8
        name: iri_discovery
        output: urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_a5412b6d537e0f76b8e65f9d829de210
    nl_question: Which busbar sections are part of f17695ce and belong to the substation
      f17695c8?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:Substation): urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769666
        name: iri_discovery
        output: urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769664
        name: iri_discovery
        output: urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_b4ee72df858c0ed8ee5cb3b8cac42120
    nl_question: Identify all busbar sections included in f1769666 and contained in
      f1769664.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695b0
        name: iri_discovery
        output: urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: FORSMARK
        name: iri_discovery
        output: urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_c4341431a21b499ad3fecf335890f169
    nl_question: What busbar sections are associated with the voltage level f17695b0
      and substation FORSMARK?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:Substation): urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:isPart {$ObjectIdentity(0, cim:VoltageLevel)} ;

    cimr:isPartTransitive {$ObjectIdentity(1, cim:Substation)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .

    {$ObjectIdentity(1, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_8e00ea8716066d4ff2cf2e433df862bb
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for voltagelevel (https://cim.ucaiug.io/rules#isPart), voltagelevel
    (https://cim.ucaiug.io/rules#isPartTransitive) and by filter properties none.
  filters: []
  name: List busbarsection by parameters voltagelevel, voltagelevel and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which busbar sections are parts of $ObjectIdentity(0, cim:VoltageLevel) and transitively
    parts of $ObjectIdentity(1, cim:VoltageLevel)?
  - Identify busbar sections belonging to both $ObjectIdentity(0, cim:VoltageLevel)
    and $ObjectIdentity(1, cim:VoltageLevel) transitively.
  - List the busbar sections that are directly part of $ObjectIdentity(0, cim:VoltageLevel)
    and transitively related to $ObjectIdentity(1, cim:VoltageLevel).
  - What busbar sections are associated with $ObjectIdentity(0, cim:VoltageLevel)
    and transitively linked to $ObjectIdentity(1, cim:VoltageLevel)?
  - Can you provide all busbar sections that are part of $ObjectIdentity(0, cim:VoltageLevel)
    and also transitively belong to $ObjectIdentity(1, cim:VoltageLevel)?
  questions:
  - expected_steps:
    - - args:
          query: f1769610-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: HALDEN  420
        name: iri_discovery
        output: urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9017b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_9b899a685b33ca79ddc037bda804116a
    nl_question: Which busbar sections are parts of f1769610-9aeb-11e5-91da-b8763fd99c5f
      and transitively parts of HALDEN  420?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: JARPSTRO420
        name: iri_discovery
        output: urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695e1
        name: iri_discovery
        output: urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_a74a3fd1ed7f7fb2fbca904fdd701b1f
    nl_question: List the busbar sections that are directly part of JARPSTRO420 and
      transitively related to f17695e1.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SYSLE   420
        name: iri_discovery
        output: urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f176964a
        name: iri_discovery
        output: urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_4888019d68454e12397a9ad726a17653
    nl_question: List the busbar sections that are directly part of SYSLE   420 and
      transitively related to f176964a.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HAGAFOSS420
        name: iri_discovery
        output: urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: HAGAFOSS420
        name: iri_discovery
        output: urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_1d0b124b51cc35648fb869a374923db9
    nl_question: List the busbar sections that are directly part of HAGAFOSS420 and
      transitively related to HAGAFOSS420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176963e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f176963e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cimr:isPart <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> ;

            cimr:isPartTransitive <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_44b20191747b4ad07ecc8bd38dd57614
    nl_question: List the busbar sections that are directly part of f176963e-9aeb-11e5-91da-b8763fd99c5f
      and transitively related to f176963e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cimr:isPart {$ObjectIdentity(0, cim:VoltageLevel)} ;

    cimr:isPartTransitive {$ObjectIdentity(1, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .

    {$ObjectIdentity(1, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_53c0b72ba01886a2627611b15a381dd1
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for connectivitynode (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.ConnectivityNode) and by filter properties none.
  filters: []
  name: List busbarsection by parameters connectivitynode and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - What busbar sections are connected to $ObjectIdentity(0, cim:ConnectivityNode)?
  - Identify the busbar sections associated with the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  - Which busbar sections are linked to the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)?
  - List all busbar sections connected through $ObjectIdentity(0, cim:ConnectivityNode).
  - Provide the busbar sections connected to the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  questions:
  - expected_steps:
    - - args:
          query: 6d29661c
        name: iri_discovery
        output: urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4>
            .

            <urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_d8a028c419d35e36be4234e7aaf43f21
    nl_question: What busbar sections are connected to 6d29661c?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4
  - expected_steps:
    - - args:
          query: f17696a7
        name: iri_discovery
        output: urn:uuid:f17696a7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:f17696a7-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a7-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_442099c9ace52edd8b981ff912b398e1
    nl_question: Provide the busbar sections connected to the connectivity node f17696a7.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17696a7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695a9
        name: iri_discovery
        output: urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_bd8c8f152b570cadee59b120f0b4768d
    nl_question: Identify the busbar sections associated with the connectivity node
      f17695a9.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 'TRETTEN     '
        name: iri_discovery
        output: urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_29ec88cf7feff66983ee66c65ceaafa1
    nl_question: Identify the busbar sections associated with the connectivity node
      TRETTEN     .
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 'FEDA_HVDC   '
        name: iri_discovery
        output: urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_67e1c694a4965b094a199f2d3ca3c4ab
    nl_question: List all busbar sections connected through FEDA_HVDC   .
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode {$ObjectIdentity(0,
    cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_a11c44fc596c60bda59b6d91e99274c8
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for regulatingcontrol (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.RegulatingControl) and by filter properties
    none.
  filters: []
  name: List busbarsection by parameters regulatingcontrol and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.RegulatingControl
    type: https://cim.ucaiug.io/ns#RegulatingControl
  paraphrases:
  - Which busbar sections are associated with the regulating control $ObjectIdentity(0,
    cim:RegulatingControl)?
  - Identify the busbar sections connected to the regulating control $ObjectIdentity(0,
    cim:RegulatingControl).
  - What are the busbar sections linked with $ObjectIdentity(0, cim:RegulatingControl)?
  - List all busbar sections that have a connection to the regulating control $ObjectIdentity(0,
    cim:RegulatingControl).
  - Find the busbar sections related to the regulating control $ObjectIdentity(0,
    cim:RegulatingControl).
  questions:
  - expected_steps:
    - - args:
          query: AJAURE  T1 P C1
        name: iri_discovery
        output: urn:uuid:2dd90443-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl <urn:uuid:2dd90443-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90443-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_ba183c0fed1801e6c85eae9a5ee7d098
    nl_question: Which busbar sections are associated with the regulating control
      AJAURE  T1 P C1?
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:2dd90443-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: f1769960-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769960-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl <urn:uuid:f1769960-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769960-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_8f469ba564a6d7d8ccdffd340a499faa
    nl_question: What are the busbar sections linked with f1769960-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769960-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   300 RC1
        name: iri_discovery
        output: urn:uuid:f1769918-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl <urn:uuid:f1769918-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769918-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_fda5854100d0ff7597e8944e1debe4d7
    nl_question: Which busbar sections are associated with the regulating control
      ASKER   300 RC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769918-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176987e
        name: iri_discovery
        output: urn:uuid:f176987e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl <urn:uuid:f176987e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176987e-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_fa6ba4a25e22e638db53bbc14461bebd
    nl_question: Find the busbar sections related to the regulating control f176987e.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f176987e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 2dd90466
        name: iri_discovery
        output: urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl <urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_e7bb456654b01fdae5b51cec1b822b8a
    nl_question: Identify the busbar sections connected to the regulating control
      2dd90466.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl {$ObjectIdentity(0,
    cim:RegulatingControl)} .

    {$ObjectIdentity(0, cim:RegulatingControl)} a cim:RegulatingControl ;

    .'
  template_id: template_list_828fe6e2af71a2158911d362f9d8dca4
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for svpowerflow (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.SvPowerFlow) and by filter properties none.
  filters: []
  name: List busbarsection by parameters svpowerflow and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    type: https://cim.ucaiug.io/ns#SvPowerFlow
  paraphrases:
  - Which busbar section is associated with the power flow $ObjectIdentity(0, cim:SvPowerFlow)?
  - Identify the busbar section connected to the power flow $ObjectIdentity(0, cim:SvPowerFlow).
  - What is the busbar section linked to the terminal power flow $ObjectIdentity(0,
    cim:SvPowerFlow)?
  - List the busbar sections associated with $ObjectIdentity(0, cim:SvPowerFlow).
  - The power flow $ObjectIdentity(0, cim:SvPowerFlow) is linked to which busbar section?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cim:Terminal.SvPowerFlow {$ObjectIdentity(0,
    cim:SvPowerFlow)} .

    {$ObjectIdentity(0, cim:SvPowerFlow)} a cim:SvPowerFlow ;

    .'
  template_id: template_list_43c4a885de68f15c3405939ace905c1e
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for topologicalnode (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.TopologicalNode) and by filter properties none.
  filters: []
  name: List busbarsection by parameters topologicalnode and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which busbar sections are connected to the topological node $ObjectIdentity(0,
    cim:TopologicalNode)?
  - Identify the busbar sections linked with $ObjectIdentity(0, cim:TopologicalNode).
  - What busbar sections are associated with the topological node $ObjectIdentity(0,
    cim:TopologicalNode)?
  - List all busbar sections connected to the topological node $ObjectIdentity(0,
    cim:TopologicalNode).
  - Find the busbar sections that are part of the topological node $ObjectIdentity(0,
    cim:TopologicalNode).
  questions:
  - expected_steps:
    - - args:
          query: f17695ab
        name: iri_discovery
        output: urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_be719b9ec7bc0e97fefe4b5ba9ad50c0
    nl_question: What busbar sections are associated with the topological node f17695ab?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 47eb7c24
        name: iri_discovery
        output: urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode <urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_0dbe41ff0c5d0d707aa5353cc45e2c0d
    nl_question: What busbar sections are associated with the topological node 47eb7c24?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: GRUNDFORS
        name: iri_discovery
        output: urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode <urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_66fbfcbef4bb75a92688925389b4a704
    nl_question: Find the busbar sections that are part of the topological node GRUNDFORS.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176961f
        name: iri_discovery
        output: urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode <urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_ccf50d312e816defbc02a75a48e5a718
    nl_question: What busbar sections are associated with the topological node f176961f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769695
        name: iri_discovery
        output: urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode <urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_dd75e4f2fdf0ec4b4fd05fd207ea32f4
    nl_question: Which busbar sections are connected to the topological node f1769695?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode {$ObjectIdentity(0,
    cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_d6e246e8a6255457d985b3562b5700f5
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for transformerend (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.TransformerEnd) and by filter properties none.
  filters: []
  name: List busbarsection by parameters transformerend and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.TransformerEnd
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:TransformerEnd)?
  - List the busbar sections linked to $ObjectIdentity(0, cim:TransformerEnd).
  - What busbar sections are associated with transformer end $ObjectIdentity(0, cim:TransformerEnd)?
  - Identify the busbar sections connected to $ObjectIdentity(0, cim:TransformerEnd).
  - Can you provide the busbar sections that are related to $ObjectIdentity(0, cim:TransformerEnd)?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cim:Terminal.TransformerEnd {$ObjectIdentity(0,
    cim:TransformerEnd)} .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_b9a188d82ee16cf075cf9afdeb0dece2
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for pinterminal (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim4.eu/ns/nc#Terminal.PinTerminal) and by filter properties none.
  filters: []
  name: List busbarsection by parameters pinterminal and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim4.eu/ns/nc#Terminal.PinTerminal
    type: https://cim4.eu/ns/nc#PinTerminal
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, nc:PinTerminal) through
    a pin terminal?
  - Identify the busbar sections associated with $ObjectIdentity(0, nc:PinTerminal)
    pin terminal.
  - What busbar section is linked to $ObjectIdentity(0, nc:PinTerminal) via a pin
    terminal?
  - List the busbar sections connected through pin terminal $ObjectIdentity(0, nc:PinTerminal).
  - Find the busbar section connected to $ObjectIdentity(0, nc:PinTerminal).
  questions:
  - expected_steps:
    - - args:
          query: GP KRISTIAN300 A VL
        name: iri_discovery
        output: urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/nc:Terminal.PinTerminal <urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127>
            .

            <urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_df834e720cf2dc0c6f7e05254c065044
    nl_question: Identify the busbar sections associated with GP KRISTIAN300 A VL
      pin terminal.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127
  - expected_steps:
    - - args:
          query: 9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        name: iri_discovery
        output: urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/nc:Terminal.PinTerminal <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2>
            .

            <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_c4b1422aa607ecbe09f38c6e62c96d4f
    nl_question: What busbar section is linked to 9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
      via a pin terminal?
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/nc:Terminal.PinTerminal {$ObjectIdentity(0,
    nc:PinTerminal)} .

    {$ObjectIdentity(0, nc:PinTerminal)} a nc:PinTerminal ;

    .'
  template_id: template_list_6bcd35be13220178bc0aaa8cc6b21e20
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for synchronousmachine (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters synchronousmachine and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the busbar section associated with $ObjectIdentity(0, cim:SynchronousMachine).
  - What is the busbar section linked to the synchronous machine $ObjectIdentity(0,
    cim:SynchronousMachine)?
  - List the busbar section connected to $ObjectIdentity(0, cim:SynchronousMachine).
  - What busbar section has a connection with $ObjectIdentity(0, cim:SynchronousMachine)?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_2ba9a43cad2b78d8d2ee01c9da57a1cf
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for aclinesegment (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters aclinesegment and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which busbar sections are connected to the equipment $ObjectIdentity(0, cim:ACLineSegment)?
  - Identify the busbar sections associated with $ObjectIdentity(0, cim:ACLineSegment).
  - What busbar sections connect to the AC line segment $ObjectIdentity(0, cim:ACLineSegment)?
  - List all busbar sections linked to $ObjectIdentity(0, cim:ACLineSegment).
  - Provide the busbar sections that are connected to $ObjectIdentity(0, cim:ACLineSegment).
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_3c07cce249415cbcb9ae4f95ac3c832d
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for breaker (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters breaker and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:Breaker)?
  - Identify the busbar sections linked to breaker $ObjectIdentity(0, cim:Breaker).
  - What busbar sections are associated with the breaker $ObjectIdentity(0, cim:Breaker)?
  - List all busbar sections connected through terminals to $ObjectIdentity(0, cim:Breaker).
  - Find the busbar sections that have a connection with breaker $ObjectIdentity(0,
    cim:Breaker).
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_087854378ead3dfadf972bbacf297df0
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for disconnector (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters disconnector and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, cim:Disconnector)?
  - Identify the busbar section linked to $ObjectIdentity(0, cim:Disconnector).
  - What busbar section is associated with the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - List the busbar section connected through $ObjectIdentity(0, cim:Disconnector).
  - Which busbar section has a connection to the disconnector $ObjectIdentity(0, cim:Disconnector)?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:Disconnector)} .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_69fb6e410e97cf065624ad1689c8b59d
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for powertransformer (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters powertransformer and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:PowerTransformer)?
  - List all busbar sections associated with $ObjectIdentity(0, cim:PowerTransformer).
  - What busbar sections are connected through terminals to $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the busbar sections linked to $ObjectIdentity(0, cim:PowerTransformer).
  - Provide the busbar sections connected to $ObjectIdentity(0, cim:PowerTransformer).
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_de2862fc565ba49f72e96fc4d8b4a2e6
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for busbarsection (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters busbarsection and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the busbar sections linked to $ObjectIdentity(0, cim:BusbarSection).
  - List the busbar sections that connect to $ObjectIdentity(0, cim:BusbarSection).
  - What are the busbar sections associated with $ObjectIdentity(0, cim:BusbarSection)?
  - Provide the busbar sections connected through terminals to $ObjectIdentity(0,
    cim:BusbarSection).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90199-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_1d6bb708cbb69001dec13cea818aecad
    nl_question: Which busbar sections are connected to 2dd90199-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: SANDEFJO420 A
        name: iri_discovery
        output: urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_2e09b451a3fbf9cb537dcaf91c380966
    nl_question: Which busbar sections are connected to SANDEFJO420 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901a9
        name: iri_discovery
        output: urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_c56a85d3ac58c8c13bbb2127905b2c38
    nl_question: What are the busbar sections associated with 2dd901a9?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90191
        name: iri_discovery
        output: urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_0dc4ee3c8be5bc3b3123da167374125d
    nl_question: What are the busbar sections associated with 2dd90191?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: KVILLDAL300 A
        name: iri_discovery
        output: urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?busbarsection WHERE {

            ?busbarsection a cim:BusbarSection ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["busbarsection"]}, "results": {"bindings": [{"busbarsection":
          {"type": "uri", "value": "urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - busbarsection
    id: question_3087cc18be94e76793c2296e8cddc29d
    nl_question: Provide the busbar sections connected through terminals to KVILLDAL300
      A.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_ad8057628b090b3df5c2202d17935001
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for conformload (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters conformload and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which busbar sections are connected to $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the busbar sections associated with $ObjectIdentity(0, cim:ConformLoad).
  - What busbar section is linked to the conducting equipment of $ObjectIdentity(0,
    cim:ConformLoad)?
  - List the busbar sections connected to the terminal of $ObjectIdentity(0, cim:ConformLoad).
  - Find the busbar sections related to the terminal of $ObjectIdentity(0, cim:ConformLoad).
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_135eec020317c32ab21feb1a03496fa1
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for linearshuntcompensator (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters linearshuntcompensator and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which busbar section is connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the busbar section that is associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What is the busbar section linked to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - List the busbar section connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What busbar section interacts with $ObjectIdentity(0, cim:LinearShuntCompensator)?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_5b9b14e23bd6e9f792fc0c25ec07a488
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for nonconformload (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List busbarsection by parameters nonconformload and filters none
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which busbar section is connected to the terminals of $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the busbar section associated with the terminals of $ObjectIdentity(0,
    cim:NonConformLoad).
  - What busbar section is linked to $ObjectIdentity(0, cim:NonConformLoad) through
    its terminals?
  - List the busbar sections connected to the terminals of $ObjectIdentity(0, cim:NonConformLoad).
  - What is the busbar section associated with $ObjectIdentity(0, cim:NonConformLoad)
    via its terminals?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_344c6f28b7a22ce0ac293a0bc4f6e3c2
- description: A graph pattern which lists all values for busbarsection limited by
    parameters for none and by filter properties svstatus.inservice.
  filters:
  - property: https://cim.ucaiug.io/ns#SvStatus.inService
    subject: cim:BusbarSection
    type: xsd:boolean
  name: List busbarsection by parameters none and filters svstatus.inservice
  outputs:
  - name: busbarsection
    type: cim:BusbarSection
  parameters: []
  paraphrases:
  - Which busbar sections have an in-service status of $ValueFilter(cim:BusbarSection,
    cim:SvStatus.inService, xsd:boolean)?
  - List the busbar sections where the in-service status is $ValueFilter(cim:BusbarSection,
    cim:SvStatus.inService, xsd:boolean).
  - What are the busbar sections with an in-service state of $ValueFilter(cim:BusbarSection,
    cim:SvStatus.inService, xsd:boolean)?
  - Provide the busbar sections that are marked as $ValueFilter(cim:BusbarSection,
    cim:SvStatus.inService, xsd:boolean) in-service.
  - Which busbar sections are currently $ValueFilter(cim:BusbarSection, cim:SvStatus.inService,
    xsd:boolean)?
  questions: []
  sparql_template: '?busbarsection a cim:BusbarSection ;

    cim:SvStatus.inService {$ValueFilter(cim:BusbarSection, cim:SvStatus.inService,
    xsd:boolean)} .'
  template_id: template_list_3d95ba04f78b6836db874debcaa5e8b9
- description: A graph pattern which lists all values for connector limited by parameters
    for none and by filter properties none.
  filters: []
  name: List connector by parameters none and filters none
  outputs:
  - name: connector
    type: cim:Connector
  parameters: []
  paraphrases:
  - What are the connectors in the system?
  - List all the connectors present.
  - Identify the connectors in the network.
  - What connectors can be found in the system?
  - Provide all connectors in the system.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?connector WHERE {

            ?connector a cim:Connector .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["connector"]}, "results": {"bindings": [{"connector":
          {"type": "uri", "value": "urn:uuid:2dd9017b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90183-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90172-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901b3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90170-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9017d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90191-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9018b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901bb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90189-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9019b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9015d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9015b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9019f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90185-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90181-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90165-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901ad-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90155-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90199-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd90177-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"connector": {"type": "uri", "value": "urn:uuid:2dd901a9-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - connector
    id: question_04f49398be33a0b31eb94305f09bf6ce
    nl_question: List all the connectors present.
    parameter_bindings: {}
  sparql_template: ?connector a cim:Connector .
  template_id: template_list_e57d8bab3516acaccfc57e19cf2f93ca
- description: A graph pattern which lists all values for contingency limited by parameters
    for none and by filter properties none.
  filters: []
  name: List contingency by parameters none and filters none
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters: []
  paraphrases:
  - What are the contingencies in the system?
  - List all contingencies.
  - Can you provide the contingencies?
  - Identify the contingencies available.
  - What contingencies exist in the data?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_2f86457e392c6b8ac87c0df885acc6cd
    nl_question: What contingencies exist in the data?
    parameter_bindings: {}
  sparql_template: ?contingency a cim:Contingency .
  template_id: template_list_66d1d386164b8a54de4e2c31d71ed299
- description: A graph pattern which lists all values for contingency limited by parameters
    for contingencyelement (https://cim.ucaiug.io/ns#Contingency.ContingencyElement)
    and by filter properties none.
  filters: []
  name: List contingency by parameters contingencyelement and filters none
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Contingency.ContingencyElement
    type: https://cim.ucaiug.io/ns#ContingencyElement
  paraphrases:
  - Which contingency includes the contingency element $ObjectIdentity(0, cim:ContingencyElement)?
  - Identify the contingency associated with the contingency element $ObjectIdentity(0,
    cim:ContingencyElement).
  - What contingency references $ObjectIdentity(0, cim:ContingencyElement) as its
    contingency element?
  - List the contingency that involves the contingency element $ObjectIdentity(0,
    cim:ContingencyElement).
  - Which contingency is related to $ObjectIdentity(0, cim:ContingencyElement)?
  questions:
  - expected_steps:
    - - args:
          query: CE 300KRISTIAN-ARENDAL
        name: iri_discovery
        output: urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            cim:Contingency.ContingencyElement <urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d>
            .

            <urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d> a cim:ContingencyElement
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_9ce7221ab9751f932da48d1d8e605ebd
    nl_question: List the contingency that involves the contingency element CE 300KRISTIAN-ARENDAL.
    parameter_bindings:
      $ObjectIdentity(0, cim:ContingencyElement): urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
  sparql_template: '?contingency a cim:Contingency ;

    cim:Contingency.ContingencyElement {$ObjectIdentity(0, cim:ContingencyElement)}
    .

    {$ObjectIdentity(0, cim:ContingencyElement)} a cim:ContingencyElement ;

    .'
  template_id: template_list_6d0566af8972d2033b7b0b82571d56e9
- description: A graph pattern which lists all values for contingency limited by parameters
    for systemoperator (https://cim4.eu/ns/nc#Contingency.EquipmentOperator) and by
    filter properties none.
  filters: []
  name: List contingency by parameters systemoperator and filters none
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Contingency.EquipmentOperator
    type: https://cim4.eu/ns/nc#SystemOperator
  paraphrases:
  - What contingencies are managed by $ObjectIdentity(0, nc:SystemOperator)?
  - List all contingencies operated by $ObjectIdentity(0, nc:SystemOperator).
  - Which contingencies fall under the responsibility of $ObjectIdentity(0, nc:SystemOperator)?
  - Identify the contingencies associated with $ObjectIdentity(0, nc:SystemOperator).
  - Provide a list of contingencies that $ObjectIdentity(0, nc:SystemOperator) operates.
  questions:
  - expected_steps:
    - - args:
          query: 50f0783d
        name: iri_discovery
        output: urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            nc:Contingency.EquipmentOperator <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4>
            .

            <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4> a nc:SystemOperator ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_085a91e54123c71ec1cb29beee0a6d16
    nl_question: What contingencies are managed by 50f0783d?
    parameter_bindings:
      $ObjectIdentity(0, nc:SystemOperator): urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.EquipmentOperator {$ObjectIdentity(0, nc:SystemOperator)} .

    {$ObjectIdentity(0, nc:SystemOperator)} a nc:SystemOperator ;

    .'
  template_id: template_list_8d1b0ec5c9459939e24fa77635474eb7
- description: A graph pattern which lists all values for contingency limited by parameters
    for none and by filter properties contingency.muststudy.
  filters:
  - property: https://cim.ucaiug.io/ns#Contingency.mustStudy
    subject: cim:Contingency
    type: xsd:boolean
  name: List contingency by parameters none and filters contingency.muststudy
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters: []
  paraphrases:
  - Which contingencies must be studied with a value of $ValueFilter(cim:Contingency,
    cim:Contingency.mustStudy, xsd:boolean)?
  - List all contingencies marked as mustStudy with $ValueFilter(cim:Contingency,
    cim:Contingency.mustStudy, xsd:boolean).
  - What contingencies have their mustStudy flag set to $ValueFilter(cim:Contingency,
    cim:Contingency.mustStudy, xsd:boolean)?
  - Provide all contingencies where the mustStudy property is $ValueFilter(cim:Contingency,
    cim:Contingency.mustStudy, xsd:boolean).
  - Identify contingencies that require studying with a mustStudy value of $ValueFilter(cim:Contingency,
    cim:Contingency.mustStudy, xsd:boolean).
  questions: []
  sparql_template: '?contingency a cim:Contingency ;

    cim:Contingency.mustStudy {$ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)} .'
  template_id: template_list_f17a99e7d4cc3bc2d8d9711947896f24
- description: A graph pattern which lists all values for contingency limited by parameters
    for none and by filter properties contingency.normalmuststudy.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.normalMustStudy
    subject: cim:Contingency
    type: xsd:boolean
  name: List contingency by parameters none and filters contingency.normalmuststudy
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters: []
  paraphrases:
  - Which contingencies have a normal must-study value of $ValueFilter(cim:Contingency,
    nc:Contingency.normalMustStudy, xsd:boolean)?
  - List all contingencies with normalMustStudy set to $ValueFilter(cim:Contingency,
    nc:Contingency.normalMustStudy, xsd:boolean).
  - Identify the contingencies where normalMustStudy is $ValueFilter(cim:Contingency,
    nc:Contingency.normalMustStudy, xsd:boolean).
  - What are the contingencies with a normalMustStudy value of $ValueFilter(cim:Contingency,
    nc:Contingency.normalMustStudy, xsd:boolean)?
  - Provide the contingencies that have normalMustStudy equal to $ValueFilter(cim:Contingency,
    nc:Contingency.normalMustStudy, xsd:boolean).
  questions: []
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.normalMustStudy {$ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)} .'
  template_id: template_list_8325ff2513d3f1d409ec09bad7acd804
- description: A graph pattern which lists all values for contingency limited by parameters
    for none and by filter properties contingency.normalprobability.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.normalProbability
    subject: cim:Contingency
    type: xsd:float
  name: List contingency by parameters none and filters contingency.normalprobability
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters: []
  paraphrases:
  - What contingencies have a normal probability of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float)?
  - Identify the contingencies with a normal probability of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float).
  - Which contingencies are associated with a normal probability of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float)?
  - List all contingencies having a normal probability value of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float).
  - Provide the contingencies with a normal probability of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            nc:Contingency.normalProbability "100"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_bcd3259b55eab4c895dd870d976627e7
    nl_question: What contingencies have a normal probability of 100?
    parameter_bindings:
      $ValueFilter(cim:Contingency, nc:Contingency.normalProbability, xsd:float): '100'
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.normalProbability {$ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)} .'
  template_id: template_list_88091bd0f4dfcf58af8f958eb592e259
- description: A graph pattern which lists all values for contingency limited by parameters
    for none and by filter properties contingency.probability.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.probability
    subject: cim:Contingency
    type: xsd:float
  name: List contingency by parameters none and filters contingency.probability
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters: []
  paraphrases:
  - Which contingencies have a probability of $ValueFilter(cim:Contingency, nc:Contingency.probability,
    xsd:float)?
  - List the contingencies with a probability value of $ValueFilter(cim:Contingency,
    nc:Contingency.probability, xsd:float).
  - What contingencies are associated with a probability of $ValueFilter(cim:Contingency,
    nc:Contingency.probability, xsd:float)?
  - Identify contingencies with a probability equal to $ValueFilter(cim:Contingency,
    nc:Contingency.probability, xsd:float).
  - Provide a list of contingencies that have a probability of $ValueFilter(cim:Contingency,
    nc:Contingency.probability, xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            nc:Contingency.probability "100"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_8556ceca6b0c63991736aa34c17f6503
    nl_question: What contingencies are associated with a probability of 100?
    parameter_bindings:
      $ValueFilter(cim:Contingency, nc:Contingency.probability, xsd:float): '100'
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.probability {$ValueFilter(cim:Contingency, nc:Contingency.probability,
    xsd:float)} .'
  template_id: template_list_34c8d66308eb3379caaf69c1ede9481f
- description: A graph pattern which lists all values for contingency limited by parameters
    for contingencyelement (https://cim.ucaiug.io/ns#Contingency.ContingencyElement)
    and by filter properties contingency.muststudy.
  filters:
  - property: https://cim.ucaiug.io/ns#Contingency.mustStudy
    subject: cim:Contingency
    type: xsd:boolean
  name: List contingency by parameters contingencyelement and filters contingency.muststudy
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Contingency.ContingencyElement
    type: https://cim.ucaiug.io/ns#ContingencyElement
  paraphrases:
  - Which contingencies involve $ObjectIdentity(0, cim:ContingencyElement) and must
    be studied with status $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)?
  - List all contingencies that include $ObjectIdentity(0, cim:ContingencyElement)
    and have must-study set to $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean).
  - What are the contingencies containing $ObjectIdentity(0, cim:ContingencyElement)
    where must-study is $ValueFilter(cim:Contingency, cim:Contingency.mustStudy, xsd:boolean)?
  - Can you provide contingencies linked to $ObjectIdentity(0, cim:ContingencyElement)
    with a must-study value of $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)?
  - Identify the contingencies associated with $ObjectIdentity(0, cim:ContingencyElement)
    that have must-study marked as $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean).
  questions: []
  sparql_template: '?contingency a cim:Contingency ;

    cim:Contingency.ContingencyElement {$ObjectIdentity(0, cim:ContingencyElement)}
    ;

    cim:Contingency.mustStudy {$ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)} .

    {$ObjectIdentity(0, cim:ContingencyElement)} a cim:ContingencyElement ;

    .'
  template_id: template_list_6293fc3dc1e8eb4473a89a5e881b7ece
- description: A graph pattern which lists all values for contingency limited by parameters
    for contingencyelement (https://cim.ucaiug.io/ns#Contingency.ContingencyElement)
    and by filter properties contingency.normalmuststudy.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.normalMustStudy
    subject: cim:Contingency
    type: xsd:boolean
  name: List contingency by parameters contingencyelement and filters contingency.normalmuststudy
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Contingency.ContingencyElement
    type: https://cim.ucaiug.io/ns#ContingencyElement
  paraphrases:
  - Which contingencies include the contingency element $ObjectIdentity(0, cim:ContingencyElement)
    and have a 'normal must study' status of $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)?
  - List the contingencies that involve $ObjectIdentity(0, cim:ContingencyElement)
    and have the normalMustStudy property set to $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean).
  - What are the contingencies associated with $ObjectIdentity(0, cim:ContingencyElement)
    having a 'normal must study' value of $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)?
  - Provide contingencies that contain $ObjectIdentity(0, cim:ContingencyElement)
    and a 'normal must study' status of $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean).
  - Identify contingencies involving $ObjectIdentity(0, cim:ContingencyElement) where
    the normalMustStudy attribute equals $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean).
  questions: []
  sparql_template: '?contingency a cim:Contingency ;

    cim:Contingency.ContingencyElement {$ObjectIdentity(0, cim:ContingencyElement)}
    ;

    nc:Contingency.normalMustStudy {$ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)} .

    {$ObjectIdentity(0, cim:ContingencyElement)} a cim:ContingencyElement ;

    .'
  template_id: template_list_5c3ba55840947ffcd71932935aaae5cd
- description: A graph pattern which lists all values for contingency limited by parameters
    for contingencyelement (https://cim.ucaiug.io/ns#Contingency.ContingencyElement)
    and by filter properties contingency.normalprobability.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.normalProbability
    subject: cim:Contingency
    type: xsd:float
  name: List contingency by parameters contingencyelement and filters contingency.normalprobability
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Contingency.ContingencyElement
    type: https://cim.ucaiug.io/ns#ContingencyElement
  paraphrases:
  - Which contingencies include the contingency element $ObjectIdentity(0, cim:ContingencyElement)
    with a normal probability of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)?
  - Find contingencies that assign $ObjectIdentity(0, cim:ContingencyElement) as their
    contingency element and have a normal probability of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float).
  - List the contingencies containing $ObjectIdentity(0, cim:ContingencyElement) as
    a contingency element with a normal probability of $ValueFilter(cim:Contingency,
    nc:Contingency.normalProbability, xsd:float).
  - What contingencies have $ObjectIdentity(0, cim:ContingencyElement) as a contingency
    element and a normal probability of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)?
  - Identify contingencies featuring $ObjectIdentity(0, cim:ContingencyElement) with
    a normal probability value of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float).
  questions:
  - expected_steps:
    - - args:
          query: 8ffcf7ab
        name: iri_discovery
        output: urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            cim:Contingency.ContingencyElement <urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d>
            ;

            nc:Contingency.normalProbability "100"^^xsd:float .

            <urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d> a cim:ContingencyElement
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_de0550508e5efe785e2fed1da33cc89c
    nl_question: Identify contingencies featuring 8ffcf7ab with a normal probability
      value of 100.
    parameter_bindings:
      $ObjectIdentity(0, cim:ContingencyElement): urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
      $ValueFilter(cim:Contingency, nc:Contingency.normalProbability, xsd:float): '100'
  sparql_template: '?contingency a cim:Contingency ;

    cim:Contingency.ContingencyElement {$ObjectIdentity(0, cim:ContingencyElement)}
    ;

    nc:Contingency.normalProbability {$ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)} .

    {$ObjectIdentity(0, cim:ContingencyElement)} a cim:ContingencyElement ;

    .'
  template_id: template_list_90a72f213626a27e4d3322a92afbd5eb
- description: A graph pattern which lists all values for contingency limited by parameters
    for systemoperator (https://cim4.eu/ns/nc#Contingency.EquipmentOperator) and by
    filter properties contingency.muststudy.
  filters:
  - property: https://cim.ucaiug.io/ns#Contingency.mustStudy
    subject: cim:Contingency
    type: xsd:boolean
  name: List contingency by parameters systemoperator and filters contingency.muststudy
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Contingency.EquipmentOperator
    type: https://cim4.eu/ns/nc#SystemOperator
  paraphrases:
  - Which contingencies managed by $ObjectIdentity(0, nc:SystemOperator) must be studied?
  - List the contingencies under $ObjectIdentity(0, nc:SystemOperator) that have a
    must-study requirement of $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean).
  - 'What contingencies are operated by $ObjectIdentity(0, nc:SystemOperator) and
    flagged as must-study: $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)?'
  - Identify contingencies with a must-study attribute of $ValueFilter(cim:Contingency,
    cim:Contingency.mustStudy, xsd:boolean) for the operator $ObjectIdentity(0, nc:SystemOperator).
  - What contingencies are associated with $ObjectIdentity(0, nc:SystemOperator) that
    require studying with a flag of $ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)?
  questions: []
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.EquipmentOperator {$ObjectIdentity(0, nc:SystemOperator)} ;

    cim:Contingency.mustStudy {$ValueFilter(cim:Contingency, cim:Contingency.mustStudy,
    xsd:boolean)} .

    {$ObjectIdentity(0, nc:SystemOperator)} a nc:SystemOperator ;

    .'
  template_id: template_list_ac520299e7ed6347c1856b83eb289280
- description: A graph pattern which lists all values for contingency limited by parameters
    for systemoperator (https://cim4.eu/ns/nc#Contingency.EquipmentOperator) and by
    filter properties contingency.normalmuststudy.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.normalMustStudy
    subject: cim:Contingency
    type: xsd:boolean
  name: List contingency by parameters systemoperator and filters contingency.normalmuststudy
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Contingency.EquipmentOperator
    type: https://cim4.eu/ns/nc#SystemOperator
  paraphrases:
  - Which contingencies are associated with the system operator $ObjectIdentity(0,
    nc:SystemOperator) and have a normal must-study value of $ValueFilter(cim:Contingency,
    nc:Contingency.normalMustStudy, xsd:boolean)?
  - List the contingencies linked to $ObjectIdentity(0, nc:SystemOperator) requiring
    normal study with the value $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean).
  - What are the contingencies managed by $ObjectIdentity(0, nc:SystemOperator) with
    the normal must-study value set to $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)?
  - Identify the contingencies under $ObjectIdentity(0, nc:SystemOperator) that have
    a normal must-study status of $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean).
  - Which contingencies involve $ObjectIdentity(0, nc:SystemOperator) and meet the
    normal must-study condition of $ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)?
  questions: []
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.EquipmentOperator {$ObjectIdentity(0, nc:SystemOperator)} ;

    nc:Contingency.normalMustStudy {$ValueFilter(cim:Contingency, nc:Contingency.normalMustStudy,
    xsd:boolean)} .

    {$ObjectIdentity(0, nc:SystemOperator)} a nc:SystemOperator ;

    .'
  template_id: template_list_5a6b577c8c9867692cf059172d2a563e
- description: A graph pattern which lists all values for contingency limited by parameters
    for systemoperator (https://cim4.eu/ns/nc#Contingency.EquipmentOperator) and by
    filter properties contingency.normalprobability.
  filters:
  - property: https://cim4.eu/ns/nc#Contingency.normalProbability
    subject: cim:Contingency
    type: xsd:float
  name: List contingency by parameters systemoperator and filters contingency.normalprobability
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Contingency.EquipmentOperator
    type: https://cim4.eu/ns/nc#SystemOperator
  paraphrases:
  - Which contingencies are associated with $ObjectIdentity(0, nc:SystemOperator)
    and have a normal probability of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)?
  - List all contingencies operated by $ObjectIdentity(0, nc:SystemOperator) with
    a normal probability of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float).
  - What contingencies managed by $ObjectIdentity(0, nc:SystemOperator) have a normal
    probability value of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)?
  - Provide the contingencies linked to $ObjectIdentity(0, nc:SystemOperator) with
    a normal probability of $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float).
  - Which contingencies involve $ObjectIdentity(0, nc:SystemOperator) as the operator
    and have a normal probability equal to $ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)?
  questions:
  - expected_steps:
    - - args:
          query: 50f0783d
        name: iri_discovery
        output: urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            nc:Contingency.EquipmentOperator <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4>
            ;

            nc:Contingency.normalProbability "100"^^xsd:float .

            <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4> a nc:SystemOperator ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_8136cd1e3c0803576e4a44167467236f
    nl_question: Which contingencies involve 50f0783d as the operator and have a normal
      probability equal to 100?
    parameter_bindings:
      $ObjectIdentity(0, nc:SystemOperator): urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
      $ValueFilter(cim:Contingency, nc:Contingency.normalProbability, xsd:float): '100'
  sparql_template: '?contingency a cim:Contingency ;

    nc:Contingency.EquipmentOperator {$ObjectIdentity(0, nc:SystemOperator)} ;

    nc:Contingency.normalProbability {$ValueFilter(cim:Contingency, nc:Contingency.normalProbability,
    xsd:float)} .

    {$ObjectIdentity(0, nc:SystemOperator)} a nc:SystemOperator ;

    .'
  template_id: template_list_24253d5587066b511ac8efe86f49c4d6
- description: A graph pattern which lists all values for contingency limited by parameters
    for contingencyelement (https://cim.ucaiug.io/ns#Contingency.ContingencyElement),
    systemoperator (https://cim4.eu/ns/nc#Contingency.EquipmentOperator) and by filter
    properties none.
  filters: []
  name: List contingency by parameters contingencyelement, systemoperator and filters
    none
  outputs:
  - name: contingency
    type: cim:Contingency
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Contingency.ContingencyElement
    type: https://cim.ucaiug.io/ns#ContingencyElement
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#Contingency.EquipmentOperator
    type: https://cim4.eu/ns/nc#SystemOperator
  paraphrases:
  - Which contingencies involve the contingency element $ObjectIdentity(0, cim:ContingencyElement)
    operated by $ObjectIdentity(1, nc:SystemOperator)?
  - List the contingencies that have $ObjectIdentity(0, cim:ContingencyElement) as
    a contingency element and are managed by $ObjectIdentity(1, nc:SystemOperator).
  - Provide the contingencies related to $ObjectIdentity(0, cim:ContingencyElement)
    under the operation of $ObjectIdentity(1, nc:SystemOperator).
  - What are the contingencies that include $ObjectIdentity(0, cim:ContingencyElement)
    as a contingency element and are operated by $ObjectIdentity(1, nc:SystemOperator)?
  - Identify the contingencies involving $ObjectIdentity(0, cim:ContingencyElement),
    overseen by $ObjectIdentity(1, nc:SystemOperator).
  questions:
  - expected_steps:
    - - args:
          query: 8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
        name: iri_discovery
        output: urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 50f0783d-0543-41c4-972a-9ad8415b52a4
        name: iri_discovery
        output: urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?contingency WHERE {

            ?contingency a cim:Contingency ;

            cim:Contingency.ContingencyElement <urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d>
            ;

            nc:Contingency.EquipmentOperator <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4>
            .

            <urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d> a cim:ContingencyElement
            ;

            .

            <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4> a nc:SystemOperator ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["contingency"]}, "results": {"bindings": [{"contingency":
          {"type": "uri", "value": "urn:uuid:0c19a9a2-1165-49f9-bc0a-2f6b88deec9f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - contingency
    id: question_fe72a7566c2d9f078c2eaeb24f4f697b
    nl_question: List the contingencies that have 8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
      as a contingency element and are managed by 50f0783d-0543-41c4-972a-9ad8415b52a4.
    parameter_bindings:
      $ObjectIdentity(0, cim:ContingencyElement): urn:uuid:8ffcf7ab-2c5f-40eb-9e56-6338bdd8c96d
      $ObjectIdentity(1, nc:SystemOperator): urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
  sparql_template: '?contingency a cim:Contingency ;

    cim:Contingency.ContingencyElement {$ObjectIdentity(0, cim:ContingencyElement)}
    ;

    nc:Contingency.EquipmentOperator {$ObjectIdentity(1, nc:SystemOperator)} .

    {$ObjectIdentity(0, cim:ContingencyElement)} a cim:ContingencyElement ;

    .

    {$ObjectIdentity(1, nc:SystemOperator)} a nc:SystemOperator ;

    .'
  template_id: template_list_7cdd2e81124805a3ffc671c3d4a15f71
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for none and by filter properties none.
  filters: []
  name: List currentlimit by parameters none and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters: []
  paraphrases:
  - What are the current limits available?
  - List all the entities classified as current limits.
  - Identify all current limit entities.
  - What are the current limit objects in the dataset?
  - Provide a list of all current limits.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:556dbd93-e9a8-43cb-bb61-caa96e9b9d3f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:533deb44-3373-4823-96e9-578ecb71f92c"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:3c141dec-efbb-4728-b9be-e82587c11b0e"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:6bd50868-1e41-4306-b344-a854e25bc929"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e40-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f37b40e0-af2c-4aec-b30d-8b94158487ef"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ceb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:c94df2ec-7b04-49bf-8747-869f4c9dc69c"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:07a05fa8-d780-11e7-9296-cec278b6b50a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:9241f98a-7ba5-4dd9-8be7-76bb0baf792e"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:2f424916-1180-4820-a6f7-8f570b35764f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:8bf05dbf-b450-4dd3-a8cc-c1108995c7df"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:1e6c7349-1a83-4608-bf9e-d0fa6b8f84ac"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:e6913d1b-5c4e-49f2-8a20-1843dfb3aebe"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769adb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:3c63e9a4-d77f-11e7-9296-cec278b6b50a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:2332e8be-fa3d-4e2c-a186-4722beae1296"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:c0ed60e7-e6e9-4abe-acb6-e1fead8c680a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769baf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cde-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:2bcc81e9-9484-4959-882b-c43641f2a721"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:b16a3747-d1b5-4bae-8c33-19b4ad9aa944"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:1dc6bdf3-83f6-4b61-9dde-56ef73ff8c1b"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:e89f487d-b332-492a-a1b1-f2cc614d2a48"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ded-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:943763c5-f393-4033-9de4-10f737502870"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:0f6d2d4a-4998-478d-a90a-17edb799a0ae"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:6c75f95a-2cfc-408c-a079-47ac05224876"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:31990e9d-22cb-48e7-aeb7-280f73bba47f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:fdf53596-1125-4f13-b6f2-faf58c539448"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:3beeebd6-cf2c-43b6-9a93-ab86279779d1"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:e0615732-d98a-4b65-8a63-decac8e292b4"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:30efb0f1-c9d3-4329-883b-8644245ecd84"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:1ab0364b-1a34-4714-a61c-b739d5ea31ed"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:75fd728d-55a1-47b5-9c38-ff57167b672e"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:70029237-3504-434d-a3f7-70ae53c3ab8f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769def-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:2c0e8b5a-a92d-4c43-913b-e5f72b864c46"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:2c009f59-68dc-4f5a-89a8-e4db9f2d9fe0"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:6de624e3-9e8d-48d9-99a7-043d37c096cd"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:1b9c3466-d296-443b-a5cc-ffbb2e3956e4"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:fb6bca99-c19e-4021-b924-e69975a54d5a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:694f6f27-5dec-4d15-8913-a666d7e690e6"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:1ffadccb-2b24-42ba-bdb7-0cd6be979c9c"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:a11caf87-9df6-420c-a90c-afe4b00d9ae6"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e48-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:cce7a187-8a49-4821-8df9-ff0b73abf305"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f895c38b-d303-456a-abd9-ce89826c6c0a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:06b60509-454a-42b4-80c5-3823e8946e89"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:78340e32-d391-4227-9eec-df0cae9fb810"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:3c63e436-d77f-11e7-9296-cec278b6b50a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:deb13630-772d-4c54-b755-027f2a76ceb2"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:eb25896e-d1ec-46de-a566-edfed02ae1ae"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:430b3df3-f760-49ef-9e64-1890813f88d4"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:8506bced-6ffa-4f6f-b947-f06fd5847b9e"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:52af6f91-8a53-4de4-9d92-1611db415996"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:e69974d7-2081-411e-83b3-3b1fa270b5ba"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:d678d8e8-dd1c-4b88-9746-467af5a682b7"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:15346dc0-db88-47f9-939e-89d9e5ea29d9"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:5f74fb12-9bbc-4e06-af14-9c3406eaa892"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f647c10e-55bf-4e9a-bccc-a4b09bcb30e0"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:07a05ab2-d780-11e7-9296-cec278b6b50a"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769caf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:a86c3a05-b598-4ff1-9057-70cbb564f4c4"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:39847105-28c6-49f1-a355-9e079da9c915"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_0d87254aa771e4257ed8ebc9f2506b41
    nl_question: Provide a list of all current limits.
    parameter_bindings: {}
  sparql_template: ?currentlimit a cim:CurrentLimit .
  template_id: template_list_e45166f2aa5d9ce774936ca045fd54dc
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for none and by filter properties currentlimit.normalvalue.
  filters:
  - property: https://cim.ucaiug.io/ns#CurrentLimit.normalValue
    subject: cim:CurrentLimit
    type: xsd:float
  name: List currentlimit by parameters none and filters currentlimit.normalvalue
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters: []
  paraphrases:
  - Which current limits have a normal value of $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue,
    xsd:float)?
  - What are the current limits with a normal value of $ValueFilter(cim:CurrentLimit,
    cim:CurrentLimit.normalValue, xsd:float)?
  - List all current limits where the normal value is $ValueFilter(cim:CurrentLimit,
    cim:CurrentLimit.normalValue, xsd:float).
  - Provide the current limits that have a normal value of $ValueFilter(cim:CurrentLimit,
    cim:CurrentLimit.normalValue, xsd:float).
  - Identify the current limits with a normal value equal to $ValueFilter(cim:CurrentLimit,
    cim:CurrentLimit.normalValue, xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.normalValue "2501.851166"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_eb7cdfe1331180d3e076ad065db1beea
    nl_question: Provide the current limits that have a normal value of 2501.851166.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue, xsd:float): '2501.851166'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.normalValue "8553.337321"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_6a011345472ed72c227e4ac26d9ad7d6
    nl_question: What are the current limits with a normal value of 8553.337321?
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue, xsd:float): '8553.337321'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.normalValue "769.800359"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_53bf1e5ce830c0e853509bc7e42eb012
    nl_question: Which current limits have a normal value of 769.800359?
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue, xsd:float): '769.800359'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.normalValue "2749.286996"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_f97099d56cf037c45fa4b8983997635a
    nl_question: Identify the current limits with a normal value equal to 2749.286996.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue, xsd:float): '2749.286996'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.normalValue "2474.358297"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_b8aa567317bc1159ace14f3bd47177e6
    nl_question: List all current limits where the normal value is 2474.358297.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue, xsd:float): '2474.358297'
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:CurrentLimit.normalValue {$ValueFilter(cim:CurrentLimit, cim:CurrentLimit.normalValue,
    xsd:float)} .'
  template_id: template_list_ead033b9b1dcd278dd8a4584eb820759
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for none and by filter properties currentlimit.value.
  filters:
  - property: https://cim.ucaiug.io/ns#CurrentLimit.value
    subject: cim:CurrentLimit
    type: xsd:float
  name: List currentlimit by parameters none and filters currentlimit.value
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters: []
  paraphrases:
  - What are the current limits with a value of $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value,
    xsd:float)?
  - List the current limits where the value is $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value,
    xsd:float).
  - Which current limits have a value of $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value,
    xsd:float)?
  - Provide all current limits with a value of $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value,
    xsd:float).
  - Identify the current limits having a value of $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value,
    xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.value "962.250449"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_199c546ceb91e07dfe8ee3b0b57879fc
    nl_question: Provide all current limits with a value of 962.250449.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value, xsd:float): '962.250449'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.value "3705"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f647c10e-55bf-4e9a-bccc-a4b09bcb30e0"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_a81fd61ff16dac33960aa3f7f5856649
    nl_question: What are the current limits with a value of 3705?
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value, xsd:float): '3705'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.value "6735.753141"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_4d86966ffa88e0636989623d3f303225
    nl_question: List the current limits where the value is 6735.753141.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value, xsd:float): '6735.753141'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.value "8330"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:9241f98a-7ba5-4dd9-8be7-76bb0baf792e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_071ae86ce2fc706103501e4f8c48e16e
    nl_question: Provide all current limits with a value of 8330.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value, xsd:float): '8330'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:CurrentLimit.value "7910"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:06b60509-454a-42b4-80c5-3823e8946e89"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_dbbce80631b63334bc5d2549d44e8cfa
    nl_question: Provide all current limits with a value of 7910.
    parameter_bindings:
      $ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value, xsd:float): '7910'
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:CurrentLimit.value {$ValueFilter(cim:CurrentLimit, cim:CurrentLimit.value,
    xsd:float)} .'
  template_id: template_list_670b2ce95f03c4aed024666b285d5fd8
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for operationallimit (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet,
    https://cim.ucaiug.io/ns#OperationalLimitSet.OperationalLimitValue) and by filter
    properties none.
  filters: []
  name: List currentlimit by parameters operationallimit and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    - https://cim.ucaiug.io/ns#OperationalLimitSet.OperationalLimitValue
    type: https://cim.ucaiug.io/ns#OperationalLimit
  paraphrases:
  - Which current limits are associated with the operational limit $ObjectIdentity(0,
    cim:OperationalLimit)?
  - Identify the current limits linked to $ObjectIdentity(0, cim:OperationalLimit).
  - What current limits are connected to the operational limit $ObjectIdentity(0,
    cim:OperationalLimit)?
  - Provide the current limits that belong to the operational limit $ObjectIdentity(0,
    cim:OperationalLimit).
  - List the current limits for the operational limit $ObjectIdentity(0, cim:OperationalLimit).
  questions:
  - expected_steps:
    - - args:
          query: RATEB
        name: iri_discovery
        output: urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_99b9b69a67482720070f697a0ab7eb50
    nl_question: Identify the current limits linked to RATEB.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d9d
        name: iri_discovery
        output: urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_a2b43ef80e6e3b2b6d3fee5768485fdd
    nl_question: Provide the current limits that belong to the operational limit f1769d9d.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769cd9-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_b3fad50e020e62e28eadc9c4b66cafb3
    nl_question: Identify the current limits linked to f1769cd9-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c27
        name: iri_discovery
        output: urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_b334b613c30ad9699d2f2c733f9131b7
    nl_question: Provide the current limits that belong to the operational limit f1769c27.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769aca-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_b85dcf9e24471dc7cb85e44635d8d92c
    nl_question: Which current limits are associated with the operational limit f1769aca-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
    {$ObjectIdentity(0, cim:OperationalLimit)} .

    {$ObjectIdentity(0, cim:OperationalLimit)} a cim:OperationalLimit ;

    .'
  template_id: template_list_4206e97a6542a89c8e25749f5d1ed0cf
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for acdcterminal (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet,
    https://cim.ucaiug.io/ns#OperationalLimitSet.Terminal) and by filter properties
    none.
  filters: []
  name: List currentlimit by parameters acdcterminal and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    - https://cim.ucaiug.io/ns#OperationalLimitSet.Terminal
    type: https://cim.ucaiug.io/ns#ACDCTerminal
  paraphrases:
  - What current limits are associated with $ObjectIdentity(0, cim:ACDCTerminal)?
  - List the current limits linked to $ObjectIdentity(0, cim:ACDCTerminal).
  - Which current limits are defined for the terminal $ObjectIdentity(0, cim:ACDCTerminal)?
  - Provide the current limits connected to $ObjectIdentity(0, cim:ACDCTerminal).
  - What are the current limits applicable to $ObjectIdentity(0, cim:ACDCTerminal)?
  questions:
  - expected_steps:
    - - args:
          query: T2
        name: iri_discovery
        output: urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_229afa04e3f7807f071a096aa6f4ae3c
    nl_question: Provide the current limits connected to T2.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T2
        name: iri_discovery
        output: urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_a6f92928b0ef4fdf4572be34a6cd7c08
    nl_question: What are the current limits applicable to T2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903ae-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_9cdf105fbda8a857b90e24be01c82038
    nl_question: What current limits are associated with 2dd903ae-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90436
        name: iri_discovery
        output: urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_877ef5713e476e7624534f058dab7f81
    nl_question: What current limits are associated with 2dd90436?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_241d31aefd6f1513499780264984b28a
    nl_question: Which current limits are defined for the terminal T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal {$ObjectIdentity(0,
    cim:ACDCTerminal)} .

    {$ObjectIdentity(0, cim:ACDCTerminal)} a cim:ACDCTerminal ;

    .'
  template_id: template_list_8e859697a3121b41357c69e4d63479a8
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for powertransfercorridor (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet,
    https://cim4.eu/ns/nc#OperationalLimitSet.PowerTransferCorridor) and by filter
    properties none.
  filters: []
  name: List currentlimit by parameters powertransfercorridor and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    - https://cim4.eu/ns/nc#OperationalLimitSet.PowerTransferCorridor
    type: https://cim4.eu/ns/nc#PowerTransferCorridor
  paraphrases:
  - What are the current limits associated with $ObjectIdentity(0, nc:PowerTransferCorridor)?
  - Identify the current limits defined for $ObjectIdentity(0, nc:PowerTransferCorridor).
  - List all current limits related to $ObjectIdentity(0, nc:PowerTransferCorridor).
  - Which current limits are set for the power transfer corridor $ObjectIdentity(0,
    nc:PowerTransferCorridor)?
  - Provide the current limits of $ObjectIdentity(0, nc:PowerTransferCorridor).
  questions: []
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimit.OperationalLimitSet/nc:OperationalLimitSet.PowerTransferCorridor
    {$ObjectIdentity(0, nc:PowerTransferCorridor)} .

    {$ObjectIdentity(0, nc:PowerTransferCorridor)} a nc:PowerTransferCorridor ;

    .'
  template_id: template_list_e83a85ddf80f9e845a2d72d0f328a2d6
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for operationallimit (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType,
    https://cim.ucaiug.io/ns#OperationalLimitType.OperationalLimit) and by filter
    properties none.
  filters: []
  name: List currentlimit by parameters operationallimit and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    - https://cim.ucaiug.io/ns#OperationalLimitType.OperationalLimit
    type: https://cim.ucaiug.io/ns#OperationalLimit
  paraphrases:
  - Which current limits are associated with the operational limit $ObjectIdentity(0,
    cim:OperationalLimit)?
  - Identify the current limits linked to $ObjectIdentity(0, cim:OperationalLimit).
  - What are the current limits tied to the operational limit $ObjectIdentity(0, cim:OperationalLimit)?
  - List the current limits related to $ObjectIdentity(0, cim:OperationalLimit).
  - Provide the current limits that correspond to the operational limit $ObjectIdentity(0,
    cim:OperationalLimit).
  questions:
  - expected_steps:
    - - args:
          query: f1769a9e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769b66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e40-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cde-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e48-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_c6f1500a5371a4aec549686bc327ad44
    nl_question: What are the current limits tied to the operational limit f1769a9e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RATEA
        name: iri_discovery
        output: urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ded-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769caf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_200595d801e10a51b15fa00a083b0caf
    nl_question: What are the current limits tied to the operational limit RATEA?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RATEA
        name: iri_discovery
        output: urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ded-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769caf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_3110a717c0337e6d1c4cebbd0a9641c5
    nl_question: List the current limits related to RATEA.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d83
        name: iri_discovery
        output: urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769cb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ceb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769adb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769baf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769def-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_661e146e6f32ac336afd23d2dd8686a5
    nl_question: List the current limits related to f1769d83.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ad7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769cb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ceb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769adb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769baf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769def-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_2580fb867cb3146e6409dced6feaab00
    nl_question: Which current limits are associated with the operational limit f1769ad7-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
    {$ObjectIdentity(0, cim:OperationalLimit)} .

    {$ObjectIdentity(0, cim:OperationalLimit)} a cim:OperationalLimit ;

    .'
  template_id: template_list_ac461f1287fc8bca035776fe8fdd6915
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for operationallimitdirectionkind (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType,
    https://cim.ucaiug.io/ns#OperationalLimitType.direction) and by filter properties
    none.
  filters: []
  name: List currentlimit by parameters operationallimitdirectionkind and filters
    none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    - https://cim.ucaiug.io/ns#OperationalLimitType.direction
    type: https://cim.ucaiug.io/ns#OperationalLimitDirectionKind
  paraphrases:
  - Which current limits are associated with the operational limit type having direction
    $ObjectIdentity(0, cim:OperationalLimitDirectionKind)?
  - What are the current limits for direction $ObjectIdentity(0, cim:OperationalLimitDirectionKind)
    in the operational limit type?
  - List all current limits linked to an operational limit direction type $ObjectIdentity(0,
    cim:OperationalLimitDirectionKind).
  - Identify the current limits with the operational limit direction of $ObjectIdentity(0,
    cim:OperationalLimitDirectionKind).
  - Provide the current limits corresponding to the direction $ObjectIdentity(0, cim:OperationalLimitDirectionKind)
    in the operational limit type.
  questions:
  - expected_steps:
    - - args:
          query: absoluteValue
        name: iri_discovery
        output: https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.absoluteValue
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.direction
            <https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.absoluteValue>
            .

            <https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.absoluteValue>
            a cim:OperationalLimitDirectionKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ded-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769caf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e40-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cde-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e48-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ceb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769adb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769baf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769def-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_e52f85a159754423cc7a7ec703fa4208
    nl_question: Identify the current limits with the operational limit direction
      of absoluteValue.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitDirectionKind): https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.absoluteValue
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.direction {$ObjectIdentity(0,
    cim:OperationalLimitDirectionKind)} .

    {$ObjectIdentity(0, cim:OperationalLimitDirectionKind)} a cim:OperationalLimitDirectionKind
    ;

    .'
  template_id: template_list_aa5bc8f3e989c3dfb930605c2c33ca24
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for limitkind (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType,
    https://cim.ucaiug.io/ns/eu#OperationalLimitType.kind) and by filter properties
    none.
  filters: []
  name: List currentlimit by parameters limitkind and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    - https://cim.ucaiug.io/ns/eu#OperationalLimitType.kind
    type: https://cim.ucaiug.io/ns/eu#LimitKind
  paraphrases:
  - Which current limits are associated with the operational limit type $ObjectIdentity(0,
    eu:LimitKind)?
  - Identify current limits corresponding to operational limit type $ObjectIdentity(0,
    eu:LimitKind).
  - What are the current limits defined for the operational limit type $ObjectIdentity(0,
    eu:LimitKind)?
  - List all current limits linked to the operational limit type $ObjectIdentity(0,
    eu:LimitKind).
  - Find the current limits related to the limit kind $ObjectIdentity(0, eu:LimitKind).
  questions:
  - expected_steps:
    - - args:
          query: tatl
        name: iri_discovery
        output: https://cim.ucaiug.io/ns/eu#LimitKind.tatl
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/eu:OperationalLimitType.kind
            <https://cim.ucaiug.io/ns/eu#LimitKind.tatl> .

            <https://cim.ucaiug.io/ns/eu#LimitKind.tatl> a eu:LimitKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769b66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e40-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cde-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e48-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ceb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769adb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769baf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769def-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_1d01b55416436a8ca1454f8391266cba
    nl_question: List all current limits linked to the operational limit type tatl.
    parameter_bindings:
      $ObjectIdentity(0, eu:LimitKind): https://cim.ucaiug.io/ns/eu#LimitKind.tatl
  - expected_steps:
    - - args:
          query: patl
        name: iri_discovery
        output: https://cim.ucaiug.io/ns/eu#LimitKind.patl
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            cim:OperationalLimit.OperationalLimitType/eu:OperationalLimitType.kind
            <https://cim.ucaiug.io/ns/eu#LimitKind.patl> .

            <https://cim.ucaiug.io/ns/eu#LimitKind.patl> a eu:LimitKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ca1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ad5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ded-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769af9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769acd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bb9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769dd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769aa5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769df7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ddb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bfb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769ce9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769a99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769caf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769d31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769e35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"currentlimit": {"type": "uri", "value": "urn:uuid:f1769bc9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_3babf2acc370bc9d6a576f784448d9e3
    nl_question: What are the current limits defined for the operational limit type
      patl?
    parameter_bindings:
      $ObjectIdentity(0, eu:LimitKind): https://cim.ucaiug.io/ns/eu#LimitKind.patl
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimit.OperationalLimitType/eu:OperationalLimitType.kind {$ObjectIdentity(0,
    eu:LimitKind)} .

    {$ObjectIdentity(0, eu:LimitKind)} a eu:LimitKind ;

    .'
  template_id: template_list_a7c78aa6175b5dff329194852c9dc664
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for operationallimit (https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit,
    https://cim4.eu/ns/nc#PinOperationalLimit.OperationalLimit) and by filter properties
    none.
  filters: []
  name: List currentlimit by parameters operationallimit and filters none
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit
    - https://cim4.eu/ns/nc#PinOperationalLimit.OperationalLimit
    type: https://cim.ucaiug.io/ns#OperationalLimit
  paraphrases:
  - What current limits are associated with $ObjectIdentity(0, cim:OperationalLimit)?
  - Identify the current limits related to $ObjectIdentity(0, cim:OperationalLimit).
  - Which current limits correspond to the operational limit $ObjectIdentity(0, cim:OperationalLimit)?
  - List the current limits linked to $ObjectIdentity(0, cim:OperationalLimit).
  - Provide the current limits that are associated with $ObjectIdentity(0, cim:OperationalLimit).
  questions:
  - expected_steps:
    - - args:
          query: f1769cf5-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            nc:OperationalLimit.PinOperationallLimit/nc:PinOperationalLimit.OperationalLimit
            <urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_c672c24ffd71f9087ffaafa7fa6cbe0a
    nl_question: What current limits are associated with f1769cf5-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RATEA
        name: iri_discovery
        output: urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?currentlimit WHERE {

            ?currentlimit a cim:CurrentLimit ;

            nc:OperationalLimit.PinOperationallLimit/nc:PinOperationalLimit.OperationalLimit
            <urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["currentlimit"]}, "results": {"bindings": [{"currentlimit":
          {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - currentlimit
    id: question_f8bbc911032d7936fb3230fee6a1c7da
    nl_question: What current limits are associated with RATEA?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    nc:OperationalLimit.PinOperationallLimit/nc:PinOperationalLimit.OperationalLimit
    {$ObjectIdentity(0, cim:OperationalLimit)} .

    {$ObjectIdentity(0, cim:OperationalLimit)} a cim:OperationalLimit ;

    .'
  template_id: template_list_dce953b7c8e0e6a474c3339facfe39a2
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for none and by filter properties operationallimittype.acceptableduration.
  filters:
  - property: https://cim.ucaiug.io/ns#OperationalLimitType.acceptableDuration
    subject: cim:CurrentLimit
    type: xsd:float
  name: List currentlimit by parameters none and filters operationallimittype.acceptableduration
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters: []
  paraphrases:
  - What current limits have an acceptable duration of $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float)?
  - List current limits with an acceptable duration of $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float).
  - Which current limits have an acceptable operational duration of $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float)?
  - Identify current limits with $ValueFilter(cim:CurrentLimit, cim:OperationalLimitType.acceptableDuration,
    xsd:float) as their acceptable duration.
  - Can you provide current limits having an acceptable duration of $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float)?
  questions: []
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimitType.acceptableDuration {$ValueFilter(cim:CurrentLimit, cim:OperationalLimitType.acceptableDuration,
    xsd:float)} .'
  template_id: template_list_cb3c248f2ac9f9d8ba735b357bfb06e2
- description: A graph pattern which lists all values for currentlimit limited by
    parameters for none and by filter properties operationallimittype.isinfiniteduration.
  filters:
  - property: https://cim.ucaiug.io/ns#OperationalLimitType.isInfiniteDuration
    subject: cim:CurrentLimit
    type: xsd:boolean
  name: List currentlimit by parameters none and filters operationallimittype.isinfiniteduration
  outputs:
  - name: currentlimit
    type: cim:CurrentLimit
  parameters: []
  paraphrases:
  - Which current limits have an infinite duration of $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean)?
  - List the current limits with infinite duration set to $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean).
  - Provide the current limits where the infinite duration is $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean).
  - What are the current limits with an operational infinite duration of $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean)?
  - Identify the current limits having infinite duration marked as $ValueFilter(cim:CurrentLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean).
  questions: []
  sparql_template: '?currentlimit a cim:CurrentLimit ;

    cim:OperationalLimitType.isInfiniteDuration {$ValueFilter(cim:CurrentLimit, cim:OperationalLimitType.isInfiniteDuration,
    xsd:boolean)} .'
  template_id: template_list_cde627bd5d52a5aa13036937c9a6a6c3
- description: A graph pattern which lists all values for energyconnection limited
    by parameters for none and by filter properties none.
  filters: []
  name: List energyconnection by parameters none and filters none
  outputs:
  - name: energyconnection
    type: cim:EnergyConnection
  parameters: []
  paraphrases:
  - What are the instances of cim:EnergyConnection?
  - List all energy connections in the dataset.
  - What objects are classified as cim:EnergyConnection?
  - Provide a list of all entities that are energy connections.
  - Which entities belong to the cim:EnergyConnection class?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?energyconnection WHERE {

            ?energyconnection a cim:EnergyConnection .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["energyconnection"]}, "results": {"bindings":
          [{"energyconnection": {"type": "uri", "value": "urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699d2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769810-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176989b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698e6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176994d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176985a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769929-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17696e0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176979a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17696fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697ca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769804-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698b1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699f5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769876-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176973a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698a2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769845-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769746-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769902-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176984c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769947-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769894-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769973-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176990b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769961-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769886-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699e7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769710-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769988-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769967-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176993e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176982d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176988d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769979-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769826-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698f4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176986f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176980a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769937-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769930-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698ab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699ad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769996-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769868-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697ac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176976a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176970a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769959-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699fe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176999f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698c3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699d9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699cb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698d1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769728-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a04-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769782-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698b7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769788-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176998f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698df-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769919-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769981-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769861-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699ee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699bd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698d7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769853-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769911-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176996d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769752-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769716-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17696ec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697a6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17699c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697dc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697e8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769953-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697b2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"energyconnection": {"type": "uri", "value": "urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - energyconnection
    id: question_6dedd755ca5fab4075fd8c4a2e06a4f8
    nl_question: Provide a list of all entities that are energy connections.
    parameter_bindings: {}
  sparql_template: ?energyconnection a cim:EnergyConnection .
  template_id: template_list_a21cab9176e2976083a73cb14a8c3dcd
- description: A graph pattern which lists all values for geographicalregion limited
    by parameters for none and by filter properties none.
  filters: []
  name: List geographicalregion by parameters none and filters none
  outputs:
  - name: geographicalregion
    type: cim:GeographicalRegion
  parameters: []
  paraphrases:
  - Which entities are classified as geographical regions?
  - List all geographical regions.
  - Provide the details of all geographical regions.
  - What are the geographical regions present in the dataset?
  - Identify all entities that belong to the geographical region class.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_0093aa3f6e71106f4cdcdc8bebcfae3a
    nl_question: Identify all entities that belong to the geographical region class.
    parameter_bindings: {}
  sparql_template: ?geographicalregion a cim:GeographicalRegion .
  template_id: template_list_75d250ef648c66b2730943dd4c7d874a
- description: A graph pattern which lists all values for geographicalregion limited
    by parameters for subgeographicalregion (https://cim.ucaiug.io/ns#GeographicalRegion.Regions)
    and by filter properties none.
  filters: []
  name: List geographicalregion by parameters subgeographicalregion and filters none
  outputs:
  - name: geographicalregion
    type: cim:GeographicalRegion
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeographicalRegion.Regions
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  paraphrases:
  - Which geographical region does $ObjectIdentity(0, cim:SubGeographicalRegion) belong
    to?
  - Identify the geographical region associated with $ObjectIdentity(0, cim:SubGeographicalRegion).
  - What is the geographical region that contains $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - List the geographical region corresponding to $ObjectIdentity(0, cim:SubGeographicalRegion).
  - In which geographical region can $ObjectIdentity(0, cim:SubGeographicalRegion)
    be found?
  questions:
  - expected_steps:
    - - args:
          query: f1769699-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_eb54e406b640ec6561da83392f6d7a90
    nl_question: Identify the geographical region associated with f1769699-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695c3-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_4619c8579e129e77cc827fe1d294838b
    nl_question: Which geographical region does f17695c3-9aeb-11e5-91da-b8763fd99c5f
      belong to?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695c3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696b3-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions <urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_6bf99ec6fb65e6f4ae9fc9ee03e85ebd
    nl_question: What is the geographical region that contains f17696b3-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696b3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SE3 SGR
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_e81fe7a00eea057b5d6fab604d820d8a
    nl_question: List the geographical region corresponding to SE3 SGR.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696a3
        name: iri_discovery
        output: urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions <urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_f9aada10f47cdc160178528e6db1b26b
    nl_question: In which geographical region can f17696a3 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?geographicalregion a cim:GeographicalRegion ;

    cim:GeographicalRegion.Regions {$ObjectIdentity(0, cim:SubGeographicalRegion)}
    .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .'
  template_id: template_list_38a907fa67ff527483a265e8e2f365f2
- description: A graph pattern which lists all values for geographicalregion limited
    by parameters for line (https://cim.ucaiug.io/ns#GeographicalRegion.Regions, https://cim.ucaiug.io/ns#SubGeographicalRegion.Lines)
    and by filter properties none.
  filters: []
  name: List geographicalregion by parameters line and filters none
  outputs:
  - name: geographicalregion
    type: cim:GeographicalRegion
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeographicalRegion.Regions
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Lines
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which geographical region contains the line $ObjectIdentity(0, cim:Line)?
  - Identify the geographical region that includes $ObjectIdentity(0, cim:Line).
  - In which geographical region is the line $ObjectIdentity(0, cim:Line) located?
  - What geographical region does $ObjectIdentity(0, cim:Line) belong to?
  - List the geographical region that encompasses the line $ObjectIdentity(0, cim:Line).
  questions:
  - expected_steps:
    - - args:
          query: 1d75d523-5594-5249-8f1b-977b91cccaae
        name: iri_discovery
        output: urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Lines <urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae>
            .

            <urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_342f7aec463b59d908dbdab1618301eb
    nl_question: Which geographical region contains the line 1d75d523-5594-5249-8f1b-977b91cccaae?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:1d75d523-5594-5249-8f1b-977b91cccaae
  - expected_steps:
    - - args:
          query: LC 300KRISTIAN-FEDA
        name: iri_discovery
        output: urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Lines <urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827>
            .

            <urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_345a503c81f3d9dec58555e8f54adb43
    nl_question: List the geographical region that encompasses the line LC 300KRISTIAN-FEDA.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:c43d7395-731a-7043-9739-5c3f339d6827
  - expected_steps:
    - - args:
          query: 6ae66971
        name: iri_discovery
        output: urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Lines <urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337>
            .

            <urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_9ea54d5be80fa550aa54618ef82a428b
    nl_question: Which geographical region contains the line 6ae66971?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:6ae66971-e1d2-4243-91c8-a6bf812f1337
  - expected_steps:
    - - args:
          query: f62c7e4e-374c-284f-896e-9b212731a8fc
        name: iri_discovery
        output: urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Lines <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc>
            .

            <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_2ceb9e05018c458c1a31d57130ec7f81
    nl_question: In which geographical region is the line f62c7e4e-374c-284f-896e-9b212731a8fc
      located?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
  - expected_steps:
    - - args:
          query: af7ca550
        name: iri_discovery
        output: urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Lines <urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1>
            .

            <urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_0b8bd2914e94a8bff49a507a1b5a9466
    nl_question: What geographical region does af7ca550 belong to?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:af7ca550-099a-8a4b-8dcb-71e6c8f0d3b1
  sparql_template: '?geographicalregion a cim:GeographicalRegion ;

    cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Lines {$ObjectIdentity(0,
    cim:Line)} .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_fd80e81723ffb14bf18a4e53bebf5d9b
- description: A graph pattern which lists all values for geographicalregion limited
    by parameters for geographicalregion (https://cim.ucaiug.io/ns#GeographicalRegion.Regions,
    https://cim.ucaiug.io/ns#SubGeographicalRegion.Region) and by filter properties
    none.
  filters: []
  name: List geographicalregion by parameters geographicalregion and filters none
  outputs:
  - name: geographicalregion
    type: cim:GeographicalRegion
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeographicalRegion.Regions
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Region
    type: https://cim.ucaiug.io/ns#GeographicalRegion
  paraphrases:
  - Which geographical regions contain the sub-regions of $ObjectIdentity(0, cim:GeographicalRegion)?
  - What geographical regions are associated with the sub-regions of $ObjectIdentity(0,
    cim:GeographicalRegion)?
  - List all geographical regions containing sub-regions of $ObjectIdentity(0, cim:GeographicalRegion).
  - Identify geographical regions whose sub-regions belong to $ObjectIdentity(0, cim:GeographicalRegion).
  - Which geographical regions are linked to the sub-regions of $ObjectIdentity(0,
    cim:GeographicalRegion)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Region <urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4> a cim:GeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_a131a02b2f6014989ad7e2323c1a727b
    nl_question: Which geographical regions are linked to the sub-regions of 2dd9048c-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeographicalRegion): urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?geographicalregion a cim:GeographicalRegion ;

    cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Region {$ObjectIdentity(0,
    cim:GeographicalRegion)} .

    {$ObjectIdentity(0, cim:GeographicalRegion)} a cim:GeographicalRegion ;

    .'
  template_id: template_list_01ecebb8bb6e190a300dd5d2a0875f1a
- description: A graph pattern which lists all values for geographicalregion limited
    by parameters for substation (https://cim.ucaiug.io/ns#GeographicalRegion.Regions,
    https://cim.ucaiug.io/ns#SubGeographicalRegion.Substations) and by filter properties
    none.
  filters: []
  name: List geographicalregion by parameters substation and filters none
  outputs:
  - name: geographicalregion
    type: cim:GeographicalRegion
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#GeographicalRegion.Regions
    - https://cim.ucaiug.io/ns#SubGeographicalRegion.Substations
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which geographical region contains the substation $ObjectIdentity(0, cim:Substation)?
  - Identify the geographical region where substation $ObjectIdentity(0, cim:Substation)
    is located.
  - What is the geographical region that includes $ObjectIdentity(0, cim:Substation)?
  - List the geographical region associated with substation $ObjectIdentity(0, cim:Substation).
  - To which geographical region does substation $ObjectIdentity(0, cim:Substation)
    belong?
  questions:
  - expected_steps:
    - - args:
          query: f1769654-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Substations <urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_bdf712eefceffc7828236cc869972bf1
    nl_question: Which geographical region contains the substation f1769654-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769654-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: DAGALI
        name: iri_discovery
        output: urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Substations <urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_83482e40280cd147601b172e6802ff90
    nl_question: List the geographical region associated with substation DAGALI.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769604
        name: iri_discovery
        output: urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Substations <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_ea19fb1c115ab7707a0851de29ed1b20
    nl_question: Identify the geographical region where substation f1769604 is located.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696da-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Substations <urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_ef8f53d0beff9ba8f71577fb19dad05e
    nl_question: List the geographical region associated with substation f17696da-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696da-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: GEILO
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?geographicalregion WHERE {

            ?geographicalregion a cim:GeographicalRegion ;

            cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Substations <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["geographicalregion"]}, "results": {"bindings":
          [{"geographicalregion": {"type": "uri", "value": "urn:uuid:2dd9048c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - geographicalregion
    id: question_ba02eb338ffce2e09a08f288bc371a4a
    nl_question: To which geographical region does substation GEILO belong?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?geographicalregion a cim:GeographicalRegion ;

    cim:GeographicalRegion.Regions/cim:SubGeographicalRegion.Substations {$ObjectIdentity(0,
    cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_b7dde165007fcb2b29f34bc5728081d3
- description: A graph pattern which lists all values for loadarea limited by parameters
    for none and by filter properties none.
  filters: []
  name: List loadarea by parameters none and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters: []
  paraphrases:
  - What are the load areas in the system?
  - List all the load areas.
  - Can you identify the load areas?
  - Provide me with the load areas.
  - What load areas are defined in the system?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_fdefc7152298d550d570f94dde8a4481
    nl_question: What load areas are defined in the system?
    parameter_bindings: {}
  sparql_template: ?loadarea a cim:LoadArea .
  template_id: template_list_eaa4d7f285453a78006e497924f892a7
- description: A graph pattern which lists all values for loadarea limited by parameters
    for subloadarea (https://cim.ucaiug.io/ns#LoadArea.SubLoadAreas) and by filter
    properties none.
  filters: []
  name: List loadarea by parameters subloadarea and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#LoadArea.SubLoadAreas
    type: https://cim.ucaiug.io/ns#SubLoadArea
  paraphrases:
  - Which load area contains the sub-load area $ObjectIdentity(0, cim:SubLoadArea)?
  - Identify the load area associated with sub-load area $ObjectIdentity(0, cim:SubLoadArea).
  - To which load area does the sub-load area $ObjectIdentity(0, cim:SubLoadArea)
    belong?
  - List the load area that includes the sub-load area $ObjectIdentity(0, cim:SubLoadArea).
  - What is the load area of the sub-load area $ObjectIdentity(0, cim:SubLoadArea)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd901b6
        name: iri_discovery
        output: urn:uuid:2dd901b6-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas <urn:uuid:2dd901b6-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b6-bdfb-11e5-94fa-c8f73332c8f4> a cim:SubLoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_cd6363bf94274bd8e7a05afe253c13fb
    nl_question: Which load area contains the sub-load area 2dd901b6?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubLoadArea): urn:uuid:2dd901b6-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90198
        name: iri_discovery
        output: urn:uuid:2dd90198-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas <urn:uuid:2dd90198-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90198-bdfb-11e5-94fa-c8f73332c8f4> a cim:SubLoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_a571db89e5c4cc02ec46fdc3304bb487
    nl_question: Identify the load area associated with sub-load area 2dd90198.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubLoadArea): urn:uuid:2dd90198-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: NO5 SLA
        name: iri_discovery
        output: urn:uuid:2dd90180-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas <urn:uuid:2dd90180-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90180-bdfb-11e5-94fa-c8f73332c8f4> a cim:SubLoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_5d9f2e4c5f944074bc54dc1d23c0200a
    nl_question: Identify the load area associated with sub-load area NO5 SLA.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubLoadArea): urn:uuid:2dd90180-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: NO3 SLA
        name: iri_discovery
        output: urn:uuid:2dd901ac-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas <urn:uuid:2dd901ac-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901ac-bdfb-11e5-94fa-c8f73332c8f4> a cim:SubLoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_eb23678c88216ca6609db87e3b6dd7c0
    nl_question: What is the load area of the sub-load area NO3 SLA?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubLoadArea): urn:uuid:2dd901ac-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: NO4 SLA
        name: iri_discovery
        output: urn:uuid:2dd901b0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas <urn:uuid:2dd901b0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b0-bdfb-11e5-94fa-c8f73332c8f4> a cim:SubLoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_ebc865e48efe97e80a30952d0a15ec2b
    nl_question: Which load area contains the sub-load area NO4 SLA?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubLoadArea): urn:uuid:2dd901b0-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:LoadArea.SubLoadAreas {$ObjectIdentity(0, cim:SubLoadArea)} .

    {$ObjectIdentity(0, cim:SubLoadArea)} a cim:SubLoadArea ;

    .'
  template_id: template_list_1a6c25ae247335ce7165b4feaaeda2f9
- description: A graph pattern which lists all values for loadarea limited by parameters
    for loadarea (https://cim.ucaiug.io/ns#LoadArea.SubLoadAreas, https://cim.ucaiug.io/ns#SubLoadArea.LoadArea)
    and by filter properties none.
  filters: []
  name: List loadarea by parameters loadarea and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#LoadArea.SubLoadAreas
    - https://cim.ucaiug.io/ns#SubLoadArea.LoadArea
    type: https://cim.ucaiug.io/ns#LoadArea
  paraphrases:
  - Which load areas contain sub-load areas associated with $ObjectIdentity(0, cim:LoadArea)?
  - Identify other load areas linked to the sub-load areas of $ObjectIdentity(0, cim:LoadArea).
  - What load areas have sub-load areas that include $ObjectIdentity(0, cim:LoadArea)?
  - List all load areas associated with the sub-load areas of $ObjectIdentity(0, cim:LoadArea).
  - The sub-load areas of $ObjectIdentity(0, cim:LoadArea) are linked to which other
    load areas?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90179-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadArea <urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_a04405fcbcc2ea7dfcfcefe911bae7d8
    nl_question: The sub-load areas of 2dd90179-bdfb-11e5-94fa-c8f73332c8f4 are linked
      to which other load areas?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadArea): urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: SE LA
        name: iri_discovery
        output: urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadArea <urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_6bc34de622a3f6f1c609957965e30e00
    nl_question: Which load areas contain sub-load areas associated with SE LA?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadArea): urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: FI LA
        name: iri_discovery
        output: urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadArea <urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_82f077834523eccd596856c5dc167ee9
    nl_question: The sub-load areas of FI LA are linked to which other load areas?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadArea): urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadArea {$ObjectIdentity(0, cim:LoadArea)}
    .

    {$ObjectIdentity(0, cim:LoadArea)} a cim:LoadArea ;

    .'
  template_id: template_list_d695f087319d989b2c876ef40f500b3b
- description: A graph pattern which lists all values for loadarea limited by parameters
    for loadgroup (https://cim.ucaiug.io/ns#LoadArea.SubLoadAreas, https://cim.ucaiug.io/ns#SubLoadArea.LoadGroups)
    and by filter properties none.
  filters: []
  name: List loadarea by parameters loadgroup and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#LoadArea.SubLoadAreas
    - https://cim.ucaiug.io/ns#SubLoadArea.LoadGroups
    type: https://cim.ucaiug.io/ns#LoadGroup
  paraphrases:
  - Which LoadArea includes the sub-load area associated with $ObjectIdentity(0, cim:LoadGroup)?
  - To which LoadArea does the load group $ObjectIdentity(0, cim:LoadGroup) belong?
  - Identify the LoadArea that contains the sub-load area of $ObjectIdentity(0, cim:LoadGroup).
  - Which load areas have the sub-load area that includes $ObjectIdentity(0, cim:LoadGroup)?
  - List the LoadArea associated with $ObjectIdentity(0, cim:LoadGroup).
  questions:
  - expected_steps:
    - - args:
          query: 2dd901fb
        name: iri_discovery
        output: urn:uuid:2dd901fb-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadGroups <urn:uuid:2dd901fb-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901fb-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadGroup ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_506c8c04d59857462436385ff431a9a7
    nl_question: Which LoadArea includes the sub-load area associated with 2dd901fb?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadGroup): urn:uuid:2dd901fb-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901da-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901da-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadGroups <urn:uuid:2dd901da-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901da-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadGroup ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_e3e7f354cac123568ffb5c24745b827c
    nl_question: Which load areas have the sub-load area that includes 2dd901da-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadGroup): urn:uuid:2dd901da-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901ce
        name: iri_discovery
        output: urn:uuid:2dd901ce-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadGroups <urn:uuid:2dd901ce-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901ce-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadGroup ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_96c4fea3407a2533147fd40d28d4b28c
    nl_question: Which LoadArea includes the sub-load area associated with 2dd901ce?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadGroup): urn:uuid:2dd901ce-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: STEENKU 135 LG1
        name: iri_discovery
        output: urn:uuid:2dd901ec-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadGroups <urn:uuid:2dd901ec-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901ec-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadGroup ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_c1a550052156bf1e9ebc214c59deb932
    nl_question: Which LoadArea includes the sub-load area associated with STEENKU
      135 LG1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadGroup): urn:uuid:2dd901ec-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901ef-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901ef-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadGroups <urn:uuid:2dd901ef-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901ef-bdfb-11e5-94fa-c8f73332c8f4> a cim:LoadGroup ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_04df181c0d1460d8a6dffac40e51688b
    nl_question: To which LoadArea does the load group 2dd901ef-bdfb-11e5-94fa-c8f73332c8f4
      belong?
    parameter_bindings:
      $ObjectIdentity(0, cim:LoadGroup): urn:uuid:2dd901ef-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:LoadArea.SubLoadAreas/cim:SubLoadArea.LoadGroups {$ObjectIdentity(0, cim:LoadGroup)}
    .

    {$ObjectIdentity(0, cim:LoadGroup)} a cim:LoadGroup ;

    .'
  template_id: template_list_f037abf5ec2a6368dc829d2d04f48260
- description: A graph pattern which lists all values for loadarea limited by parameters
    for controlareageneratingunit (https://cim.ucaiug.io/ns#EnergyArea.ControlArea,
    https://cim.ucaiug.io/ns#ControlArea.ControlAreaGeneratingUnit) and by filter
    properties none.
  filters: []
  name: List loadarea by parameters controlareageneratingunit and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#EnergyArea.ControlArea
    - https://cim.ucaiug.io/ns#ControlArea.ControlAreaGeneratingUnit
    type: https://cim.ucaiug.io/ns#ControlAreaGeneratingUnit
  paraphrases:
  - Which load areas are associated with the control area generating unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit)?
  - Identify the load area linked to $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    in the control area.
  - What load areas are connected through the control area generating unit $ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit)?
  - List the load areas that include $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    as a control area generating unit.
  - Find the load areas that have $ObjectIdentity(0, cim:ControlAreaGeneratingUnit)
    in their control area.
  questions:
  - expected_steps:
    - - args:
          query: f1769882-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.ControlAreaGeneratingUnit <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_ee566418a28f59fb63685a8be4aa7651
    nl_question: Find the load areas that have f1769882-9aeb-11e5-91da-b8763fd99c5f
      in their control area.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769882-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a15
        name: iri_discovery
        output: urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.ControlAreaGeneratingUnit <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_9bd516780406345e742c96224c847e63
    nl_question: List the load areas that include f1769a15 as a control area generating
      unit.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f1769a15-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699a2
        name: iri_discovery
        output: urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.ControlAreaGeneratingUnit <urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_7319b146c03de904effbd7d8c53c9c88
    nl_question: What load areas are connected through the control area generating
      unit f17699a2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699a2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: CAGU_FI_HELSINKIG1
        name: iri_discovery
        output: urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.ControlAreaGeneratingUnit <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_53460f1e09008631d230c39af760fda0
    nl_question: List the load areas that include CAGU_FI_HELSINKIG1 as a control
      area generating unit.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f17699c0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176981b-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.ControlAreaGeneratingUnit <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlAreaGeneratingUnit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_8eaa4de81273d4d6e179642c940cb858
    nl_question: Which load areas are associated with the control area generating
      unit f176981b-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaGeneratingUnit): urn:uuid:f176981b-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:EnergyArea.ControlArea/cim:ControlArea.ControlAreaGeneratingUnit {$ObjectIdentity(0,
    cim:ControlAreaGeneratingUnit)} .

    {$ObjectIdentity(0, cim:ControlAreaGeneratingUnit)} a cim:ControlAreaGeneratingUnit
    ;

    .'
  template_id: template_list_de1d06f5fcb983f0baf8c6089f131e62
- description: A graph pattern which lists all values for loadarea limited by parameters
    for energyarea (https://cim.ucaiug.io/ns#EnergyArea.ControlArea, https://cim.ucaiug.io/ns#ControlArea.EnergyArea)
    and by filter properties none.
  filters: []
  name: List loadarea by parameters energyarea and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#EnergyArea.ControlArea
    - https://cim.ucaiug.io/ns#ControlArea.EnergyArea
    type: https://cim.ucaiug.io/ns#EnergyArea
  paraphrases:
  - Which load areas are associated with $ObjectIdentity(0, cim:EnergyArea)?
  - Identify the load areas linked to the energy area $ObjectIdentity(0, cim:EnergyArea).
  - What load areas belong to the control area of $ObjectIdentity(0, cim:EnergyArea)?
  - List all load areas within the energy area $ObjectIdentity(0, cim:EnergyArea).
  - What are the load areas connected to $ObjectIdentity(0, cim:EnergyArea)?
  questions:
  - expected_steps:
    - - args:
          query: NO LA
        name: iri_discovery
        output: urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.EnergyArea <urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4> a cim:EnergyArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_c283cfba13f65f136abda66b42a2ffb6
    nl_question: List all load areas within the energy area NO LA.
    parameter_bindings:
      $ObjectIdentity(0, cim:EnergyArea): urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90163
        name: iri_discovery
        output: urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.EnergyArea <urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4> a cim:EnergyArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_237a06a387f7a64cf90468b327c74a0a
    nl_question: What load areas belong to the control area of 2dd90163?
    parameter_bindings:
      $ObjectIdentity(0, cim:EnergyArea): urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: FI LA
        name: iri_discovery
        output: urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.EnergyArea <urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4> a cim:EnergyArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_07981017afffbf22e9dd3068f1b41fd2
    nl_question: Identify the load areas linked to the energy area FI LA.
    parameter_bindings:
      $ObjectIdentity(0, cim:EnergyArea): urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:EnergyArea.ControlArea/cim:ControlArea.EnergyArea {$ObjectIdentity(0, cim:EnergyArea)}
    .

    {$ObjectIdentity(0, cim:EnergyArea)} a cim:EnergyArea ;

    .'
  template_id: template_list_5d43955321196fdb557e027ed1db9c57
- description: A graph pattern which lists all values for loadarea limited by parameters
    for controlareatypekind (https://cim.ucaiug.io/ns#EnergyArea.ControlArea, https://cim.ucaiug.io/ns#ControlArea.type)
    and by filter properties none.
  filters: []
  name: List loadarea by parameters controlareatypekind and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#EnergyArea.ControlArea
    - https://cim.ucaiug.io/ns#ControlArea.type
    type: https://cim.ucaiug.io/ns#ControlAreaTypeKind
  paraphrases:
  - Which load areas are associated with the control area type $ObjectIdentity(0,
    cim:ControlAreaTypeKind)?
  - List all load areas controlled by the control area of type $ObjectIdentity(0,
    cim:ControlAreaTypeKind).
  - What load areas belong to control areas of type $ObjectIdentity(0, cim:ControlAreaTypeKind)?
  - Identify the load areas linked to control areas with the type $ObjectIdentity(0,
    cim:ControlAreaTypeKind).
  - Which load areas fall under the control areas defined as $ObjectIdentity(0, cim:ControlAreaTypeKind)?
  questions:
  - expected_steps:
    - - args:
          query: Interchange
        name: iri_discovery
        output: https://cim.ucaiug.io/ns#ControlAreaTypeKind.Interchange
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/cim:ControlArea.type <https://cim.ucaiug.io/ns#ControlAreaTypeKind.Interchange>
            .

            <https://cim.ucaiug.io/ns#ControlAreaTypeKind.Interchange> a cim:ControlAreaTypeKind
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"loadarea": {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_636f4bd8251c1acd82f6763b1eae924f
    nl_question: Identify the load areas linked to control areas with the type Interchange.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlAreaTypeKind): https://cim.ucaiug.io/ns#ControlAreaTypeKind.Interchange
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:EnergyArea.ControlArea/cim:ControlArea.type {$ObjectIdentity(0, cim:ControlAreaTypeKind)}
    .

    {$ObjectIdentity(0, cim:ControlAreaTypeKind)} a cim:ControlAreaTypeKind ;

    .'
  template_id: template_list_445db60f59642283e58990de731a7ec3
- description: A graph pattern which lists all values for loadarea limited by parameters
    for schedulingarea (https://cim.ucaiug.io/ns#EnergyArea.ControlArea, https://cim4.eu/ns/nc#ControlArea.SchedulingArea)
    and by filter properties none.
  filters: []
  name: List loadarea by parameters schedulingarea and filters none
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#EnergyArea.ControlArea
    - https://cim4.eu/ns/nc#ControlArea.SchedulingArea
    type: https://cim4.eu/ns/nc#SchedulingArea
  paraphrases:
  - Which load areas are controlled by $ObjectIdentity(0, nc:SchedulingArea)?
  - Identify the load areas associated with the scheduling area $ObjectIdentity(0,
    nc:SchedulingArea).
  - What load areas belong to the control of $ObjectIdentity(0, nc:SchedulingArea)?
  - List the load areas managed by the scheduling area $ObjectIdentity(0, nc:SchedulingArea).
  - Which load areas fall under the scheduling area $ObjectIdentity(0, nc:SchedulingArea)?
  questions:
  - expected_steps:
    - - args:
          query: 096cb162-6a74-4dcd-b9e5-9845e1f049b6
        name: iri_discovery
        output: urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/nc:ControlArea.SchedulingArea <urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6>
            .

            <urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd901b5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_fc36357ec7372417e1027171b6d2ba4e
    nl_question: What load areas belong to the control of 096cb162-6a74-4dcd-b9e5-9845e1f049b6?
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6
  - expected_steps:
    - - args:
          query: d8739dc3
        name: iri_discovery
        output: urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/nc:ControlArea.SchedulingArea <urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc>
            .

            <urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_26402d6bcd4b8107e8b239783b08cb09
    nl_question: List the load areas managed by the scheduling area d8739dc3.
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc
  - expected_steps:
    - - args:
          query: 553776dc-295d-aa4b-a36e-f563acc71bb7
        name: iri_discovery
        output: urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/nc:ControlArea.SchedulingArea <urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7>
            .

            <urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_ed05a9a25ec3eeaba2245a2bd58dce4c
    nl_question: Identify the load areas associated with the scheduling area 553776dc-295d-aa4b-a36e-f563acc71bb7.
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7
  - expected_steps:
    - - args:
          query: 0b6da2c4-48c2-4a39-953a-38b365e0953e
        name: iri_discovery
        output: urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/nc:ControlArea.SchedulingArea <urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e>
            .

            <urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90179-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_b5589e48a13055388df4e5c751cbff13
    nl_question: Identify the load areas associated with the scheduling area 0b6da2c4-48c2-4a39-953a-38b365e0953e.
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e
  - expected_steps:
    - - args:
          query: SA-SE2
        name: iri_discovery
        output: urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?loadarea WHERE {

            ?loadarea a cim:LoadArea ;

            cim:EnergyArea.ControlArea/nc:ControlArea.SchedulingArea <urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724>
            .

            <urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["loadarea"]}, "results": {"bindings": [{"loadarea":
          {"type": "uri", "value": "urn:uuid:2dd90163-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - loadarea
    id: question_3c2c2dc98728446c1523fc7072e9c101
    nl_question: List the load areas managed by the scheduling area SA-SE2.
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:EnergyArea.ControlArea/nc:ControlArea.SchedulingArea {$ObjectIdentity(0, nc:SchedulingArea)}
    .

    {$ObjectIdentity(0, nc:SchedulingArea)} a nc:SchedulingArea ;

    .'
  template_id: template_list_73283b196f1868ff0c12dd2669fa369a
- description: A graph pattern which lists all values for loadarea limited by parameters
    for none and by filter properties controlarea.netinterchange.
  filters:
  - property: https://cim.ucaiug.io/ns#ControlArea.netInterchange
    subject: cim:LoadArea
    type: xsd:float
  name: List loadarea by parameters none and filters controlarea.netinterchange
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters: []
  paraphrases:
  - What load areas have a net interchange of $ValueFilter(cim:LoadArea, cim:ControlArea.netInterchange,
    xsd:float)?
  - List the load areas where the net interchange is $ValueFilter(cim:LoadArea, cim:ControlArea.netInterchange,
    xsd:float).
  - Which load areas possess a net interchange of $ValueFilter(cim:LoadArea, cim:ControlArea.netInterchange,
    xsd:float)?
  - Provide load areas with a net interchange value of $ValueFilter(cim:LoadArea,
    cim:ControlArea.netInterchange, xsd:float).
  - Identify the load areas having a net interchange of $ValueFilter(cim:LoadArea,
    cim:ControlArea.netInterchange, xsd:float).
  questions: []
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:ControlArea.netInterchange {$ValueFilter(cim:LoadArea, cim:ControlArea.netInterchange,
    xsd:float)} .'
  template_id: template_list_5d1957010e70846d6ac4551655250c33
- description: A graph pattern which lists all values for loadarea limited by parameters
    for none and by filter properties controlarea.ptolerance.
  filters:
  - property: https://cim.ucaiug.io/ns#ControlArea.pTolerance
    subject: cim:LoadArea
    type: xsd:float
  name: List loadarea by parameters none and filters controlarea.ptolerance
  outputs:
  - name: loadarea
    type: cim:LoadArea
  parameters: []
  paraphrases:
  - Which load areas have a power tolerance of $ValueFilter(cim:LoadArea, cim:ControlArea.pTolerance,
    xsd:float)?
  - List all load areas with a power tolerance of $ValueFilter(cim:LoadArea, cim:ControlArea.pTolerance,
    xsd:float).
  - What are the load areas having a control area power tolerance of $ValueFilter(cim:LoadArea,
    cim:ControlArea.pTolerance, xsd:float)?
  - Identify the load areas with a power tolerance value of $ValueFilter(cim:LoadArea,
    cim:ControlArea.pTolerance, xsd:float).
  - Which load areas have a control area pTolerance value equal to $ValueFilter(cim:LoadArea,
    cim:ControlArea.pTolerance, xsd:float)?
  questions: []
  sparql_template: '?loadarea a cim:LoadArea ;

    cim:ControlArea.pTolerance {$ValueFilter(cim:LoadArea, cim:ControlArea.pTolerance,
    xsd:float)} .'
  template_id: template_list_29047b10686b7e5ee5721ddb74086a53
- description: A graph pattern which lists all values for location limited by parameters
    for none and by filter properties none.
  filters: []
  name: List location by parameters none and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters: []
  paraphrases:
  - What locations are recorded in the dataset?
  - List all the locations available.
  - Can you identify the locations in the data?
  - What are the different locations present?
  - Provide a list of all known locations.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_3182ed802f536c171904c12a4f06f073
    nl_question: What are the different locations present?
    parameter_bindings: {}
  sparql_template: ?location a cim:Location .
  template_id: template_list_6e116f15474dcc8fae9eabc24015d835
- description: A graph pattern which lists all values for location limited by parameters
    for coordinatesystem (https://cim.ucaiug.io/ns#Location.CoordinateSystem) and
    by filter properties none.
  filters: []
  name: List location by parameters coordinatesystem and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.CoordinateSystem
    type: https://cim.ucaiug.io/ns#CoordinateSystem
  paraphrases:
  - Which locations use the coordinate system $ObjectIdentity(0, cim:CoordinateSystem)?
  - List all locations associated with the coordinate system $ObjectIdentity(0, cim:CoordinateSystem).
  - What locations are defined under the coordinate system $ObjectIdentity(0, cim:CoordinateSystem)?
  - Identify the locations that are linked to the coordinate system $ObjectIdentity(0,
    cim:CoordinateSystem).
  - Provide all locations that are in the scope of the coordinate system $ObjectIdentity(0,
    cim:CoordinateSystem).
  questions:
  - expected_steps:
    - - args:
          query: 97f147c9-6990-634d-bb6c-c0808728437e
        name: iri_discovery
        output: urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e>
            .

            <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e> a cim:CoordinateSystem
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_2c47a6e434c40aedcd6f0b1f27b6a09f
    nl_question: Identify the locations that are linked to the coordinate system 97f147c9-6990-634d-bb6c-c0808728437e.
    parameter_bindings:
      $ObjectIdentity(0, cim:CoordinateSystem): urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
  sparql_template: '?location a cim:Location ;

    cim:Location.CoordinateSystem {$ObjectIdentity(0, cim:CoordinateSystem)} .

    {$ObjectIdentity(0, cim:CoordinateSystem)} a cim:CoordinateSystem ;

    .'
  template_id: template_list_2886847f1d0eb3242fd2077e50609cf9
- description: A graph pattern which lists all values for location limited by parameters
    for positionpoint (https://cim.ucaiug.io/ns#Location.PositionPoints) and by filter
    properties none.
  filters: []
  name: List location by parameters positionpoint and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.PositionPoints
    type: https://cim.ucaiug.io/ns#PositionPoint
  paraphrases:
  - What location is associated with $ObjectIdentity(0, cim:PositionPoint)?
  - Identify the location related to $ObjectIdentity(0, cim:PositionPoint).
  - Which location does $ObjectIdentity(0, cim:PositionPoint) belong to?
  - Find the location that includes the position point $ObjectIdentity(0, cim:PositionPoint).
  - List the locations linked to $ObjectIdentity(0, cim:PositionPoint).
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:1b0a8312-c85c-fa4c-b8e3-a3d244432980
        name: iri_discovery
        output: urn:uuid:1b0a8312-c85c-fa4c-b8e3-a3d244432980
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:1b0a8312-c85c-fa4c-b8e3-a3d244432980>
            .

            <urn:uuid:1b0a8312-c85c-fa4c-b8e3-a3d244432980> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_fb89fceba8f8a575abdcacdf3936689b
    nl_question: Find the location that includes the position point urn:uuid:1b0a8312-c85c-fa4c-b8e3-a3d244432980.
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:1b0a8312-c85c-fa4c-b8e3-a3d244432980
  - expected_steps:
    - - args:
          query: urn:uuid:f48154e6-d02f-ef41-96df-b12b987d61c4
        name: iri_discovery
        output: urn:uuid:f48154e6-d02f-ef41-96df-b12b987d61c4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:f48154e6-d02f-ef41-96df-b12b987d61c4>
            .

            <urn:uuid:f48154e6-d02f-ef41-96df-b12b987d61c4> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_88324f6fa7a26c486feb1a79c89a98a5
    nl_question: Which location does urn:uuid:f48154e6-d02f-ef41-96df-b12b987d61c4
      belong to?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:f48154e6-d02f-ef41-96df-b12b987d61c4
  - expected_steps:
    - - args:
          query: urn:uuid:87b8069d-b617-6a49-806c-1834eb288a9b
        name: iri_discovery
        output: urn:uuid:87b8069d-b617-6a49-806c-1834eb288a9b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:87b8069d-b617-6a49-806c-1834eb288a9b>
            .

            <urn:uuid:87b8069d-b617-6a49-806c-1834eb288a9b> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_30686b7470df5990f877c40d8c2b5a8b
    nl_question: Which location does urn:uuid:87b8069d-b617-6a49-806c-1834eb288a9b
      belong to?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:87b8069d-b617-6a49-806c-1834eb288a9b
  - expected_steps:
    - - args:
          query: urn:uuid:b3d49f69-2f01-844d-a8b5-bb43d6b4eddc
        name: iri_discovery
        output: urn:uuid:b3d49f69-2f01-844d-a8b5-bb43d6b4eddc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:b3d49f69-2f01-844d-a8b5-bb43d6b4eddc>
            .

            <urn:uuid:b3d49f69-2f01-844d-a8b5-bb43d6b4eddc> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_5142aef2841966f7545b9425f3e5bb5f
    nl_question: Which location does urn:uuid:b3d49f69-2f01-844d-a8b5-bb43d6b4eddc
      belong to?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:b3d49f69-2f01-844d-a8b5-bb43d6b4eddc
  - expected_steps:
    - - args:
          query: urn:uuid:5135680f-45ab-ad4d-a3cd-3630f0fcc6d4
        name: iri_discovery
        output: urn:uuid:5135680f-45ab-ad4d-a3cd-3630f0fcc6d4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:5135680f-45ab-ad4d-a3cd-3630f0fcc6d4>
            .

            <urn:uuid:5135680f-45ab-ad4d-a3cd-3630f0fcc6d4> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_2cf7dee097d73abd6d23ed7c62be4931
    nl_question: What location is associated with urn:uuid:5135680f-45ab-ad4d-a3cd-3630f0fcc6d4?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:5135680f-45ab-ad4d-a3cd-3630f0fcc6d4
  sparql_template: '?location a cim:Location ;

    cim:Location.PositionPoints {$ObjectIdentity(0, cim:PositionPoint)} .

    {$ObjectIdentity(0, cim:PositionPoint)} a cim:PositionPoint ;

    .'
  template_id: template_list_3490fbb1b6a332d78f07694b3f456aff
- description: A graph pattern which lists all values for location limited by parameters
    for powersystemresource (https://cim.ucaiug.io/ns#Location.PowerSystemResources)
    and by filter properties none.
  filters: []
  name: List location by parameters powersystemresource and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.PowerSystemResources
    type: https://cim.ucaiug.io/ns#PowerSystemResource
  paraphrases:
  - What is the location of $ObjectIdentity(0, cim:PowerSystemResource)?
  - Identify the location where $ObjectIdentity(0, cim:PowerSystemResource) is situated.
  - Where can $ObjectIdentity(0, cim:PowerSystemResource) be found?
  - Which location is associated with $ObjectIdentity(0, cim:PowerSystemResource)?
  - Provide the location linked to $ObjectIdentity(0, cim:PowerSystemResource).
  questions:
  - expected_steps:
    - - args:
          query: f176969e
        name: iri_discovery
        output: urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PowerSystemResources <urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_487979ce1ccc4c050ca63e53e27ce5bd
    nl_question: Where can f176969e be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerSystemResource): urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KVILLDAL
        name: iri_discovery
        output: urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PowerSystemResources <urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_edbf491e1b39a0c4ad4d6010d29bc225
    nl_question: Identify the location where KVILLDAL is situated.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerSystemResource): urn:uuid:f1769682-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d70
        name: iri_discovery
        output: urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PowerSystemResources <urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_1a3da68e9b039c2b34f7bdc925118152
    nl_question: Where can f1769d70 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerSystemResource): urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c80-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769c80-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PowerSystemResources <urn:uuid:f1769c80-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c80-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_3656a92af21eefc41ea91848d446ab25
    nl_question: Where can f1769c80-9aeb-11e5-91da-b8763fd99c5f be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerSystemResource): urn:uuid:f1769c80-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176961e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PowerSystemResources <urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_9f1e7a2fbb805b4ba4fa2428030c59d3
    nl_question: What is the location of f176961e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerSystemResource): urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?location a cim:Location ;

    cim:Location.PowerSystemResources {$ObjectIdentity(0, cim:PowerSystemResource)}
    .

    {$ObjectIdentity(0, cim:PowerSystemResource)} a cim:PowerSystemResource ;

    .'
  template_id: template_list_850c7fd3b1da79d98a60b6374a5ba9af
- description: A graph pattern which lists all values for location limited by parameters
    for coordinatesystem (https://cim.ucaiug.io/ns#Location.CoordinateSystem), positionpoint
    (https://cim.ucaiug.io/ns#Location.PositionPoints) and by filter properties none.
  filters: []
  name: List location by parameters coordinatesystem, positionpoint and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.CoordinateSystem
    type: https://cim.ucaiug.io/ns#CoordinateSystem
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Location.PositionPoints
    type: https://cim.ucaiug.io/ns#PositionPoint
  paraphrases:
  - What locations use the coordinate system $ObjectIdentity(0, cim:CoordinateSystem)
    and have position point $ObjectIdentity(1, cim:PositionPoint)?
  - Identify the locations associated with the coordinate system $ObjectIdentity(0,
    cim:CoordinateSystem) and position point $ObjectIdentity(1, cim:PositionPoint).
  - Which locations are linked to the coordinate system $ObjectIdentity(0, cim:CoordinateSystem)
    and the position point $ObjectIdentity(1, cim:PositionPoint)?
  - List all locations that are associated with $ObjectIdentity(0, cim:CoordinateSystem)
    and position point $ObjectIdentity(1, cim:PositionPoint).
  - What locations have $ObjectIdentity(0, cim:CoordinateSystem) as their coordinate
    system and include position point $ObjectIdentity(1, cim:PositionPoint)?
  questions:
  - expected_steps:
    - - args:
          query: 97f147c9-6990-634d-bb6c-c0808728437e
        name: iri_discovery
        output: urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:0da4a39f-5a7d-684e-b35f-65f13d7d5a47
        name: iri_discovery
        output: urn:uuid:0da4a39f-5a7d-684e-b35f-65f13d7d5a47
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e>
            ;

            cim:Location.PositionPoints <urn:uuid:0da4a39f-5a7d-684e-b35f-65f13d7d5a47>
            .

            <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e> a cim:CoordinateSystem
            ;

            .

            <urn:uuid:0da4a39f-5a7d-684e-b35f-65f13d7d5a47> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_acf19e6b77a39308fed8782850bf45f6
    nl_question: List all locations that are associated with 97f147c9-6990-634d-bb6c-c0808728437e
      and position point urn:uuid:0da4a39f-5a7d-684e-b35f-65f13d7d5a47.
    parameter_bindings:
      $ObjectIdentity(0, cim:CoordinateSystem): urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
      $ObjectIdentity(1, cim:PositionPoint): urn:uuid:0da4a39f-5a7d-684e-b35f-65f13d7d5a47
  - expected_steps:
    - - args:
          query: 97f147c9-6990-634d-bb6c-c0808728437e
        name: iri_discovery
        output: urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:e835bab3-3c6c-184f-afcc-4a95161e3d16
        name: iri_discovery
        output: urn:uuid:e835bab3-3c6c-184f-afcc-4a95161e3d16
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e>
            ;

            cim:Location.PositionPoints <urn:uuid:e835bab3-3c6c-184f-afcc-4a95161e3d16>
            .

            <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e> a cim:CoordinateSystem
            ;

            .

            <urn:uuid:e835bab3-3c6c-184f-afcc-4a95161e3d16> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_13b98b457775dc8ee7b1b78a56d3c9ff
    nl_question: Which locations are linked to the coordinate system 97f147c9-6990-634d-bb6c-c0808728437e
      and the position point urn:uuid:e835bab3-3c6c-184f-afcc-4a95161e3d16?
    parameter_bindings:
      $ObjectIdentity(0, cim:CoordinateSystem): urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
      $ObjectIdentity(1, cim:PositionPoint): urn:uuid:e835bab3-3c6c-184f-afcc-4a95161e3d16
  - expected_steps:
    - - args:
          query: 97f147c9-6990-634d-bb6c-c0808728437e
        name: iri_discovery
        output: urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:e3839600-3831-274a-8711-b1ebd32e2362
        name: iri_discovery
        output: urn:uuid:e3839600-3831-274a-8711-b1ebd32e2362
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e>
            ;

            cim:Location.PositionPoints <urn:uuid:e3839600-3831-274a-8711-b1ebd32e2362>
            .

            <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e> a cim:CoordinateSystem
            ;

            .

            <urn:uuid:e3839600-3831-274a-8711-b1ebd32e2362> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_aac4b0e562cce471b731351eccbb2ddf
    nl_question: Identify the locations associated with the coordinate system 97f147c9-6990-634d-bb6c-c0808728437e
      and position point urn:uuid:e3839600-3831-274a-8711-b1ebd32e2362.
    parameter_bindings:
      $ObjectIdentity(0, cim:CoordinateSystem): urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
      $ObjectIdentity(1, cim:PositionPoint): urn:uuid:e3839600-3831-274a-8711-b1ebd32e2362
  - expected_steps:
    - - args:
          query: 97f147c9-6990-634d-bb6c-c0808728437e
        name: iri_discovery
        output: urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:60f8ffff-f2a5-3647-a010-1db21c3d8eae
        name: iri_discovery
        output: urn:uuid:60f8ffff-f2a5-3647-a010-1db21c3d8eae
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e>
            ;

            cim:Location.PositionPoints <urn:uuid:60f8ffff-f2a5-3647-a010-1db21c3d8eae>
            .

            <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e> a cim:CoordinateSystem
            ;

            .

            <urn:uuid:60f8ffff-f2a5-3647-a010-1db21c3d8eae> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_1f3adbb97de7097106609fc423a6b7c0
    nl_question: What locations use the coordinate system 97f147c9-6990-634d-bb6c-c0808728437e
      and have position point urn:uuid:60f8ffff-f2a5-3647-a010-1db21c3d8eae?
    parameter_bindings:
      $ObjectIdentity(0, cim:CoordinateSystem): urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
      $ObjectIdentity(1, cim:PositionPoint): urn:uuid:60f8ffff-f2a5-3647-a010-1db21c3d8eae
  - expected_steps:
    - - args:
          query: 97f147c9-6990-634d-bb6c-c0808728437e
        name: iri_discovery
        output: urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:847957b4-e521-2449-9305-e75393c73721
        name: iri_discovery
        output: urn:uuid:847957b4-e521-2449-9305-e75393c73721
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e>
            ;

            cim:Location.PositionPoints <urn:uuid:847957b4-e521-2449-9305-e75393c73721>
            .

            <urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e> a cim:CoordinateSystem
            ;

            .

            <urn:uuid:847957b4-e521-2449-9305-e75393c73721> a cim:PositionPoint ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_8780e91a5f289546acb2bee666eb16ab
    nl_question: What locations have 97f147c9-6990-634d-bb6c-c0808728437e as their
      coordinate system and include position point urn:uuid:847957b4-e521-2449-9305-e75393c73721?
    parameter_bindings:
      $ObjectIdentity(0, cim:CoordinateSystem): urn:uuid:97f147c9-6990-634d-bb6c-c0808728437e
      $ObjectIdentity(1, cim:PositionPoint): urn:uuid:847957b4-e521-2449-9305-e75393c73721
  sparql_template: '?location a cim:Location ;

    cim:Location.CoordinateSystem {$ObjectIdentity(0, cim:CoordinateSystem)} ;

    cim:Location.PositionPoints {$ObjectIdentity(1, cim:PositionPoint)} .

    {$ObjectIdentity(0, cim:CoordinateSystem)} a cim:CoordinateSystem ;

    .

    {$ObjectIdentity(1, cim:PositionPoint)} a cim:PositionPoint ;

    .'
  template_id: template_list_554fc450dbebc77a0739c5b962284b69
- description: A graph pattern which lists all values for location limited by parameters
    for coordinatesystem (https://cim.ucaiug.io/ns#Location.CoordinateSystem), powersystemresource
    (https://cim.ucaiug.io/ns#Location.PowerSystemResources) and by filter properties
    none.
  filters: []
  name: List location by parameters coordinatesystem, powersystemresource and filters
    none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.CoordinateSystem
    type: https://cim.ucaiug.io/ns#CoordinateSystem
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Location.PowerSystemResources
    type: https://cim.ucaiug.io/ns#PowerSystemResource
  paraphrases:
  - Which power system resources are located in the coordinate system $ObjectIdentity(0,
    cim:CoordinateSystem)?
  - Identify power system resources associated with the coordinate system $ObjectIdentity(0,
    cim:CoordinateSystem).
  - What power system resources belong to the location linked to $ObjectIdentity(0,
    cim:CoordinateSystem)?
  - List all power system resources in the location associated with the coordinate
    system $ObjectIdentity(0, cim:CoordinateSystem).
  - What is the relationship between $ObjectIdentity(1, cim:PowerSystemResource) and
    the coordinate system $ObjectIdentity(0, cim:CoordinateSystem)?
  questions: []
  sparql_template: '?location a cim:Location ;

    cim:Location.CoordinateSystem {$ObjectIdentity(0, cim:CoordinateSystem)} ;

    cim:Location.PowerSystemResources {$ObjectIdentity(1, cim:PowerSystemResource)}
    .

    {$ObjectIdentity(0, cim:CoordinateSystem)} a cim:CoordinateSystem ;

    .

    {$ObjectIdentity(1, cim:PowerSystemResource)} a cim:PowerSystemResource ;

    .'
  template_id: template_list_5461167803dd230ff2393fd6b63a57f5
- description: A graph pattern which lists all values for location limited by parameters
    for positionpoint (https://cim.ucaiug.io/ns#Location.PositionPoints), powersystemresource
    (https://cim.ucaiug.io/ns#Location.PowerSystemResources) and by filter properties
    none.
  filters: []
  name: List location by parameters positionpoint, powersystemresource and filters
    none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.PositionPoints
    type: https://cim.ucaiug.io/ns#PositionPoint
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Location.PowerSystemResources
    type: https://cim.ucaiug.io/ns#PowerSystemResource
  paraphrases:
  - What is the location associated with $ObjectIdentity(0, cim:PositionPoint) and
    $ObjectIdentity(1, cim:PowerSystemResource)?
  - Which location has the position point $ObjectIdentity(0, cim:PositionPoint) and
    contains the power system resource $ObjectIdentity(1, cim:PowerSystemResource)?
  - Identify the location that includes $ObjectIdentity(0, cim:PositionPoint) and
    is linked to $ObjectIdentity(1, cim:PowerSystemResource).
  - List the location associated with the position point $ObjectIdentity(0, cim:PositionPoint)
    and power system resource $ObjectIdentity(1, cim:PowerSystemResource).
  - What location connects the position point $ObjectIdentity(0, cim:PositionPoint)
    and the power system resource $ObjectIdentity(1, cim:PowerSystemResource)?
  questions:
  - expected_steps:
    - - args:
          query: 420DAGALI-GEILO
        name: iri_discovery
        output: urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:03a06e7d-7001-464c-be53-4f1c51ffb8d5
        name: iri_discovery
        output: urn:uuid:03a06e7d-7001-464c-be53-4f1c51ffb8d5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:03a06e7d-7001-464c-be53-4f1c51ffb8d5>
            ;

            cim:Location.PowerSystemResources <urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:03a06e7d-7001-464c-be53-4f1c51ffb8d5> a cim:PositionPoint ;

            .

            <urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_e11dff56d366f1269a03acfd7511f262
    nl_question: What is the location associated with urn:uuid:03a06e7d-7001-464c-be53-4f1c51ffb8d5
      and 420DAGALI-GEILO?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:03a06e7d-7001-464c-be53-4f1c51ffb8d5
      $ObjectIdentity(1, cim:PowerSystemResource): urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 300OSLO-KVILLDAL
        name: iri_discovery
        output: urn:uuid:f1769c74-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:d277d42b-f359-e947-99dd-d226aa0e9601
        name: iri_discovery
        output: urn:uuid:d277d42b-f359-e947-99dd-d226aa0e9601
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:d277d42b-f359-e947-99dd-d226aa0e9601>
            ;

            cim:Location.PowerSystemResources <urn:uuid:f1769c74-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:d277d42b-f359-e947-99dd-d226aa0e9601> a cim:PositionPoint ;

            .

            <urn:uuid:f1769c74-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_3b7944ad51b6a1295ae61252319079c3
    nl_question: Identify the location that includes urn:uuid:d277d42b-f359-e947-99dd-d226aa0e9601
      and is linked to 300OSLO-KVILLDAL.
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:d277d42b-f359-e947-99dd-d226aa0e9601
      $ObjectIdentity(1, cim:PowerSystemResource): urn:uuid:f1769c74-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a94-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a94-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:e1616784-f428-4e4a-8971-9bdbbe298a22
        name: iri_discovery
        output: urn:uuid:e1616784-f428-4e4a-8971-9bdbbe298a22
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:e1616784-f428-4e4a-8971-9bdbbe298a22>
            ;

            cim:Location.PowerSystemResources <urn:uuid:f1769a94-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:e1616784-f428-4e4a-8971-9bdbbe298a22> a cim:PositionPoint ;

            .

            <urn:uuid:f1769a94-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_90ac7b59f3ab0fb8f7b926ef85a6ad2c
    nl_question: Which location has the position point urn:uuid:e1616784-f428-4e4a-8971-9bdbbe298a22
      and contains the power system resource f1769a94-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:e1616784-f428-4e4a-8971-9bdbbe298a22
      $ObjectIdentity(1, cim:PowerSystemResource): urn:uuid:f1769a94-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARRIE_HVDC
        name: iri_discovery
        output: urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:6d3b29b5-cdc8-424a-9902-1a9299659c4d
        name: iri_discovery
        output: urn:uuid:6d3b29b5-cdc8-424a-9902-1a9299659c4d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:6d3b29b5-cdc8-424a-9902-1a9299659c4d>
            ;

            cim:Location.PowerSystemResources <urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:6d3b29b5-cdc8-424a-9902-1a9299659c4d> a cim:PositionPoint ;

            .

            <urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_455c4e115110a2d9922c431e2efd5ba3
    nl_question: Identify the location that includes urn:uuid:6d3b29b5-cdc8-424a-9902-1a9299659c4d
      and is linked to ARRIE_HVDC.
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:6d3b29b5-cdc8-424a-9902-1a9299659c4d
      $ObjectIdentity(1, cim:PowerSystemResource): urn:uuid:f17696d4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769bde-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769bde-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:8d59c371-70b3-8c48-a723-e231461dc28c
        name: iri_discovery
        output: urn:uuid:8d59c371-70b3-8c48-a723-e231461dc28c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints <urn:uuid:8d59c371-70b3-8c48-a723-e231461dc28c>
            ;

            cim:Location.PowerSystemResources <urn:uuid:f1769bde-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:8d59c371-70b3-8c48-a723-e231461dc28c> a cim:PositionPoint ;

            .

            <urn:uuid:f1769bde-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerSystemResource
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_20b911a2c6e055a9776e86f30ee03955
    nl_question: What location connects the position point urn:uuid:8d59c371-70b3-8c48-a723-e231461dc28c
      and the power system resource f1769bde-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PositionPoint): urn:uuid:8d59c371-70b3-8c48-a723-e231461dc28c
      $ObjectIdentity(1, cim:PowerSystemResource): urn:uuid:f1769bde-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?location a cim:Location ;

    cim:Location.PositionPoints {$ObjectIdentity(0, cim:PositionPoint)} ;

    cim:Location.PowerSystemResources {$ObjectIdentity(1, cim:PowerSystemResource)}
    .

    {$ObjectIdentity(0, cim:PositionPoint)} a cim:PositionPoint ;

    .

    {$ObjectIdentity(1, cim:PowerSystemResource)} a cim:PowerSystemResource ;

    .'
  template_id: template_list_32b90bb074e54c9f274321aec02fd1ca
- description: A graph pattern which lists all values for location limited by parameters
    for location (https://cim.ucaiug.io/ns#Location.PositionPoints, https://cim.ucaiug.io/ns#PositionPoint.Location)
    and by filter properties none.
  filters: []
  name: List location by parameters location and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.PositionPoints
    - https://cim.ucaiug.io/ns#PositionPoint.Location
    type: https://cim.ucaiug.io/ns#Location
  paraphrases:
  - What locations share position points with $ObjectIdentity(0, cim:Location)?
  - Identify other locations associated with the same position points as $ObjectIdentity(0,
    cim:Location).
  - Which locations have position points linked to $ObjectIdentity(0, cim:Location)?
  - List all locations connected through position points with $ObjectIdentity(0, cim:Location).
  - What are the locations that share position points with $ObjectIdentity(0, cim:Location)?
  questions:
  - expected_steps:
    - - args:
          query: 3c7f90bf
        name: iri_discovery
        output: urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints/cim:PositionPoint.Location <urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8>
            .

            <urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_6975975dda1242d520237e1432600ee1
    nl_question: What locations share position points with 3c7f90bf?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8
  - expected_steps:
    - - args:
          query: cdf966f5
        name: iri_discovery
        output: urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints/cim:PositionPoint.Location <urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92>
            .

            <urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_f8f4262234bd2bff2cf269e3dec67bfc
    nl_question: What locations share position points with cdf966f5?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92
  - expected_steps:
    - - args:
          query: f3003bf2-61c4-4148-8fee-a001113f6285
        name: iri_discovery
        output: urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints/cim:PositionPoint.Location <urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285>
            .

            <urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_8caf1a0c7abad7136926d74cdd19a8b6
    nl_question: Which locations have position points linked to f3003bf2-61c4-4148-8fee-a001113f6285?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285
  - expected_steps:
    - - args:
          query: '92737251'
        name: iri_discovery
        output: urn:uuid:92737251-459f-c64e-8706-8db42a1d6704
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints/cim:PositionPoint.Location <urn:uuid:92737251-459f-c64e-8706-8db42a1d6704>
            .

            <urn:uuid:92737251-459f-c64e-8706-8db42a1d6704> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_a08bcc1c7eb4dfa3ef70f6bb1e3086da
    nl_question: Which locations have position points linked to 92737251?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:92737251-459f-c64e-8706-8db42a1d6704
  - expected_steps:
    - - args:
          query: 8e50676a-7a57-1149-b8df-04e99c5e0539
        name: iri_discovery
        output: urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.PositionPoints/cim:PositionPoint.Location <urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539>
            .

            <urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_c837fb493c316be6646e6907299e5a3b
    nl_question: List all locations connected through position points with 8e50676a-7a57-1149-b8df-04e99c5e0539.
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539
  sparql_template: '?location a cim:Location ;

    cim:Location.PositionPoints/cim:PositionPoint.Location {$ObjectIdentity(0, cim:Location)}
    .

    {$ObjectIdentity(0, cim:Location)} a cim:Location ;

    .'
  template_id: template_list_eab76f9ff415b9bc4211883047a2dd4d
- description: A graph pattern which lists all values for location limited by parameters
    for location (https://cim.ucaiug.io/ns#Location.CoordinateSystem, https://cim.ucaiug.io/ns#CoordinateSystem.Locations)
    and by filter properties none.
  filters: []
  name: List location by parameters location and filters none
  outputs:
  - name: location
    type: cim:Location
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Location.CoordinateSystem
    - https://cim.ucaiug.io/ns#CoordinateSystem.Locations
    type: https://cim.ucaiug.io/ns#Location
  paraphrases:
  - What locations share the same coordinate system as $ObjectIdentity(0, cim:Location)?
  - Which other locations are associated with the coordinate system of $ObjectIdentity(0,
    cim:Location)?
  - Identify the locations connected to the same coordinate system as $ObjectIdentity(0,
    cim:Location).
  - List all locations that use the coordinate system of $ObjectIdentity(0, cim:Location).
  - Are there any other locations in the coordinate system of $ObjectIdentity(0, cim:Location)?
  questions:
  - expected_steps:
    - - args:
          query: 8684cd99-b071-724b-a20e-589ba71fcb23
        name: iri_discovery
        output: urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem/cim:CoordinateSystem.Locations <urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23>
            .

            <urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_53cecb9e0217537695c188ec9c38d974
    nl_question: Which other locations are associated with the coordinate system of
      8684cd99-b071-724b-a20e-589ba71fcb23?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23
  - expected_steps:
    - - args:
          query: 1b5dbf69
        name: iri_discovery
        output: urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem/cim:CoordinateSystem.Locations <urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19>
            .

            <urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_8ebb94cc7605e36555b2df9d300c5feb
    nl_question: Are there any other locations in the coordinate system of 1b5dbf69?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19
  - expected_steps:
    - - args:
          query: 09be1772-9d61-f049-ad21-b4ac444c00c3
        name: iri_discovery
        output: urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem/cim:CoordinateSystem.Locations <urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3>
            .

            <urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_cdcd59ae1c6f1bc5c62658cb5335e52e
    nl_question: Identify the locations connected to the same coordinate system as
      09be1772-9d61-f049-ad21-b4ac444c00c3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3
  - expected_steps:
    - - args:
          query: b536300f
        name: iri_discovery
        output: urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem/cim:CoordinateSystem.Locations <urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d>
            .

            <urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_8a3e1d35508b1ab9e00c70519f14a3ea
    nl_question: Are there any other locations in the coordinate system of b536300f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d
  - expected_steps:
    - - args:
          query: 428a9489-3de8-b44f-825b-d4ff01334734
        name: iri_discovery
        output: urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?location WHERE {

            ?location a cim:Location ;

            cim:Location.CoordinateSystem/cim:CoordinateSystem.Locations <urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734>
            .

            <urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734> a cim:Location ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["location"]}, "results": {"bindings": [{"location":
          {"type": "uri", "value": "urn:uuid:e856b3a5-d35c-b24c-8c34-5df3c34d3201"}},
          {"location": {"type": "uri", "value": "urn:uuid:ef94527a-cf80-9d42-9a26-878e0a46be6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:fe9aff62-2fb9-fb47-a7dd-84e17886f125"}},
          {"location": {"type": "uri", "value": "urn:uuid:98bffdda-be00-834e-b5d1-8f4eddf7e29d"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d16daa8-c47e-5846-a9be-afa1013e7c3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:e3209dfa-7d59-be4c-9386-e80fc29c6ea1"}},
          {"location": {"type": "uri", "value": "urn:uuid:e126bd2d-f054-c14f-9357-3abb959e1310"}},
          {"location": {"type": "uri", "value": "urn:uuid:fb37bf95-404c-fa47-a11d-c1ac50ec285a"}},
          {"location": {"type": "uri", "value": "urn:uuid:a1dea812-430a-8242-b5a8-68e36beba06b"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8d90c2a-9f8d-9c4c-b709-5f3aa483924a"}},
          {"location": {"type": "uri", "value": "urn:uuid:7b4fd2ce-d6a2-284d-bc64-ba267c0e456b"}},
          {"location": {"type": "uri", "value": "urn:uuid:2cd4be05-6819-9c42-84fc-578ca3713804"}},
          {"location": {"type": "uri", "value": "urn:uuid:64003f65-4313-f04f-85de-4202479ba890"}},
          {"location": {"type": "uri", "value": "urn:uuid:4af60d2f-2eda-2a47-9160-b99373fac42a"}},
          {"location": {"type": "uri", "value": "urn:uuid:0ecda9c5-8ead-4a46-9c85-0ee083cff821"}},
          {"location": {"type": "uri", "value": "urn:uuid:451925fb-6337-ec40-8602-931afd9fa5a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6f48931-3144-a244-b36c-e617310d93f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:030bfb89-df8e-f34f-8ee6-11644fa72780"}},
          {"location": {"type": "uri", "value": "urn:uuid:162e0186-5264-ca46-83b4-cab4152eee16"}},
          {"location": {"type": "uri", "value": "urn:uuid:40268fe9-72e0-a64f-bb9f-3b9d82930151"}},
          {"location": {"type": "uri", "value": "urn:uuid:45fcc108-61a1-5745-8be0-1559ae23684a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ff59cf96-1810-2b45-970d-f50baaf0b7b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:e1f3dd6c-b6d4-4543-88f3-9630a0142d3b"}},
          {"location": {"type": "uri", "value": "urn:uuid:b682f85f-4bdc-d94e-ab23-9592f2cf8575"}},
          {"location": {"type": "uri", "value": "urn:uuid:93b85afe-f2ff-a143-b8df-d6965b1f88be"}},
          {"location": {"type": "uri", "value": "urn:uuid:ea1bd5fe-3a33-7140-b4a1-83982293f4bc"}},
          {"location": {"type": "uri", "value": "urn:uuid:c1f049a5-6ef7-f546-ae59-77371237e425"}},
          {"location": {"type": "uri", "value": "urn:uuid:2975a721-1168-774f-b6ee-af75d91a29b6"}},
          {"location": {"type": "uri", "value": "urn:uuid:1b5dbf69-d001-884a-88bd-99425d65eb19"}},
          {"location": {"type": "uri", "value": "urn:uuid:e707eaa5-0c8e-bd49-ada3-288c5a4df4f5"}},
          {"location": {"type": "uri", "value": "urn:uuid:46500d64-bd8c-b140-b198-169776c54f22"}},
          {"location": {"type": "uri", "value": "urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734"}},
          {"location": {"type": "uri", "value": "urn:uuid:4a7e91b2-a236-ad41-9171-00e5674332e9"}},
          {"location": {"type": "uri", "value": "urn:uuid:c9acfabd-3c6f-7545-ae39-e03030fe9341"}},
          {"location": {"type": "uri", "value": "urn:uuid:8e50676a-7a57-1149-b8df-04e99c5e0539"}},
          {"location": {"type": "uri", "value": "urn:uuid:2d045ac6-b32a-e54b-9299-c0cdae17f0d7"}},
          {"location": {"type": "uri", "value": "urn:uuid:99995b49-1055-8645-918c-417dbc6e7774"}},
          {"location": {"type": "uri", "value": "urn:uuid:a8fe3e2b-6c75-9142-851e-edc45983aaed"}},
          {"location": {"type": "uri", "value": "urn:uuid:8f6905d2-065f-5940-b7e2-a0c49fe69c9a"}},
          {"location": {"type": "uri", "value": "urn:uuid:ba5a00fa-c2fd-d949-8e7b-f00fc040086d"}},
          {"location": {"type": "uri", "value": "urn:uuid:a0e0ef99-4a34-204c-bf07-4ba0a1f25a8b"}},
          {"location": {"type": "uri", "value": "urn:uuid:457bf074-8b08-ed4c-893a-6ecbd9f25405"}},
          {"location": {"type": "uri", "value": "urn:uuid:8fb86659-5902-9240-a48a-b16bfdc94b36"}},
          {"location": {"type": "uri", "value": "urn:uuid:98c4701f-9958-2c49-b219-f5a0181e9314"}},
          {"location": {"type": "uri", "value": "urn:uuid:c6c6b9c1-d5ea-1042-a286-49f45e69274a"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3c375bb-42db-f642-b933-0c8cc2302ffe"}},
          {"location": {"type": "uri", "value": "urn:uuid:3d71b557-2ed8-8845-984f-cbfd426b5a93"}},
          {"location": {"type": "uri", "value": "urn:uuid:b6f31f2a-a7bb-5149-8500-ea7cefa59eae"}},
          {"location": {"type": "uri", "value": "urn:uuid:470cdabc-3acb-dd4f-9dbb-e1607c79ab9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:92737251-459f-c64e-8706-8db42a1d6704"}},
          {"location": {"type": "uri", "value": "urn:uuid:a2d05826-1354-f14f-8c62-49bda49592a2"}},
          {"location": {"type": "uri", "value": "urn:uuid:d9f6be45-eb5f-014d-b56d-bd5be36c7443"}},
          {"location": {"type": "uri", "value": "urn:uuid:947c258d-ac05-fd4b-a424-cc170b7e7e56"}},
          {"location": {"type": "uri", "value": "urn:uuid:785dcf74-53ba-424d-9196-ca534cafeaca"}},
          {"location": {"type": "uri", "value": "urn:uuid:416c469d-e3b3-154c-b56d-d3d02b420f9e"}},
          {"location": {"type": "uri", "value": "urn:uuid:3c7f90bf-4efd-2040-ac4f-ccb405a645b8"}},
          {"location": {"type": "uri", "value": "urn:uuid:b258c430-1060-ff48-bc3e-fed707cd9e02"}},
          {"location": {"type": "uri", "value": "urn:uuid:379c0e11-b3e1-044d-9087-b4b833fbc0f2"}},
          {"location": {"type": "uri", "value": "urn:uuid:f0ba561b-7bbb-4d41-93d3-15c7bb9c0b9b"}},
          {"location": {"type": "uri", "value": "urn:uuid:0d1a61e9-079c-754d-b4f2-1367fedb9015"}},
          {"location": {"type": "uri", "value": "urn:uuid:09be1772-9d61-f049-ad21-b4ac444c00c3"}},
          {"location": {"type": "uri", "value": "urn:uuid:e96b8ef0-e650-7741-b3b8-c3c8ccfaa3be"}},
          {"location": {"type": "uri", "value": "urn:uuid:03ff509a-58b5-6141-97f1-b803d1fa2bae"}},
          {"location": {"type": "uri", "value": "urn:uuid:1ee993ad-587b-5f4d-b051-d6083ea8f7c4"}},
          {"location": {"type": "uri", "value": "urn:uuid:860a59d8-4970-c545-846f-a2f010d00fa9"}},
          {"location": {"type": "uri", "value": "urn:uuid:a49c5db1-0125-254f-9bf3-8e33932b05ad"}},
          {"location": {"type": "uri", "value": "urn:uuid:da91cd55-4cfc-1e44-a89c-586d4ed0bb7b"}},
          {"location": {"type": "uri", "value": "urn:uuid:cec8fc46-4934-eb4f-94fe-b0e2f3bfa5a8"}},
          {"location": {"type": "uri", "value": "urn:uuid:80459f66-9666-b64a-a8b7-f2f3a0f430dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:8684cd99-b071-724b-a20e-589ba71fcb23"}},
          {"location": {"type": "uri", "value": "urn:uuid:ceb07293-0e33-2249-ad23-1e7aa66e4edf"}},
          {"location": {"type": "uri", "value": "urn:uuid:b1d47fc7-4c26-364e-a7e9-78bb24e9eec0"}},
          {"location": {"type": "uri", "value": "urn:uuid:b8914262-1996-524c-b7e2-f7fd026821ca"}},
          {"location": {"type": "uri", "value": "urn:uuid:b536300f-d4d1-b64f-ae74-01fdf0894b1d"}},
          {"location": {"type": "uri", "value": "urn:uuid:723c81a3-b8fe-0041-bc27-bff179ab2faf"}},
          {"location": {"type": "uri", "value": "urn:uuid:4e6c0d78-2ea5-b245-986f-dfeadaa74770"}},
          {"location": {"type": "uri", "value": "urn:uuid:e9f38fdf-e82b-dc46-9293-54663ef0e2dd"}},
          {"location": {"type": "uri", "value": "urn:uuid:db9df47f-68d1-2d46-b9d4-3996beb795ed"}},
          {"location": {"type": "uri", "value": "urn:uuid:e58f177d-edb5-7542-a709-f3f331c8d52d"}},
          {"location": {"type": "uri", "value": "urn:uuid:3cd37439-310c-bb4e-ae6a-6b4a7d5e2ef8"}},
          {"location": {"type": "uri", "value": "urn:uuid:5baa2abd-273b-b847-8647-8f2f2470c2f1"}},
          {"location": {"type": "uri", "value": "urn:uuid:dd85dcd1-5260-fd4f-99b9-18cc2bb0234c"}},
          {"location": {"type": "uri", "value": "urn:uuid:d6757253-e94b-a346-a29c-e18616091a6b"}},
          {"location": {"type": "uri", "value": "urn:uuid:f57f943d-19f0-c54b-9440-19bc6e8da05d"}},
          {"location": {"type": "uri", "value": "urn:uuid:f3003bf2-61c4-4148-8fee-a001113f6285"}},
          {"location": {"type": "uri", "value": "urn:uuid:0bc61ff2-e446-6348-a58a-3a6825270d53"}},
          {"location": {"type": "uri", "value": "urn:uuid:cdf966f5-bd09-dc40-918b-dceecc291d92"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd420c4d-2714-5a48-b1ec-69697bcf2dbf"}},
          {"location": {"type": "uri", "value": "urn:uuid:8ec1ffdf-0140-e44a-9d8f-0c4adc86dddb"}},
          {"location": {"type": "uri", "value": "urn:uuid:cf461bd9-294c-9240-be2f-5b1c3967c3ee"}},
          {"location": {"type": "uri", "value": "urn:uuid:b337476c-256b-024b-a5ef-7da9959772c6"}},
          {"location": {"type": "uri", "value": "urn:uuid:5182fb50-a427-1c4a-85eb-ed7dfa00c97c"}},
          {"location": {"type": "uri", "value": "urn:uuid:655ec1af-30b3-554d-a00d-a33026f02d33"}},
          {"location": {"type": "uri", "value": "urn:uuid:5122f6c3-f010-7745-852c-199fee81204d"}},
          {"location": {"type": "uri", "value": "urn:uuid:931dbf51-49b1-c747-9464-1d978b403233"}},
          {"location": {"type": "uri", "value": "urn:uuid:c0736c36-750c-3c49-b2f8-06694ae16b58"}},
          {"location": {"type": "uri", "value": "urn:uuid:bd345989-167e-7047-89b5-b8b10b252c60"}},
          {"location": {"type": "uri", "value": "urn:uuid:0e08835e-84eb-0643-99dc-6478f7b43e31"}},
          {"location": {"type": "uri", "value": "urn:uuid:8b25b4ed-a844-ef4f-88e8-083cf5ff054f"}},
          {"location": {"type": "uri", "value": "urn:uuid:95d05020-5d87-634b-946f-48d2365ee1f6"}},
          {"location": {"type": "uri", "value": "urn:uuid:70ea53e9-7c36-4247-8647-b4c56bb11829"}},
          {"location": {"type": "uri", "value": "urn:uuid:38fba069-b914-1e48-9fe3-0f0ed8939709"}},
          {"location": {"type": "uri", "value": "urn:uuid:1d20af75-f7ea-4341-a193-30b7161d7cb1"}},
          {"location": {"type": "uri", "value": "urn:uuid:19be7988-5b90-5945-8b58-b99ceb73bc5b"}},
          {"location": {"type": "uri", "value": "urn:uuid:44e8aab7-950d-3442-ab32-2eb597363302"}},
          {"location": {"type": "uri", "value": "urn:uuid:f963dec1-58d2-4b4f-b2cc-0d6d83571f0b"}},
          {"location": {"type": "uri", "value": "urn:uuid:1af4cfdf-a8bf-3349-aa3f-ff17f615790f"}},
          {"location": {"type": "uri", "value": "urn:uuid:bac70fdb-b3a8-184f-85ab-39a1400d534b"}},
          {"location": {"type": "uri", "value": "urn:uuid:5736c885-0a01-194f-b285-03ea7b37bfc2"}},
          {"location": {"type": "uri", "value": "urn:uuid:74f8b2f5-cf80-234c-9b68-b2a130ae3fe9"}},
          {"location": {"type": "uri", "value": "urn:uuid:030828c0-e2e1-0f42-ae8d-d812a2b08dd3"}},
          {"location": {"type": "uri", "value": "urn:uuid:136463db-f15b-314c-b964-2bda8038b85b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - location
    id: question_bc217bc2e8550bbea0f2df83fea9c6b7
    nl_question: List all locations that use the coordinate system of 428a9489-3de8-b44f-825b-d4ff01334734.
    parameter_bindings:
      $ObjectIdentity(0, cim:Location): urn:uuid:428a9489-3de8-b44f-825b-d4ff01334734
  sparql_template: '?location a cim:Location ;

    cim:Location.CoordinateSystem/cim:CoordinateSystem.Locations {$ObjectIdentity(0,
    cim:Location)} .

    {$ObjectIdentity(0, cim:Location)} a cim:Location ;

    .'
  template_id: template_list_b58accb471ed710b89b5685c437d5e70
- description: A graph pattern which lists all values for location limited by parameters
    for none and by filter properties positionpoint.sequencenumber.
  filters:
  - property: https://cim.ucaiug.io/ns#PositionPoint.sequenceNumber
    subject: cim:Location
    type: xsd:integer
  name: List location by parameters none and filters positionpoint.sequencenumber
  outputs:
  - name: location
    type: cim:Location
  parameters: []
  paraphrases:
  - Which locations have a position point sequence number of $ValueFilter(cim:Location,
    cim:PositionPoint.sequenceNumber, xsd:integer)?
  - List locations with position point sequence number $ValueFilter(cim:Location,
    cim:PositionPoint.sequenceNumber, xsd:integer).
  - Identify the locations where the position point sequence number is $ValueFilter(cim:Location,
    cim:PositionPoint.sequenceNumber, xsd:integer).
  - What locations have a sequence number of $ValueFilter(cim:Location, cim:PositionPoint.sequenceNumber,
    xsd:integer) for their position point?
  - Provide a list of locations with position points having sequence number $ValueFilter(cim:Location,
    cim:PositionPoint.sequenceNumber, xsd:integer).
  questions: []
  sparql_template: '?location a cim:Location ;

    cim:PositionPoint.sequenceNumber {$ValueFilter(cim:Location, cim:PositionPoint.sequenceNumber,
    xsd:integer)} .'
  template_id: template_list_39ee804941fa48aa340389031a5b9c30
- description: A graph pattern which lists all values for location limited by parameters
    for none and by filter properties positionpoint.xposition.
  filters:
  - property: https://cim.ucaiug.io/ns#PositionPoint.xPosition
    subject: cim:Location
    type: xsd:string
  name: List location by parameters none and filters positionpoint.xposition
  outputs:
  - name: location
    type: cim:Location
  parameters: []
  paraphrases:
  - Which locations have an xPosition of $ValueFilter(cim:Location, cim:PositionPoint.xPosition,
    xsd:string)?
  - Provide the locations with an xPosition value of $ValueFilter(cim:Location, cim:PositionPoint.xPosition,
    xsd:string).
  - List all locations where the xPosition is $ValueFilter(cim:Location, cim:PositionPoint.xPosition,
    xsd:string).
  - What are the locations with an xPosition equal to $ValueFilter(cim:Location, cim:PositionPoint.xPosition,
    xsd:string)?
  - Identify the locations having an xPosition of $ValueFilter(cim:Location, cim:PositionPoint.xPosition,
    xsd:string).
  questions: []
  sparql_template: '?location a cim:Location ;

    cim:PositionPoint.xPosition {$ValueFilter(cim:Location, cim:PositionPoint.xPosition,
    xsd:string)} .'
  template_id: template_list_8dc5388adcb9e09ff9d81fe57b67ced5
- description: A graph pattern which lists all values for location limited by parameters
    for none and by filter properties positionpoint.yposition.
  filters:
  - property: https://cim.ucaiug.io/ns#PositionPoint.yPosition
    subject: cim:Location
    type: xsd:string
  name: List location by parameters none and filters positionpoint.yposition
  outputs:
  - name: location
    type: cim:Location
  parameters: []
  paraphrases:
  - Which locations have a y-position of $ValueFilter(cim:Location, cim:PositionPoint.yPosition,
    xsd:string)?
  - List the locations with a y-position value of $ValueFilter(cim:Location, cim:PositionPoint.yPosition,
    xsd:string).
  - Identify all locations where the y-position is $ValueFilter(cim:Location, cim:PositionPoint.yPosition,
    xsd:string).
  - What are the locations with a y-position of $ValueFilter(cim:Location, cim:PositionPoint.yPosition,
    xsd:string)?
  - Provide the locations with y-position equal to $ValueFilter(cim:Location, cim:PositionPoint.yPosition,
    xsd:string).
  questions: []
  sparql_template: '?location a cim:Location ;

    cim:PositionPoint.yPosition {$ValueFilter(cim:Location, cim:PositionPoint.yPosition,
    xsd:string)} .'
  template_id: template_list_568a123c7e0a03a8dad0db25bb6b8425
- description: A graph pattern which lists all values for location limited by parameters
    for none and by filter properties coordinatesystem.crsurn.
  filters:
  - property: https://cim.ucaiug.io/ns#CoordinateSystem.crsUrn
    subject: cim:Location
    type: xsd:string
  name: List location by parameters none and filters coordinatesystem.crsurn
  outputs:
  - name: location
    type: cim:Location
  parameters: []
  paraphrases:
  - Which locations have a coordinate system URN of $ValueFilter(cim:Location, cim:CoordinateSystem.crsUrn,
    xsd:string)?
  - Identify the locations with a coordinate system URN matching $ValueFilter(cim:Location,
    cim:CoordinateSystem.crsUrn, xsd:string).
  - What are the locations associated with the coordinate system URN $ValueFilter(cim:Location,
    cim:CoordinateSystem.crsUrn, xsd:string)?
  - List locations that have the coordinate system URN $ValueFilter(cim:Location,
    cim:CoordinateSystem.crsUrn, xsd:string).
  - Get all locations where the coordinate system URN is $ValueFilter(cim:Location,
    cim:CoordinateSystem.crsUrn, xsd:string).
  questions: []
  sparql_template: '?location a cim:Location ;

    cim:CoordinateSystem.crsUrn {$ValueFilter(cim:Location, cim:CoordinateSystem.crsUrn,
    xsd:string)} .'
  template_id: template_list_8af8326294d84e314ec33256b3f5f415
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for none and by filter properties none.
  filters: []
  name: List operationallimit by parameters none and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters: []
  paraphrases:
  - What are the operational limits?
  - List all instances of operational limits.
  - Can you identify the operational limits?
  - Which elements are classified as operational limits?
  - Provide all operational limits.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:556dbd93-e9a8-43cb-bb61-caa96e9b9d3f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:533deb44-3373-4823-96e9-578ecb71f92c"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:3c141dec-efbb-4728-b9be-e82587c11b0e"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769da6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:6bd50868-1e41-4306-b344-a854e25bc929"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ddd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bfc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ac9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e40-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f37b40e0-af2c-4aec-b30d-8b94158487ef"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ceb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:c94df2ec-7b04-49bf-8747-869f4c9dc69c"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769acf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:07a05fa8-d780-11e7-9296-cec278b6b50a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:9241f98a-7ba5-4dd9-8be7-76bb0baf792e"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2f424916-1180-4820-a6f7-8f570b35764f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:8bf05dbf-b450-4dd3-a8cc-c1108995c7df"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ad7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ad9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:1e6c7349-1a83-4608-bf9e-d0fa6b8f84ac"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769de6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e98-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cbf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769abe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769af1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769af2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769abf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:e6913d1b-5c4e-49f2-8a20-1843dfb3aebe"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769df8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b39-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bc5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ca2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bc6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769adb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:3c63e9a4-d77f-11e7-9296-cec278b6b50a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ce5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2332e8be-fa3d-4e2c-a186-4722beae1296"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:c0ed60e7-e6e9-4abe-acb6-e1fead8c680a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769da7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d8c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769afb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769baf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cde-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ca1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2bcc81e9-9484-4959-882b-c43641f2a721"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aa9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b1d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:b16a3747-d1b5-4bae-8c33-19b4ad9aa944"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769de5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ad5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:1dc6bdf3-83f6-4b61-9dde-56ef73ff8c1b"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:e89f487d-b332-492a-a1b1-f2cc614d2a48"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ded-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:943763c5-f393-4033-9de4-10f737502870"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ac2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dc2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:0f6d2d4a-4998-478d-a90a-17edb799a0ae"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ca3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:6c75f95a-2cfc-408c-a079-47ac05224876"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769af9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:31990e9d-22cb-48e7-aeb7-280f73bba47f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:fdf53596-1125-4f13-b6f2-faf58c539448"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769da5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ede-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cc1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dc3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769acd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:ef11b44b-d71e-46e2-9660-b1276b02856c"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d55-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a91-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:3beeebd6-cf2c-43b6-9a93-ab86279779d1"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ecf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ce7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:e0615732-d98a-4b65-8a63-decac8e292b4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:30efb0f1-c9d3-4329-883b-8644245ecd84"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:1ab0364b-1a34-4714-a61c-b739d5ea31ed"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ac1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b73-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aa7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b43-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bfd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769daf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cdf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cdb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ac3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cbc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:75fd728d-55a1-47b5-9c38-ff57167b672e"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bc7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bb9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:70029237-3504-434d-a3f7-70ae53c3ab8f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769def-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2c0e8b5a-a92d-4c43-913b-e5f72b864c46"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e51-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2c009f59-68dc-4f5a-89a8-e4db9f2d9fe0"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aa5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ddc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cc0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:6de624e3-9e8d-48d9-99a7-043d37c096cd"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769df7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:1b9c3466-d296-443b-a5cc-ffbb2e3956e4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b45-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:a46e07a4-b5b2-4ad6-9dfc-40bf370d5df8"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:fb6bca99-c19e-4021-b924-e69975a54d5a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769acb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:694f6f27-5dec-4d15-8913-a666d7e690e6"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e5c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bbd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:1ffadccb-2b24-42ba-bdb7-0cd6be979c9c"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:a11caf87-9df6-420c-a90c-afe4b00d9ae6"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2f1e5d68-8cdf-42f6-9e73-2cb91da1c91a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ddb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f10-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b53-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e48-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769afd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:cce7a187-8a49-4821-8df9-ff0b73abf305"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f6ab9ccd-10fa-4531-8427-763e11163b28"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b7d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f895c38b-d303-456a-abd9-ce89826c6c0a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:06b60509-454a-42b4-80c5-3823e8946e89"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:78340e32-d391-4227-9eec-df0cae9fb810"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:3c63e436-d77f-11e7-9296-cec278b6b50a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:deb13630-772d-4c54-b755-027f2a76ceb2"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ce6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:eb25896e-d1ec-46de-a566-edfed02ae1ae"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b69-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:430b3df3-f760-49ef-9e64-1890813f88d4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769abd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:8506bced-6ffa-4f6f-b947-f06fd5847b9e"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e09-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769afa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b47-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c87-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769df9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a49-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b41-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cbb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dd4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d27-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bfb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769af3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:52af6f91-8a53-4de4-9d92-1611db415996"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cfe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ce9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:425e8921-3fb6-4b08-99f4-bdbef61e9620"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:e69974d7-2081-411e-83b3-3b1fa270b5ba"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:d678d8e8-dd1c-4b88-9746-467af5a682b7"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d33-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:15346dc0-db88-47f9-939e-89d9e5ea29d9"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:5f74fb12-9bbc-4e06-af14-9c3406eaa892"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f647c10e-55bf-4e9a-bccc-a4b09bcb30e0"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:07a05ab2-d780-11e7-9296-cec278b6b50a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bad-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dcb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769caf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cd3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c13-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:a86c3a05-b598-4ff1-9057-70cbb564f4c4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cd1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cd9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:39847105-28c6-49f1-a355-9e079da9c915"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d31-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e35-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769de7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bc9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:5132626e-8c9c-4e85-84e9-f959bbeae968"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_7d977d27b6898cb8cd1a89aeeecaa35e
    nl_question: Which elements are classified as operational limits?
    parameter_bindings: {}
  sparql_template: ?operationallimit a cim:OperationalLimit .
  template_id: template_list_e8a272493ae3b2decf0ea8facc3665ea
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for operationallimitset (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet)
    and by filter properties none.
  filters: []
  name: List operationallimit by parameters operationallimitset and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    type: https://cim.ucaiug.io/ns#OperationalLimitSet
  paraphrases:
  - What operational limits belong to $ObjectIdentity(0, cim:OperationalLimitSet)?
  - List the operational limits defined in $ObjectIdentity(0, cim:OperationalLimitSet).
  - Which operational limits are part of the set $ObjectIdentity(0, cim:OperationalLimitSet)?
  - Identify the operational limits associated with $ObjectIdentity(0, cim:OperationalLimitSet).
  - What are the operational limits within $ObjectIdentity(0, cim:OperationalLimitSet)?
  questions:
  - expected_steps:
    - - args:
          query: f1769b94-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769b94-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769b94-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769b94-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_99ce7d16c75209a299598ec415587afa
    nl_question: List the operational limits defined in f1769b94-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769b94-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: Limits <Default>
        name: iri_discovery
        output: urn:uuid:f1769ccc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769ccc-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769ccc-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ccd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ccf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_e1fde914658349cf9fb2aa0d6b33cade
    nl_question: Which operational limits are part of the set Limits <Default>?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769ccc-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ee1
        name: iri_discovery
        output: urn:uuid:f1769ee1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769ee1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769ee1-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_91fe5594d3c49fa0b535f79d5f4a1c39
    nl_question: Which operational limits are part of the set f1769ee1?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769ee1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769c34
        name: iri_discovery
        output: urn:uuid:f1769c34-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769c34-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c34-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c37-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c35-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_2b1b48bd62c54ff317d4eab77e4cf2b8
    nl_question: Identify the operational limits associated with f1769c34.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769c34-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: Limits <Default>
        name: iri_discovery
        output: urn:uuid:f1769dfe-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769dfe-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dfe-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e01-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_4c002e99e13f80476facc93e47e15e5c
    nl_question: What operational limits belong to Limits <Default>?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769dfe-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?operationallimit a cim:OperationalLimit ;

    cim:OperationalLimit.OperationalLimitSet {$ObjectIdentity(0, cim:OperationalLimitSet)}
    .

    {$ObjectIdentity(0, cim:OperationalLimitSet)} a cim:OperationalLimitSet ;

    .'
  template_id: template_list_cbda591949474c7dd86d807facbd2ee4
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for operationallimittype (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType)
    and by filter properties none.
  filters: []
  name: List operationallimit by parameters operationallimittype and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    type: https://cim.ucaiug.io/ns#OperationalLimitType
  paraphrases:
  - What operational limits are associated with $ObjectIdentity(0, cim:OperationalLimitType)?
  - List the operational limits of type $ObjectIdentity(0, cim:OperationalLimitType).
  - Which operational limits fall under $ObjectIdentity(0, cim:OperationalLimitType)?
  - Identify all operational limits classified as $ObjectIdentity(0, cim:OperationalLimitType).
  - What are the operational limits related to $ObjectIdentity(0, cim:OperationalLimitType)?
  questions:
  - expected_steps:
    - - args:
          query: 0d6c5927
        name: iri_discovery
        output: urn:uuid:0d6c5927-fd86-4053-9831-d1fd151c66f1
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:0d6c5927-fd86-4053-9831-d1fd151c66f1>
            .

            <urn:uuid:0d6c5927-fd86-4053-9831-d1fd151c66f1> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:2f1e5d68-8cdf-42f6-9e73-2cb91da1c91a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_1f35116b73c1e0ec9940ffad0eb3db6a
    nl_question: Which operational limits fall under 0d6c5927?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:0d6c5927-fd86-4053-9831-d1fd151c66f1
  - expected_steps:
    - - args:
          query: TATL
        name: iri_discovery
        output: urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769da6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bfc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e40-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cb4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769de6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769abe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769af2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769df8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aa6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ca2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bc6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d8c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769afe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cde-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d32-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aaa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b3a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ac2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dc2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ba6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b4e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d0e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bf0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a52-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cbc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b22-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ddc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cc0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ad6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a46-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d3e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769db8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ae6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769bbe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e48-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b96-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a62-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d6e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ce6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b42-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c5a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a82-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769afa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769be4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769dd4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cd2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cfe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769aca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769b36-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ada-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769d2e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_0cbb3e54715a3daf5416ca28434e104c
    nl_question: Identify all operational limits classified as TATL.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a42
        name: iri_discovery
        output: urn:uuid:f1769a42-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a42-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a42-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_3c6a181c9b5c6096fd040455d600eb55
    nl_question: What are the operational limits related to f1769a42?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:f1769a42-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 39a66540
        name: iri_discovery
        output: urn:uuid:39a66540-9ce3-4c9f-a52d-2f8ef3ec78d8
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:39a66540-9ce3-4c9f-a52d-2f8ef3ec78d8>
            .

            <urn:uuid:39a66540-9ce3-4c9f-a52d-2f8ef3ec78d8> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:5132626e-8c9c-4e85-84e9-f959bbeae968"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_8af5e99d3843bfd2bf5d35cf4e31e2d0
    nl_question: Which operational limits fall under 39a66540?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:39a66540-9ce3-4c9f-a52d-2f8ef3ec78d8
  - expected_steps:
    - - args:
          query: HighVoltage
        name: iri_discovery
        output: urn:uuid:f1769a41-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a41-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a41-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e98-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ef7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ede-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ecf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e5c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f10-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ea2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"operationallimit": {"type": "uri", "value": "urn:uuid:f1769eb1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_0eda7d8875f30c7a3783bd5368908394
    nl_question: List the operational limits of type HighVoltage.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:f1769a41-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?operationallimit a cim:OperationalLimit ;

    cim:OperationalLimit.OperationalLimitType {$ObjectIdentity(0, cim:OperationalLimitType)}
    .

    {$ObjectIdentity(0, cim:OperationalLimitType)} a cim:OperationalLimitType ;

    .'
  template_id: template_list_370f9af63dfa5fff144773f39f399f55
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for pinoperationallimit (https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit)
    and by filter properties none.
  filters: []
  name: List operationallimit by parameters pinoperationallimit and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit
    type: https://cim4.eu/ns/nc#PinOperationalLimit
  paraphrases:
  - Which operational limits are associated with $ObjectIdentity(0, nc:PinOperationalLimit)?
  - List all operational limits linked to $ObjectIdentity(0, nc:PinOperationalLimit).
  - What are the operational limits connected to $ObjectIdentity(0, nc:PinOperationalLimit)?
  - Identify the operational limits that have a relationship with $ObjectIdentity(0,
    nc:PinOperationalLimit).
  - Find operational limits related to $ObjectIdentity(0, nc:PinOperationalLimit).
  questions:
  - expected_steps:
    - - args:
          query: 7b573a17-3466-4000-b93d-0aeaef314c32
        name: iri_discovery
        output: urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            nc:OperationalLimit.PinOperationallLimit <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32>
            .

            <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32> a nc:PinOperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_5bd16426d70c538cf6a25e960f3b027f
    nl_question: What are the operational limits connected to 7b573a17-3466-4000-b93d-0aeaef314c32?
    parameter_bindings:
      $ObjectIdentity(0, nc:PinOperationalLimit): urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
  - expected_steps:
    - - args:
          query: e4c73a28
        name: iri_discovery
        output: urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            nc:OperationalLimit.PinOperationallLimit <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90>
            .

            <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90> a nc:PinOperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_215104031ee37508984cf7037223e8bc
    nl_question: Identify the operational limits that have a relationship with e4c73a28.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinOperationalLimit): urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
  sparql_template: '?operationallimit a cim:OperationalLimit ;

    nc:OperationalLimit.PinOperationallLimit {$ObjectIdentity(0, nc:PinOperationalLimit)}
    .

    {$ObjectIdentity(0, nc:PinOperationalLimit)} a nc:PinOperationalLimit ;

    .'
  template_id: template_list_f4d30c30f86c8b563c795dab75b329d8
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for operationallimitset (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet),
    operationallimittype (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType)
    and by filter properties none.
  filters: []
  name: List operationallimit by parameters operationallimitset, operationallimittype
    and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    type: https://cim.ucaiug.io/ns#OperationalLimitSet
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    type: https://cim.ucaiug.io/ns#OperationalLimitType
  paraphrases:
  - What operational limits are associated with $ObjectIdentity(0, cim:OperationalLimitSet)
    and $ObjectIdentity(1, cim:OperationalLimitType)?
  - List the operational limits under $ObjectIdentity(0, cim:OperationalLimitSet)
    with type $ObjectIdentity(1, cim:OperationalLimitType).
  - Which operational limits belong to the set $ObjectIdentity(0, cim:OperationalLimitSet)
    and have the type $ObjectIdentity(1, cim:OperationalLimitType)?
  - Provide operational limits from $ObjectIdentity(0, cim:OperationalLimitSet) that
    are of type $ObjectIdentity(1, cim:OperationalLimitType).
  - What are the operational limits in $ObjectIdentity(0, cim:OperationalLimitSet)
    categorized under type $ObjectIdentity(1, cim:OperationalLimitType)?
  questions:
  - expected_steps:
    - - args:
          query: Limits <Default>
        name: iri_discovery
        output: urn:uuid:f1769ab4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: PATL
        name: iri_discovery
        output: urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769ab4-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769ab4-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ab5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_92aa6ea2ce7a64c5108633df861abdb9
    nl_question: What are the operational limits in Limits <Default> categorized under
      type PATL?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769ab4-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:OperationalLimitType): urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769e55-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769e55-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: LowVoltage
        name: iri_discovery
        output: urn:uuid:f1769a44-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769e55-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a44-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e55-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:f1769a44-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_1474bbd6a6470b20dedf086e6a4eba00
    nl_question: Which operational limits belong to the set f1769e55-9aeb-11e5-91da-b8763fd99c5f
      and have the type LowVoltage?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769e55-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:OperationalLimitType): urn:uuid:f1769a44-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: Limits <Default>
        name: iri_discovery
        output: urn:uuid:f1769acc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769a3f
        name: iri_discovery
        output: urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769acc-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769acc-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769ace-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_3704f4661da7aa9d03e975f3763a0a16
    nl_question: What operational limits are associated with Limits <Default> and
      f1769a3f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769acc-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:OperationalLimitType): urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: Limits <Default>
        name: iri_discovery
        output: urn:uuid:f1769c48-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: TATL
        name: iri_discovery
        output: urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769c48-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c48-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769c4a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_5222066834a0f99fb680731f667ebec5
    nl_question: What are the operational limits in Limits <Default> categorized under
      type TATL?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769c48-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:OperationalLimitType): urn:uuid:f1769a3f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: Limits <Default>
        name: iri_discovery
        output: urn:uuid:f1769a84-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769a40
        name: iri_discovery
        output: urn:uuid:f1769a40-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769a84-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a40-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a84-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:f1769a40-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769a87-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_50ba1d404af97d7f5a2f9f688cf1fd71
    nl_question: What operational limits are associated with Limits <Default> and
      f1769a40?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769a84-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:OperationalLimitType): urn:uuid:f1769a40-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?operationallimit a cim:OperationalLimit ;

    cim:OperationalLimit.OperationalLimitSet {$ObjectIdentity(0, cim:OperationalLimitSet)}
    ;

    cim:OperationalLimit.OperationalLimitType {$ObjectIdentity(1, cim:OperationalLimitType)}
    .

    {$ObjectIdentity(0, cim:OperationalLimitSet)} a cim:OperationalLimitSet ;

    .

    {$ObjectIdentity(1, cim:OperationalLimitType)} a cim:OperationalLimitType ;

    .'
  template_id: template_list_a6a7b1d919bee3c4f9c15a0925504904
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for operationallimitset (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet),
    pinoperationallimit (https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit)
    and by filter properties none.
  filters: []
  name: List operationallimit by parameters operationallimitset, pinoperationallimit
    and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    type: https://cim.ucaiug.io/ns#OperationalLimitSet
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit
    type: https://cim4.eu/ns/nc#PinOperationalLimit
  paraphrases:
  - What are the operational limits in $ObjectIdentity(0, cim:OperationalLimitSet)
    that are associated with $ObjectIdentity(1, nc:PinOperationalLimit)?
  - List the operational limits defined in $ObjectIdentity(0, cim:OperationalLimitSet)
    and linked to $ObjectIdentity(1, nc:PinOperationalLimit).
  - Which operational limits from $ObjectIdentity(0, cim:OperationalLimitSet) are
    linked to the pin operational limit $ObjectIdentity(1, nc:PinOperationalLimit)?
  - Identify operational limits within $ObjectIdentity(0, cim:OperationalLimitSet)
    that are associated with $ObjectIdentity(1, nc:PinOperationalLimit).
  - Provide all operational limits in $ObjectIdentity(0, cim:OperationalLimitSet)
    connected to $ObjectIdentity(1, nc:PinOperationalLimit).
  questions:
  - expected_steps:
    - - args:
          query: f1769cf4
        name: iri_discovery
        output: urn:uuid:f1769cf4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 7b573a17
        name: iri_discovery
        output: urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769cf4-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:OperationalLimit.PinOperationallLimit <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32>
            .

            <urn:uuid:f1769cf4-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32> a nc:PinOperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_9dead6a8f28969fe3328cad3e8ba05ee
    nl_question: What are the operational limits in f1769cf4 that are associated with
      7b573a17?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769cf4-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:PinOperationalLimit): urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
  - expected_steps:
    - - args:
          query: f1769cdc-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769cdc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: e4c73a28-e1f4-4d22-85ab-483ba818bb90
        name: iri_discovery
        output: urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitSet <urn:uuid:f1769cdc-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:OperationalLimit.PinOperationallLimit <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90>
            .

            <urn:uuid:f1769cdc-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitSet
            ;

            .

            <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90> a nc:PinOperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_3adce2097936d2350f0d124640b7990c
    nl_question: Provide all operational limits in f1769cdc-9aeb-11e5-91da-b8763fd99c5f
      connected to e4c73a28-e1f4-4d22-85ab-483ba818bb90.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitSet): urn:uuid:f1769cdc-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:PinOperationalLimit): urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
  sparql_template: '?operationallimit a cim:OperationalLimit ;

    cim:OperationalLimit.OperationalLimitSet {$ObjectIdentity(0, cim:OperationalLimitSet)}
    ;

    nc:OperationalLimit.PinOperationallLimit {$ObjectIdentity(1, nc:PinOperationalLimit)}
    .

    {$ObjectIdentity(0, cim:OperationalLimitSet)} a cim:OperationalLimitSet ;

    .

    {$ObjectIdentity(1, nc:PinOperationalLimit)} a nc:PinOperationalLimit ;

    .'
  template_id: template_list_0efd14dbc9cb1dbf03ebda608fffa1be
- description: A graph pattern which lists all values for operationallimit limited
    by parameters for operationallimittype (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType),
    pinoperationallimit (https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit)
    and by filter properties none.
  filters: []
  name: List operationallimit by parameters operationallimittype, pinoperationallimit
    and filters none
  outputs:
  - name: operationallimit
    type: cim:OperationalLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    type: https://cim.ucaiug.io/ns#OperationalLimitType
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#OperationalLimit.PinOperationallLimit
    type: https://cim4.eu/ns/nc#PinOperationalLimit
  paraphrases:
  - What operational limits are associated with the operational limit type $ObjectIdentity(0,
    cim:OperationalLimitType) and pin operational limit $ObjectIdentity(1, nc:PinOperationalLimit)?
  - List operational limits that have the type $ObjectIdentity(0, cim:OperationalLimitType)
    and the pin operational limit $ObjectIdentity(1, nc:PinOperationalLimit).
  - Which operational limits correspond to $ObjectIdentity(0, cim:OperationalLimitType)
    and pin limit $ObjectIdentity(1, nc:PinOperationalLimit)?
  - Identify operational limits tied to the type $ObjectIdentity(0, cim:OperationalLimitType)
    and pin operational limit $ObjectIdentity(1, nc:PinOperationalLimit).
  - Provide all operational limits with type $ObjectIdentity(0, cim:OperationalLimitType)
    and pin limit $ObjectIdentity(1, nc:PinOperationalLimit).
  questions:
  - expected_steps:
    - - args:
          query: f1769a3e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 7b573a17-3466-4000-b93d-0aeaef314c32
        name: iri_discovery
        output: urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:OperationalLimit.PinOperationallLimit <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32>
            .

            <urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32> a nc:PinOperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cf5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_9eddadc3710a5fabe03c2d383c9e84c6
    nl_question: Provide all operational limits with type f1769a3e-9aeb-11e5-91da-b8763fd99c5f
      and pin limit 7b573a17-3466-4000-b93d-0aeaef314c32.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:PinOperationalLimit): urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
  - expected_steps:
    - - args:
          query: f1769a3e
        name: iri_discovery
        output: urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: GP 300KRISTIAN-ARENDAL FLOW
        name: iri_discovery
        output: urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?operationallimit WHERE {

            ?operationallimit a cim:OperationalLimit ;

            cim:OperationalLimit.OperationalLimitType <urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f>
            ;

            nc:OperationalLimit.PinOperationallLimit <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90>
            .

            <urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimitType
            ;

            .

            <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90> a nc:PinOperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["operationallimit"]}, "results": {"bindings":
          [{"operationallimit": {"type": "uri", "value": "urn:uuid:f1769cdd-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - operationallimit
    id: question_82221f8b55f771c72cb5787757da6ac1
    nl_question: Provide all operational limits with type f1769a3e and pin limit GP
      300KRISTIAN-ARENDAL FLOW.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitType): urn:uuid:f1769a3e-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, nc:PinOperationalLimit): urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
  sparql_template: '?operationallimit a cim:OperationalLimit ;

    cim:OperationalLimit.OperationalLimitType {$ObjectIdentity(0, cim:OperationalLimitType)}
    ;

    nc:OperationalLimit.PinOperationallLimit {$ObjectIdentity(1, nc:PinOperationalLimit)}
    .

    {$ObjectIdentity(0, cim:OperationalLimitType)} a cim:OperationalLimitType ;

    .

    {$ObjectIdentity(1, nc:PinOperationalLimit)} a nc:PinOperationalLimit ;

    .'
  template_id: template_list_098105853bdc3a859ce53a1b82cff6a9
- description: A graph pattern which lists all values for organisation limited by
    parameters for none and by filter properties none.
  filters: []
  name: List organisation by parameters none and filters none
  outputs:
  - name: organisation
    type: cim:Organisation
  parameters: []
  paraphrases:
  - What are the organisations available?
  - List all organisations.
  - Which entities are classified as organisations?
  - Provide a list of all organisations.
  - What organisations are present in the dataset?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:7c072768-f7f2-4c95-8037-e0059468442a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_e63e3c7138e6148c67f4279e873948c2
    nl_question: Provide a list of all organisations.
    parameter_bindings: {}
  sparql_template: ?organisation a cim:Organisation .
  template_id: template_list_01d537b02f1834efd29832913fe98535
- description: A graph pattern which lists all values for organisation limited by
    parameters for organisationrole (https://cim.ucaiug.io/ns#Organisation.Roles)
    and by filter properties none.
  filters: []
  name: List organisation by parameters organisationrole and filters none
  outputs:
  - name: organisation
    type: cim:Organisation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Organisation.Roles
    type: https://cim.ucaiug.io/ns#OrganisationRole
  paraphrases:
  - What roles are assigned to the organisation $ObjectIdentity(0, cim:OrganisationRole)?
  - List the roles associated with the organisation $ObjectIdentity(0, cim:OrganisationRole).
  - Identify the roles played by the organisation $ObjectIdentity(0, cim:OrganisationRole).
  - Which roles does the organisation $ObjectIdentity(0, cim:OrganisationRole) have?
  - Provide the organisation roles linked to $ObjectIdentity(0, cim:OrganisationRole).
  questions:
  - expected_steps:
    - - args:
          query: 2d009e27-5319-4265-b4d3-48aa6f4e57cb
        name: iri_discovery
        output: urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles <urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb>
            .

            <urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_9f41567ef6da298342810de0450cb916
    nl_question: Which roles does the organisation 2d009e27-5319-4265-b4d3-48aa6f4e57cb
      have?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb
  - expected_steps:
    - - args:
          query: ba8b5d24-9649-408d-8afe-452a987fbbc3
        name: iri_discovery
        output: urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles <urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3>
            .

            <urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_0637de54f2bb9f37f1a68c06ac779462
    nl_question: Which roles does the organisation ba8b5d24-9649-408d-8afe-452a987fbbc3
      have?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3
  - expected_steps:
    - - args:
          query: f36f7e28-51a4-4396-8441-9d90d22f0775
        name: iri_discovery
        output: urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles <urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775>
            .

            <urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_9a6e98dac9546fd2c87710314b9d75e5
    nl_question: Provide the organisation roles linked to f36f7e28-51a4-4396-8441-9d90d22f0775.
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775
  - expected_steps:
    - - args:
          query: 96af32e4
        name: iri_discovery
        output: urn:uuid:96af32e4-215b-448f-a6ed-20d0e64e3dff
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles <urn:uuid:96af32e4-215b-448f-a6ed-20d0e64e3dff>
            .

            <urn:uuid:96af32e4-215b-448f-a6ed-20d0e64e3dff> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_62b1c5f6c6a104aef18c3fbdad3eed6e
    nl_question: What roles are assigned to the organisation 96af32e4?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:96af32e4-215b-448f-a6ed-20d0e64e3dff
  - expected_steps:
    - - args:
          query: AO Owner B
        name: iri_discovery
        output: urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles <urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59>
            .

            <urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_a347e81f74b3d9c123510213e81f97ad
    nl_question: Which roles does the organisation AO Owner B have?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59
  sparql_template: '?organisation a cim:Organisation ;

    cim:Organisation.Roles {$ObjectIdentity(0, cim:OrganisationRole)} .

    {$ObjectIdentity(0, cim:OrganisationRole)} a cim:OrganisationRole ;

    .'
  template_id: template_list_9ce12ec8359f6fd99f3af20eac5774a5
- description: A graph pattern which lists all values for organisation limited by
    parameters for organisation (https://cim.ucaiug.io/ns#Organisation.Roles, https://cim.ucaiug.io/ns#OrganisationRole.Organisation)
    and by filter properties none.
  filters: []
  name: List organisation by parameters organisation and filters none
  outputs:
  - name: organisation
    type: cim:Organisation
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Organisation.Roles
    - https://cim.ucaiug.io/ns#OrganisationRole.Organisation
    type: https://cim.ucaiug.io/ns#Organisation
  paraphrases:
  - What organisations have roles associated with $ObjectIdentity(0, cim:Organisation)?
  - Identify the organisations linked through roles to $ObjectIdentity(0, cim:Organisation).
  - Which organisations share roles with $ObjectIdentity(0, cim:Organisation)?
  - List the organisations that are connected to $ObjectIdentity(0, cim:Organisation)
    through their roles.
  - What other organisations are associated via roles to $ObjectIdentity(0, cim:Organisation)?
  questions:
  - expected_steps:
    - - args:
          query: O Organisation C
        name: iri_discovery
        output: urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles/cim:OrganisationRole.Organisation <urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3>
            .

            <urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_ec94be7fbd3135ae1b0d1e942ff7b62f
    nl_question: Identify the organisations linked through roles to O Organisation
      C.
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3
  - expected_steps:
    - - args:
          query: Schneider Electric
        name: iri_discovery
        output: urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles/cim:OrganisationRole.Organisation <urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f>
            .

            <urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_1f172921b9f75320bb29b04d4384e429
    nl_question: Identify the organisations linked through roles to Schneider Electric.
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f
  - expected_steps:
    - - args:
          query: Nordic_TSO
        name: iri_discovery
        output: urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles/cim:OrganisationRole.Organisation <urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84>
            .

            <urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84"}},
          {"organisation": {"type": "uri", "value": "urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_f41733d6777bfcc5718d57fffdc182c0
    nl_question: What organisations have roles associated with Nordic_TSO?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:1dd01985-1188-4568-af69-814fed3a3c84
  - expected_steps:
    - - args:
          query: Siemens Energy
        name: iri_discovery
        output: urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles/cim:OrganisationRole.Organisation <urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629>
            .

            <urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_ebe306b5628691fd970126adeba2f48e
    nl_question: Which organisations share roles with Siemens Energy?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629
  - expected_steps:
    - - args:
          query: 959c6355
        name: iri_discovery
        output: urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisation WHERE {

            ?organisation a cim:Organisation ;

            cim:Organisation.Roles/cim:OrganisationRole.Organisation <urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f>
            .

            <urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisation"]}, "results": {"bindings": [{"organisation":
          {"type": "uri", "value": "urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisation
    id: question_c837a33678cc751c531d47460d6a2226
    nl_question: What organisations have roles associated with 959c6355?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f
  sparql_template: '?organisation a cim:Organisation ;

    cim:Organisation.Roles/cim:OrganisationRole.Organisation {$ObjectIdentity(0, cim:Organisation)}
    .

    {$ObjectIdentity(0, cim:Organisation)} a cim:Organisation ;

    .'
  template_id: template_list_20cb4c91f0683eadee2871ac199dded1
- description: A graph pattern which lists all values for organisationrole limited
    by parameters for none and by filter properties none.
  filters: []
  name: List organisationrole by parameters none and filters none
  outputs:
  - name: organisationrole
    type: cim:OrganisationRole
  parameters: []
  paraphrases:
  - Which entities have the role of an organisation?
  - List all entities classified as an organisation role.
  - Can you provide all organisation roles?
  - What are the different organisation roles available?
  - Identify all entities assigned as an organisation role.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:96af32e4-215b-448f-a6ed-20d0e64e3dff"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:b08ad243-30c1-4bb1-9e7e-5783a8ed50bd"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_9b7ec3757a00ee4a5c529a2d89859ada
    nl_question: What are the different organisation roles available?
    parameter_bindings: {}
  sparql_template: ?organisationrole a cim:OrganisationRole .
  template_id: template_list_37db73b7f742b29ec5247c8d5be62124
- description: A graph pattern which lists all values for organisationrole limited
    by parameters for organisation (https://cim.ucaiug.io/ns#OrganisationRole.Organisation)
    and by filter properties none.
  filters: []
  name: List organisationrole by parameters organisation and filters none
  outputs:
  - name: organisationrole
    type: cim:OrganisationRole
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OrganisationRole.Organisation
    type: https://cim.ucaiug.io/ns#Organisation
  paraphrases:
  - Which roles are associated with $ObjectIdentity(0, cim:Organisation)?
  - What organisation roles are linked to $ObjectIdentity(0, cim:Organisation)?
  - Can you list all roles of $ObjectIdentity(0, cim:Organisation)?
  - Identify the roles held by $ObjectIdentity(0, cim:Organisation).
  - What are the organisation roles of $ObjectIdentity(0, cim:Organisation)?
  questions:
  - expected_steps:
    - - args:
          query: 27613d44-28e2-4aeb-a96b-f4a49591d629
        name: iri_discovery
        output: urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation <urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629>
            .

            <urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_14a833ebe9714297b95786eeca8515c5
    nl_question: Which roles are associated with 27613d44-28e2-4aeb-a96b-f4a49591d629?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:27613d44-28e2-4aeb-a96b-f4a49591d629
  - expected_steps:
    - - args:
          query: b21ec013-41dc-4cac-ae79-927dfe45e51f
        name: iri_discovery
        output: urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation <urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f>
            .

            <urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:96af32e4-215b-448f-a6ed-20d0e64e3dff"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_c4e5e249057b65957d876e6ee7c8d8f6
    nl_question: What organisation roles are linked to b21ec013-41dc-4cac-ae79-927dfe45e51f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:b21ec013-41dc-4cac-ae79-927dfe45e51f
  - expected_steps:
    - - args:
          query: 959c6355
        name: iri_discovery
        output: urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation <urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f>
            .

            <urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_b6d7e8059fd21a7c9c3699f4d27a74f5
    nl_question: Identify the roles held by 959c6355.
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:959c6355-28f4-469d-af68-1f62f478b57f
  - expected_steps:
    - - args:
          query: 349d93a8
        name: iri_discovery
        output: urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation <urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3>
            .

            <urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_26078125969ec00541c239eed185d828
    nl_question: Can you list all roles of 349d93a8?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:349d93a8-d8e9-4d8a-a428-5c89b55ac7a3
  - expected_steps:
    - - args:
          query: Telemark-DSO
        name: iri_discovery
        output: urn:uuid:7c072768-f7f2-4c95-8037-e0059468442a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation <urn:uuid:7c072768-f7f2-4c95-8037-e0059468442a>
            .

            <urn:uuid:7c072768-f7f2-4c95-8037-e0059468442a> a cim:Organisation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:b08ad243-30c1-4bb1-9e7e-5783a8ed50bd"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_1a6e271ab94fc55d52f483db57d6e1ee
    nl_question: Which roles are associated with Telemark-DSO?
    parameter_bindings:
      $ObjectIdentity(0, cim:Organisation): urn:uuid:7c072768-f7f2-4c95-8037-e0059468442a
  sparql_template: '?organisationrole a cim:OrganisationRole ;

    cim:OrganisationRole.Organisation {$ObjectIdentity(0, cim:Organisation)} .

    {$ObjectIdentity(0, cim:Organisation)} a cim:Organisation ;

    .'
  template_id: template_list_0a96e66d17f76b5a6bccf6be8e64307e
- description: A graph pattern which lists all values for organisationrole limited
    by parameters for organisationrole (https://cim.ucaiug.io/ns#OrganisationRole.Organisation,
    https://cim.ucaiug.io/ns#Organisation.Roles) and by filter properties none.
  filters: []
  name: List organisationrole by parameters organisationrole and filters none
  outputs:
  - name: organisationrole
    type: cim:OrganisationRole
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OrganisationRole.Organisation
    - https://cim.ucaiug.io/ns#Organisation.Roles
    type: https://cim.ucaiug.io/ns#OrganisationRole
  paraphrases:
  - What organisation roles are associated with $ObjectIdentity(0, cim:OrganisationRole)?
  - List all organisation roles linked to $ObjectIdentity(0, cim:OrganisationRole).
  - Which organisation roles are connected to $ObjectIdentity(0, cim:OrganisationRole)?
  - Identify the organisation roles related to $ObjectIdentity(0, cim:OrganisationRole).
  - What are the organisation roles corresponding to $ObjectIdentity(0, cim:OrganisationRole)?
  questions:
  - expected_steps:
    - - args:
          query: 889205f2
        name: iri_discovery
        output: urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation/cim:Organisation.Roles <urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0>
            .

            <urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_d01b0d906f81da022d4abe25223eec91
    nl_question: What organisation roles are associated with 889205f2?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0
  - expected_steps:
    - - args:
          query: Siemens Energy Manufacture
        name: iri_discovery
        output: urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation/cim:Organisation.Roles <urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3>
            .

            <urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_11b1ab2f207c2348b7069d25a91b3ae7
    nl_question: List all organisation roles linked to Siemens Energy Manufacture.
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:ba8b5d24-9649-408d-8afe-452a987fbbc3
  - expected_steps:
    - - args:
          query: 50f0783d
        name: iri_discovery
        output: urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation/cim:Organisation.Roles <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4>
            .

            <urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:889205f2-284f-4beb-8c9f-7d4da78382d0"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4"}},
          {"organisationrole": {"type": "uri", "value": "urn:uuid:f36f7e28-51a4-4396-8441-9d90d22f0775"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_673134ad1c3b8c93e00f947b00b2c39c
    nl_question: What organisation roles are associated with 50f0783d?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:50f0783d-0543-41c4-972a-9ad8415b52a4
  - expected_steps:
    - - args:
          query: 84161c05
        name: iri_discovery
        output: urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation/cim:Organisation.Roles <urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59>
            .

            <urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_b72c882926f5dceda6546bb2cab854bb
    nl_question: Identify the organisation roles related to 84161c05.
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:84161c05-ae4f-419c-b6c4-502dad3d3b59
  - expected_steps:
    - - args:
          query: 2d009e27-5319-4265-b4d3-48aa6f4e57cb
        name: iri_discovery
        output: urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?organisationrole WHERE {

            ?organisationrole a cim:OrganisationRole ;

            cim:OrganisationRole.Organisation/cim:Organisation.Roles <urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb>
            .

            <urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb> a cim:OrganisationRole
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["organisationrole"]}, "results": {"bindings":
          [{"organisationrole": {"type": "uri", "value": "urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - organisationrole
    id: question_faf170abd84f84d82345058d287b2b63
    nl_question: Which organisation roles are connected to 2d009e27-5319-4265-b4d3-48aa6f4e57cb?
    parameter_bindings:
      $ObjectIdentity(0, cim:OrganisationRole): urn:uuid:2d009e27-5319-4265-b4d3-48aa6f4e57cb
  sparql_template: '?organisationrole a cim:OrganisationRole ;

    cim:OrganisationRole.Organisation/cim:Organisation.Roles {$ObjectIdentity(0, cim:OrganisationRole)}
    .

    {$ObjectIdentity(0, cim:OrganisationRole)} a cim:OrganisationRole ;

    .'
  template_id: template_list_c5cd7963d06dddadaf996d359f954d43
- description: A graph pattern which lists all values for terminal limited by parameters
    for none and by filter properties none.
  filters: []
  name: List terminal by parameters none and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters: []
  paraphrases:
  - What are the terminals in the system?
  - List all terminals present in the dataset.
  - Can you show me the terminals available?
  - Identify all terminals in the data.
  - Which terminals exist in the system?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902c5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:fe798f30-0725-e94e-8142-c06ca7701b14"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:e25c03e3-96a7-a64f-b776-a155f009d5f8"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90427-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9046a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90192-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90412-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:7d101d2b-ce05-9843-ab59-2c3e5e244cbb"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90421-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9017c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:925f3ab7-54ce-b748-887a-fc6ae23bbdc2"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:f4dba262-3ff3-9f41-961d-7fbe1f8a0cd7"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90369-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:6ac2f3cd-c906-0a4b-ba1b-5942e9c65307"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9030d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ca-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:b016bc42-5a9f-ec42-b326-e9b9eed9e6d3"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90330-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90232-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ad970e05-69d9-5340-9dbd-ce6a9a2e0996"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:c95039b2-aea2-ad4d-b444-c6efc77461e5"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90399-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2f8c9437-e564-e948-8764-be3494565b1f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:51883d43-111e-f24b-89f7-0573426fa32f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:a0ad0036-fbee-6646-b195-3a86614529f2"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:a2a690ef-b78a-3f46-90c5-5d434e26a64e"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:40725e5a-33bf-6046-8d11-da19f9c726b4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:761a49da-2b71-2d4e-877f-3cf7fa86ef63"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90393-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90343-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90486-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90452-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0b50ae74-92eb-f244-872b-07e629f53494"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2e98d68c-e0c5-6d47-b392-a1746743ef63"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902bf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90166-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9044b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:f710cc4a-50dd-e443-8ac7-4c56b70041e8"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ad37e24a-9993-4f45-80ed-49a80b6a85d9"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90418-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901bc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90420-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:947636e9-e939-294e-a94b-2090060b74ca"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:e035c87e-704d-404f-8ea8-91c62e0d7d8a"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:13116d72-3969-1344-91a7-14fb404a00c0"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9015e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:3916ae31-9f3d-af4e-8d87-87d373d8200a"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9030a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:1ef7a41b-2cff-6046-b48f-c60a16fd20b0"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90202-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:40c8340e-7ccf-d446-8a6b-bffa19ec88e6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:dae3bb4b-0a86-9243-99c1-a1d5b163774d"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:6da89f37-cc6f-4e4e-8b20-975295017390"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:a749d698-52a2-564e-8c6f-068fe62045fe"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5831696b-e9e1-8e4a-a169-0e4e09f15f1f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:db724627-9dae-4748-b4e3-2daf627ffa17"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902dd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:854b40ee-7109-d04c-b4ef-f0665722e451"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90247-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0dae5d37-4d01-3645-9e94-607410c5ac34"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903cd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90363-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90423-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8e8e6b0c-ee96-7a4f-9790-c9ae62edafbe"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90235-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:cd25f47c-ad0c-f74d-8c0e-fd91a95505b6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90406-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9043d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90424-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:22c3512a-fdf2-464c-b1f4-85d173fa2d18"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90370-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:aadfa134-666a-ae4f-8c09-6f3ae114c3b5"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90483-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90467-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9048a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90384-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:e65c4130-3a4d-db42-9020-c9f7c447d473"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90258-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ea014fdb-b96f-2a4b-b1df-d38e846d4941"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:f723530d-ae1e-df4f-9c7f-21e42da147d6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:a533d3fd-822f-3b40-9030-e18b571cd1ea"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90387-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0345061e-37c9-9a49-b632-2af77bdca3a2"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90292-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90367-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90340-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9046e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:a949cafd-39f3-8e4c-bca5-9928b004b4da"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90244-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:692809cf-1bb4-8642-9b70-ee677f063304"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:67dfc70a-36cf-da4e-b97c-fd1eda9cd8ac"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90409-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90375-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90205-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:bff806b2-7825-af4c-a34b-be542dbe5ae6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:37c82b4c-7441-9946-98bf-7ade99732ecf"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9015c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90250-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:bc0f852a-3cc8-e143-8174-f0854a2d38aa"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ee4223ab-0538-dc4a-9b79-d463c048bb08"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90430-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90298-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:e2f56599-a78e-494f-8db3-c0b0bdab1d70"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90388-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90321-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90188-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:6abb96f5-a71f-8e41-b563-7c569789d6bd"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90310-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5906b2a0-4ec9-1949-98b8-709380af0060"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ba-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901aa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90223-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90217-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90253-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:b3ff19da-83b8-5e40-b38c-38982b748732"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:c3458e72-1c7a-a74b-b561-8afe0a3aa2be"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903df-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90214-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:f9e8d6d1-76e1-6c4d-a640-e128ecfa723e"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90411-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:b77c60e8-fe4f-9149-9bc6-c3eb8f899de2"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:84775b5d-95c1-bd46-bb0d-0f74e4c06757"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:70f1852f-186d-5e43-98bf-b69f028cfcc5"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90184-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90220-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90182-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902bc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2e64900b-94a8-6e40-bd63-3e69510c316f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90353-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:f08f910c-300e-8941-aa85-3106d93e3429"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90475-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:9acd76b4-8d78-2b4b-81d5-e404e244997d"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90168-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90429-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:71d09d39-a080-5d4f-86f3-7b3185e51b8e"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2a67a243-6e4a-a84d-8aea-f250399166c9"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8d35b51b-06bd-7541-b3e6-2ddbbb1204fe"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90229-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90272-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90265-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90211-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90463-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90350-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90400-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:076da31b-080d-c742-9cb1-134a6ba5b1ed"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:efe663e2-7518-3044-88d4-209bf597536a"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:e3d56d8b-5f71-3042-9734-7118977e887c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90426-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9023e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:7f811234-10fe-e34f-a9af-9af61a6dd4c7"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90417-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:292835be-c432-734c-8c28-3b8c61c0c077"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8a0babd6-6d6f-854b-b65f-4245e65c9e9c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:c8ac9d5f-d60e-a345-8790-12b86184c31b"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0d7f39d0-5447-fb42-9d4f-3d0775bceef0"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:d28bc89e-0592-1440-9721-5cbe124c1f1b"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90403-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:eba035f1-7c96-0142-8561-37b28625abf7"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90478-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903eb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:eb8b2a90-9bc8-154f-92dd-3887e3676498"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90455-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ac-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90339-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90432-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:67bc203e-13e4-534b-94b8-bf19f5b31080"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:e3ef93a1-723a-224e-8863-472e4f269633"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:714c775a-246f-e34f-9a6b-667f4b66138c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:1a6d8d77-f2ca-f043-b475-f7db6304fe3e"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:669c1d0c-87dd-a943-9316-88308bd36f15"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90300-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903bb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90440-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90317-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:329965e7-b5de-c54f-856a-358c9e1f9c50"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90415-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90241-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90268-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90262-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9023b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:eaf768b1-3d82-c64d-a1c6-5bd7f9a72751"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:c1ca1160-be67-9448-a16b-e92a6112e380"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90364-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0a122f63-f2c6-ca43-be49-76571474d98c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:02b41435-bd3e-bb4b-9b89-24e3a8983c0f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5ddb272d-00bd-d74e-8c96-e2049351c3e4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90347-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:79887cf1-6c94-3f4f-a1f8-7ddef866d55f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:c8f95fee-e9a6-a44b-97ac-23e272a05ecd"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0619c12e-abb9-b141-b3a7-e2788d3d375c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90238-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0ef62251-5e2e-d14a-aa44-396d4a885c4f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:cf654436-a05a-7948-8cc3-f3a288608964"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903af-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:38b8e08a-112e-b046-8504-efef4beb0c17"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90402-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:da4b0f71-a251-f947-be12-2de53a2d272a"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:4a5b7813-14d3-fa4d-8907-edcdce7dbfd9"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90373-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:356c6f11-da4d-3f4d-b3fd-49234106345c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:16659ede-d69f-1d48-bcf2-ebb2ee6c259e"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90433-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90459-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:caa10f15-4591-e241-ac0b-81675acf5687"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9044e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ee-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90333-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90358-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90162-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5ffde614-bc34-384d-923e-e62ac9f3f584"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90208-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:d7a472cc-6b91-564d-93b4-0f3c24f2342c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90226-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:9b49634c-4910-9841-b595-0d0cb0d0d1de"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90307-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:3718af45-a6ee-fb40-a4c6-f1118c114393"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:d92cb2eb-fd81-194c-9e43-618df025d6b4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90439-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90357-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90460-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90295-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90381-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9017e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:d288bd96-ae6e-cf46-9775-f38e2699f1ce"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9033d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90173-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90366-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90324-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90178-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:7af49a35-a119-5443-84be-af343b7761c8"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:c1aa295d-e817-db46-b14e-bee2739fcd9d"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ab88a3a2-a572-3440-be06-757e0225ea42"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ae68b597-69fb-e14b-a070-67c7dcc1d698"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90394-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90314-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8574aebb-23c4-3e4a-bd04-b5651c97d27a"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:30ab0123-1669-1242-99ca-610e4bcdc6c5"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90194-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90471-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ecfaf384-4581-4249-8646-b5d31943ad61"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90356-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903dc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90390-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90360-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90397-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:093a3df5-0583-894f-99c9-016d752ff920"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90378-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5c3fa20d-4748-5e44-b915-481e6d2552cd"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:dc791b3b-fe63-a14b-b144-953748088613"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90361-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_57f82bb09b78289d94aeba84bf482a5a
    nl_question: What are the terminals in the system?
    parameter_bindings: {}
  sparql_template: ?terminal a cim:Terminal .
  template_id: template_list_c56ebeffa05c24f3f6da3e95916fc79c
- description: A graph pattern which lists all values for terminal limited by parameters
    for connectivitynode (https://cim.ucaiug.io/ns#Terminal.ConnectivityNode) and
    by filter properties none.
  filters: []
  name: List terminal by parameters connectivitynode and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:ConnectivityNode)?
  - List all terminals associated with $ObjectIdentity(0, cim:ConnectivityNode).
  - What are the terminals linked to the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)?
  - Provide a list of terminals connected through $ObjectIdentity(0, cim:ConnectivityNode).
  - Which terminals have a connection to the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode)?
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN CN 004
        name: iri_discovery
        output: urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f>
            .

            <urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2a67a243-6e4a-a84d-8aea-f250399166c9"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:7af49a35-a119-5443-84be-af343b7761c8"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_505cccf4538330a07589ff0b5df53983
    nl_question: Which terminals have a connection to the connectivity node KRISTIAN
      CN 004?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f
  - expected_steps:
    - - args:
          query: 3d152ee3-5a28-1040-b170-5f83682c0d5c
        name: iri_discovery
        output: urn:uuid:3d152ee3-5a28-1040-b170-5f83682c0d5c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:3d152ee3-5a28-1040-b170-5f83682c0d5c>
            .

            <urn:uuid:3d152ee3-5a28-1040-b170-5f83682c0d5c> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:0d7f39d0-5447-fb42-9d4f-3d0775bceef0"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:16659ede-d69f-1d48-bcf2-ebb2ee6c259e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_55924e7bca3369cd365c80098942b8e8
    nl_question: Provide a list of terminals connected through 3d152ee3-5a28-1040-b170-5f83682c0d5c.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:3d152ee3-5a28-1040-b170-5f83682c0d5c
  - expected_steps:
    - - args:
          query: 20c2eb92
        name: iri_discovery
        output: urn:uuid:20c2eb92-4ef1-204b-9054-c1baaba29845
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:20c2eb92-4ef1-204b-9054-c1baaba29845>
            .

            <urn:uuid:20c2eb92-4ef1-204b-9054-c1baaba29845> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:51883d43-111e-f24b-89f7-0573426fa32f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5906b2a0-4ec9-1949-98b8-709380af0060"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_6ffe543318f1fe5147f825c023bd587d
    nl_question: Provide a list of terminals connected through 20c2eb92.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:20c2eb92-4ef1-204b-9054-c1baaba29845
  - expected_steps:
    - - args:
          query: 8684ec86
        name: iri_discovery
        output: urn:uuid:8684ec86-2477-414d-9cab-63a5f35822b4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:8684ec86-2477-414d-9cab-63a5f35822b4>
            .

            <urn:uuid:8684ec86-2477-414d-9cab-63a5f35822b4> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90409-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0ef62251-5e2e-d14a-aa44-396d4a885c4f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f6281c1b596893e64deab2e8db203480
    nl_question: Which terminals have a connection to the connectivity node 8684ec86?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:8684ec86-2477-414d-9cab-63a5f35822b4
  - expected_steps:
    - - args:
          query: 3e1fe653
        name: iri_discovery
        output: urn:uuid:3e1fe653-f8a5-8e40-ad9c-d9be4a58aae7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:3e1fe653-f8a5-8e40-ad9c-d9be4a58aae7>
            .

            <urn:uuid:3e1fe653-f8a5-8e40-ad9c-d9be4a58aae7> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2f8c9437-e564-e948-8764-be3494565b1f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:30ab0123-1669-1242-99ca-610e4bcdc6c5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_ba416e25417b6969ba9671689eea2165
    nl_question: List all terminals associated with 3e1fe653.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:3e1fe653-f8a5-8e40-ad9c-d9be4a58aae7
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.ConnectivityNode {$ObjectIdentity(0, cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_3711c0812b6cb99b3a225954bd731221
- description: A graph pattern which lists all values for terminal limited by parameters
    for regulatingcontrol (https://cim.ucaiug.io/ns#Terminal.RegulatingControl) and
    by filter properties none.
  filters: []
  name: List terminal by parameters regulatingcontrol and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.RegulatingControl
    type: https://cim.ucaiug.io/ns#RegulatingControl
  paraphrases:
  - Which terminals are associated with the regulating control $ObjectIdentity(0,
    cim:RegulatingControl)?
  - List all terminals connected to $ObjectIdentity(0, cim:RegulatingControl).
  - What terminals are linked to the regulating control $ObjectIdentity(0, cim:RegulatingControl)?
  - Identify the terminals that are part of $ObjectIdentity(0, cim:RegulatingControl).
  - Provide the terminals regulated by $ObjectIdentity(0, cim:RegulatingControl).
  questions:
  - expected_steps:
    - - args:
          query: FORSMARK420 RC1
        name: iri_discovery
        output: urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.RegulatingControl <urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f4f6329cbcca94c82b8df8831a4abd7d
    nl_question: List all terminals connected to FORSMARK420 RC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 2dd90466-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.RegulatingControl <urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_9292ee416e9099145e3fc09318ebbe5a
    nl_question: Identify the terminals that are part of 2dd90466-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90489
        name: iri_discovery
        output: urn:uuid:2dd90489-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.RegulatingControl <urn:uuid:2dd90489-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90489-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2a83ff8452e16233bff24e0554af8efd
    nl_question: What terminals are linked to the regulating control 2dd90489?
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:2dd90489-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: f1769844-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.RegulatingControl <urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_650453b312fca3780727eeb7ef71a789
    nl_question: Identify the terminals that are part of f1769844-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KVILLDAL300 RC1
        name: iri_discovery
        output: urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.RegulatingControl <urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_78a58a4f40371ded14a136063306ce9a
    nl_question: Provide the terminals regulated by KVILLDAL300 RC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.RegulatingControl {$ObjectIdentity(0, cim:RegulatingControl)} .

    {$ObjectIdentity(0, cim:RegulatingControl)} a cim:RegulatingControl ;

    .'
  template_id: template_list_e48222b8e6e45fdd7d74553e51c8748a
- description: A graph pattern which lists all values for terminal limited by parameters
    for svpowerflow (https://cim.ucaiug.io/ns#Terminal.SvPowerFlow) and by filter
    properties none.
  filters: []
  name: List terminal by parameters svpowerflow and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    type: https://cim.ucaiug.io/ns#SvPowerFlow
  paraphrases:
  - Which terminal is associated with $ObjectIdentity(0, cim:SvPowerFlow)?
  - Identify the terminal connected to $ObjectIdentity(0, cim:SvPowerFlow).
  - What terminal has the power flow $ObjectIdentity(0, cim:SvPowerFlow)?
  - List the terminal linked with $ObjectIdentity(0, cim:SvPowerFlow).
  - Find the terminal related to the power flow $ObjectIdentity(0, cim:SvPowerFlow).
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b0400331-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400331-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400331-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b0400331-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903ca-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_60ffc09c9020fb0b6a50d30c6ce3e70c
    nl_question: List the terminal linked with urn:uuid:b0400331-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b0400331-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_d121bc2d6fc21215500b050d46ab9f05
    nl_question: What terminal has the power flow urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b0400361-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400361-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400361-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b0400361-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90370-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_9334320e0fe85da0e2df79d5bf0c92ec
    nl_question: Find the terminal related to the power flow urn:uuid:b0400361-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b0400361-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b040037e-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b040037e-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow <urn:uuid:b040037e-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b040037e-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_a1ec7892d20fccb2ad8ff5ce98a3cccf
    nl_question: What terminal has the power flow urn:uuid:b040037e-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b040037e-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b040041f-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b040041f-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow <urn:uuid:b040041f-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b040041f-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9043d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e4c7aa13fa3a99505e1d8e0395ebaaee
    nl_question: What terminal has the power flow urn:uuid:b040041f-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b040041f-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.SvPowerFlow {$ObjectIdentity(0, cim:SvPowerFlow)} .

    {$ObjectIdentity(0, cim:SvPowerFlow)} a cim:SvPowerFlow ;

    .'
  template_id: template_list_70c7393b013cec2bea68a16af366a7f0
- description: A graph pattern which lists all values for terminal limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#Terminal.TopologicalNode) and by
    filter properties none.
  filters: []
  name: List terminal by parameters topologicalnode and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:TopologicalNode)?
  - List all terminals associated with $ObjectIdentity(0, cim:TopologicalNode).
  - What terminals are linked to $ObjectIdentity(0, cim:TopologicalNode)?
  - Identify the terminals connected to the topological node $ObjectIdentity(0, cim:TopologicalNode).
  - Provide the terminals that are related to $ObjectIdentity(0, cim:TopologicalNode).
  questions:
  - expected_steps:
    - - args:
          query: GRUNDFORS
        name: iri_discovery
        output: urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode <urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e637195e5550ada67d312f4d4f79a48b
    nl_question: What terminals are linked to GRUNDFORS?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696bf-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode <urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90427-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90238-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_0acc7a21d65e38bf160493fc980e63b8
    nl_question: List all terminals associated with f17696bf-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176968f-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode <urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90300-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_cb8444ba89a70c74f7981b305369d3fe
    nl_question: Which terminals are connected to f176968f-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769677-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode <urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90418-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90205-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a0-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_64f8dec4041d61c50a77880c0781843a
    nl_question: Provide the terminals that are related to f1769677-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ab-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90363-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90258-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90357-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90366-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90360-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_ff46a4cdf40c2461f5f9f3f5e486a2fe
    nl_question: Provide the terminals that are related to f17695ab-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode {$ObjectIdentity(0, cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_150b0cc05c7b9c34b95e852b924540a5
- description: A graph pattern which lists all values for terminal limited by parameters
    for transformerend (https://cim.ucaiug.io/ns#Terminal.TransformerEnd) and by filter
    properties none.
  filters: []
  name: List terminal by parameters transformerend and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TransformerEnd
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:TransformerEnd)?
  - Identify the terminals associated with $ObjectIdentity(0, cim:TransformerEnd).
  - List all terminals connected to transformer end $ObjectIdentity(0, cim:TransformerEnd).
  - What are the terminals linked with $ObjectIdentity(0, cim:TransformerEnd)?
  - Provide the terminals connected to $ObjectIdentity(0, cim:TransformerEnd).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90480-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TransformerEnd <urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9047f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_112b9e20212341d5ce2c7e20a21596ba
    nl_question: Which terminals are connected to 2dd90480-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: OSLO    T1 S
        name: iri_discovery
        output: urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TransformerEnd <urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90460-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_7460cb4b40440376f0418a5d61acde69
    nl_question: Provide the terminals connected to OSLO    T1 S.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9045a
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TransformerEnd <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90459-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_b23285c52bdd8feaaf91f088105ef40d
    nl_question: List all terminals connected to transformer end 2dd9045a.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90448-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TransformerEnd <urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_de5f19ed7df22447a2b232de46f248e1
    nl_question: Provide the terminals connected to 2dd90448-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90472-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90472-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TransformerEnd <urn:uuid:2dd90472-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90472-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90471-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_d60bda41cf7f1d1e41c603c6adb6696e
    nl_question: Identify the terminals associated with 2dd90472-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90472-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TransformerEnd {$ObjectIdentity(0, cim:TransformerEnd)} .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_f08da9f2b8d91bf15630469e955db570
- description: A graph pattern which lists all values for terminal limited by parameters
    for pinterminal (https://cim4.eu/ns/nc#Terminal.PinTerminal) and by filter properties
    none.
  filters: []
  name: List terminal by parameters pinterminal and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Terminal.PinTerminal
    type: https://cim4.eu/ns/nc#PinTerminal
  paraphrases:
  - Which terminal is associated with the pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  - Identify the terminal connected to pin terminal $ObjectIdentity(0, nc:PinTerminal).
  - What terminal is linked to the pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  - List the terminal associated with $ObjectIdentity(0, nc:PinTerminal).
  - Which terminal has a connection to pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  questions:
  - expected_steps:
    - - args:
          query: 112e3335
        name: iri_discovery
        output: urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            nc:Terminal.PinTerminal <urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127>
            .

            <urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_8597cceab7938792c6d2ced9645da375
    nl_question: Which terminal has a connection to pin terminal 112e3335?
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127
  - expected_steps:
    - - args:
          query: GP KRISTIAN300 B VL
        name: iri_discovery
        output: urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            nc:Terminal.PinTerminal <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2>
            .

            <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:ea014fdb-b96f-2a4b-b1df-d38e846d4941"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f1c4a16e77b6207adb9e2ef2de7c7d39
    nl_question: Identify the terminal connected to pin terminal GP KRISTIAN300 B
      VL.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
  - expected_steps:
    - - args:
          query: b799d394-34b3-45e4-a103-a5676a13850d
        name: iri_discovery
        output: urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            nc:Terminal.PinTerminal <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d>
            .

            <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_293e3b7189668fa17c12b252f387fbbd
    nl_question: Which terminal has a connection to pin terminal b799d394-34b3-45e4-a103-a5676a13850d?
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
  - expected_steps:
    - - args:
          query: b0c5b94e-7094-470d-8515-7c6b1e7cfd31
        name: iri_discovery
        output: urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            nc:Terminal.PinTerminal <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31>
            .

            <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_15578e2ac5af76ce97d134392778c37b
    nl_question: What terminal is linked to the pin terminal b0c5b94e-7094-470d-8515-7c6b1e7cfd31?
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
  sparql_template: '?terminal a cim:Terminal ;

    nc:Terminal.PinTerminal {$ObjectIdentity(0, nc:PinTerminal)} .

    {$ObjectIdentity(0, nc:PinTerminal)} a nc:PinTerminal ;

    .'
  template_id: template_list_dd7a5deffa74fdee99b999b3c8d0aae4
- description: A graph pattern which lists all values for terminal limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/rules#Terminal.Equipment) and by
    filter properties none.
  filters: []
  name: List terminal by parameters synchronousmachine and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which terminal is connected to $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the terminal associated with $ObjectIdentity(0, cim:SynchronousMachine).
  - What terminal belongs to $ObjectIdentity(0, cim:SynchronousMachine)?
  - List the terminals connected to $ObjectIdentity(0, cim:SynchronousMachine).
  - Which specific terminal is linked to $ObjectIdentity(0, cim:SynchronousMachine)?
  questions:
  - expected_steps:
    - - args:
          query: f17698bd
        name: iri_discovery
        output: urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_25abac80f461a6e252f5cf087dcf1064
    nl_question: Identify the terminal associated with f17698bd.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: PORJUS  420 M5
        name: iri_discovery
        output: urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9026e-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_6101cbb60a51c48f9a6bdf3dd38b1084
    nl_question: List the terminals connected to PORJUS  420 M5.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769834-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176987f
        name: iri_discovery
        output: urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9028f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_4e69271c1b5d3e95b22b34770b32ffd9
    nl_question: What terminal belongs to f176987f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f176987f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176981f
        name: iri_discovery
        output: urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90265-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_a7d868135a749ce2e48c480abfbb684a
    nl_question: List the terminals connected to f176981f.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f176981f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769996-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769996-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769996-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769996-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90310-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_511321fb324c5e3f4a5eb2e92e4198c7
    nl_question: Which specific terminal is linked to f1769996-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769996-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_a0ebabe7fa2cf5033acc55c6128ad2b1
- description: A graph pattern which lists all values for terminal limited by parameters
    for aclinesegment (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter
    properties none.
  filters: []
  name: List terminal by parameters aclinesegment and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:ACLineSegment)?
  - List all terminals associated with $ObjectIdentity(0, cim:ACLineSegment).
  - What terminals belong to $ObjectIdentity(0, cim:ACLineSegment)?
  - Identify the terminals connected to the AC line segment $ObjectIdentity(0, cim:ACLineSegment).
  - Provide the terminals that are linked with $ObjectIdentity(0, cim:ACLineSegment).
  questions:
  - expected_steps:
    - - args:
          query: f1769c2c
        name: iri_discovery
        output: urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903dc-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_8fff01d518b53aa20a4146f63610a160
    nl_question: List all terminals associated with f1769c2c.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769c2c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 300KRISTIAN-KVILLDAL
        name: iri_discovery
        output: urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90415-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_014682e60c147629195f74e444dc9ffa
    nl_question: What terminals belong to 300KRISTIAN-KVILLDAL?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769cec-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 420MALMO-KARLSH
        name: iri_discovery
        output: urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_d7c262d583081408ba0242a167a43ebe
    nl_question: What terminals belong to 420MALMO-KARLSH?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d70-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 300OSLO-ASKER
        name: iri_discovery
        output: urn:uuid:f1769c68-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769c68-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769c68-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903eb-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_ec0d2a205a90b602bd1a9f8ae7ba7cc2
    nl_question: Identify the terminals connected to the AC line segment 300OSLO-ASKER.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769c68-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769b00-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769b00-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769b00-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769b00-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90387-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90388-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_5c4bff47e380abace616cc079286b8ed
    nl_question: What terminals belong to f1769b00-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769b00-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_c499806ce1bc2d114f5f1f6f5b684306
- description: A graph pattern which lists all values for terminal limited by parameters
    for breaker (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties
    none.
  filters: []
  name: List terminal by parameters breaker and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:Breaker)?
  - List the terminals associated with $ObjectIdentity(0, cim:Breaker).
  - What terminals are linked to $ObjectIdentity(0, cim:Breaker)?
  - Identify all terminals connected to the breaker $ObjectIdentity(0, cim:Breaker).
  - Provide the terminals that are attached to $ObjectIdentity(0, cim:Breaker).
  questions:
  - expected_steps:
    - - args:
          query: fdf147d4
        name: iri_discovery
        output: urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284>
            .

            <urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:5831696b-e9e1-8e4a-a169-0e4e09f15f1f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:71d09d39-a080-5d4f-86f3-7b3185e51b8e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_0f5acc4f4b48823db9da8e1d054559ab
    nl_question: List the terminals associated with fdf147d4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284
  - expected_steps:
    - - args:
          query: KRISTIAN300AR1 AB_S
        name: iri_discovery
        output: urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c>
            .

            <urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:7d101d2b-ce05-9843-ab59-2c3e5e244cbb"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:67dfc70a-36cf-da4e-b97c-fd1eda9cd8ac"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_b546580be3bd0e99691c3b73fa12c9c0
    nl_question: What terminals are linked to KRISTIAN300AR1 AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c
  - expected_steps:
    - - args:
          query: 0a46da9f-1326-254e-8a3b-649a431f6625
        name: iri_discovery
        output: urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625>
            .

            <urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:bff806b2-7825-af4c-a34b-be542dbe5ae6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ee4223ab-0538-dc4a-9b79-d463c048bb08"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2b972c14c2f885543e0939ecdb21b87b
    nl_question: Provide the terminals that are attached to 0a46da9f-1326-254e-8a3b-649a431f6625.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625
  - expected_steps:
    - - args:
          query: ARENDAL 300AS1 AB_S
        name: iri_discovery
        output: urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2>
            .

            <urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2e64900b-94a8-6e40-bd63-3e69510c316f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:dc791b3b-fe63-a14b-b144-953748088613"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_9234016855f2aabe6673b04e1c39e868
    nl_question: What terminals are linked to ARENDAL 300AS1 AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2
  - expected_steps:
    - - args:
          query: 13588bcf
        name: iri_discovery
        output: urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305>
            .

            <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:dae3bb4b-0a86-9243-99c1-a1d5b163774d"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:b3ff19da-83b8-5e40-b38c-38982b748732"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_124fe4d5394fa0adfb7071181cef4246
    nl_question: What terminals are linked to 13588bcf?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_6e4abde5a6e71faf311374def8ae0648
- description: A graph pattern which lists all values for terminal limited by parameters
    for disconnector (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter
    properties none.
  filters: []
  name: List terminal by parameters disconnector and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:Disconnector)?
  - List all terminals associated with $ObjectIdentity(0, cim:Disconnector).
  - What terminals are linked to the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - Identify the terminals connected to the disconnector $ObjectIdentity(0, cim:Disconnector).
  - What are the terminals associated with $ObjectIdentity(0, cim:Disconnector)?
  questions:
  - expected_steps:
    - - args:
          query: b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f
        name: iri_discovery
        output: urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f>
            .

            <urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:9acd76b4-8d78-2b4b-81d5-e404e244997d"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:076da31b-080d-c742-9cb1-134a6ba5b1ed"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e173821f83d020f75676555db960b063
    nl_question: What terminals are linked to the disconnector b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f
  - expected_steps:
    - - args:
          query: 9098d05f-45b6-7b4f-b176-a6995b423baa
        name: iri_discovery
        output: urn:uuid:9098d05f-45b6-7b4f-b176-a6995b423baa
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:9098d05f-45b6-7b4f-b176-a6995b423baa>
            .

            <urn:uuid:9098d05f-45b6-7b4f-b176-a6995b423baa> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:5ddb272d-00bd-d74e-8c96-e2049351c3e4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:cf654436-a05a-7948-8cc3-f3a288608964"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f6e3dbeaba98187be3924ceb42cda7da
    nl_question: What are the terminals associated with 9098d05f-45b6-7b4f-b176-a6995b423baa?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:9098d05f-45b6-7b4f-b176-a6995b423baa
  - expected_steps:
    - - args:
          query: KRISTIAN300G2  AD_S
        name: iri_discovery
        output: urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd>
            .

            <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:e25c03e3-96a7-a64f-b776-a155f009d5f8"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2f8c9437-e564-e948-8764-be3494565b1f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_bd160cd9106e5a03401efd03fce8da94
    nl_question: List all terminals associated with KRISTIAN300G2  AD_S.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
  - expected_steps:
    - - args:
          query: 674b85b4-1a1f-2341-94bf-7e8f93392a7a
        name: iri_discovery
        output: urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a>
            .

            <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:c3458e72-1c7a-a74b-b561-8afe0a3aa2be"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:eba035f1-7c96-0142-8561-37b28625abf7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2446eba7628c2b84f67dc8824c2d2cba
    nl_question: Identify the terminals connected to the disconnector 674b85b4-1a1f-2341-94bf-7e8f93392a7a.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
  - expected_steps:
    - - args:
          query: 4ee41c27
        name: iri_discovery
        output: urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340>
            .

            <urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:0345061e-37c9-9a49-b632-2af77bdca3a2"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:84775b5d-95c1-bd46-bb0d-0f74e4c06757"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e6c4f1864986a7d13b131c1fe8ee1092
    nl_question: What are the terminals associated with 4ee41c27?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:Disconnector)} .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_55be831ba5acfba5da44d8d3b8694498
- description: A graph pattern which lists all values for terminal limited by parameters
    for powertransformer (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter
    properties none.
  filters: []
  name: List terminal by parameters powertransformer and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:PowerTransformer)?
  - List all terminals associated with $ObjectIdentity(0, cim:PowerTransformer).
  - What terminals belong to $ObjectIdentity(0, cim:PowerTransformer)?
  - Provide the terminals linked to $ObjectIdentity(0, cim:PowerTransformer).
  - What are the terminals connected to the equipment $ObjectIdentity(0, cim:PowerTransformer)?
  questions:
  - expected_steps:
    - - args:
          query: SIMA    T1
        name: iri_discovery
        output: urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90455-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90459-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2452d8b81fe39edf6e28c2c4c52df1aa
    nl_question: Which terminals are connected to SIMA    T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MO      T1
        name: iri_discovery
        output: urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90486-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9048a-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_167db2b2f8f88afd3c16f1c15bc2ade4
    nl_question: What are the terminals connected to the equipment MO      T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e42-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HALDEN  T1
        name: iri_discovery
        output: urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90452-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9044e-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_294f3e36f8a80b89c72817dffbf22ffd
    nl_question: List all terminals associated with HALDEN  T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769e30-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90483-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_4542c28fc1517decaf26c3298a0b8f74
    nl_question: Provide the terminals linked to f1769e30-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769e1e
        name: iri_discovery
        output: urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90478-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_6fbb79a66a9b6d3fc300c207f031d06f
    nl_question: Which terminals are connected to f1769e1e?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_aab0c530e3c2899ffa239d00d27b014e
- description: A graph pattern which lists all values for terminal limited by parameters
    for busbarsection (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter
    properties none.
  filters: []
  name: List terminal by parameters busbarsection and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which terminals are connected to the equipment $ObjectIdentity(0, cim:BusbarSection)?
  - List all terminals associated with $ObjectIdentity(0, cim:BusbarSection).
  - What terminals are linked to the busbar section $ObjectIdentity(0, cim:BusbarSection)?
  - Provide the terminals related to $ObjectIdentity(0, cim:BusbarSection).
  - Which terminals belong to the busbar section $ObjectIdentity(0, cim:BusbarSection)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd9016e
        name: iri_discovery
        output: urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f658527da7b39a105259eb50c89fe9e6
    nl_question: List all terminals associated with 2dd9016e.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90161
        name: iri_discovery
        output: urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90162-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_24423115d5f8ceaa016f60519cecad36
    nl_question: Provide the terminals related to 2dd90161.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90193-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90194-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_fc274f4f27c63239ac71aae92e6ac6d7
    nl_question: Provide the terminals related to 2dd90193-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: b8666715-5047-5d4d-a882-85fcf5c727b5
        name: iri_discovery
        output: urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5>
            .

            <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_5689ebe871df6c1fafb97ff02d919f3a
    nl_question: Provide the terminals related to b8666715-5047-5d4d-a882-85fcf5c727b5.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
  - expected_steps:
    - - args:
          query: KVILLDAL300 A
        name: iri_discovery
        output: urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_14eac87bec73dab314b790734686acb7
    nl_question: Provide the terminals related to KVILLDAL300 A.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_6db54d99d19377e33ef1946396121abe
- description: A graph pattern which lists all values for terminal limited by parameters
    for conformload (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter
    properties none.
  filters: []
  name: List terminal by parameters conformload and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which terminals are associated with $ObjectIdentity(0, cim:ConformLoad)?
  - List all terminals connected to $ObjectIdentity(0, cim:ConformLoad).
  - What terminals belong to $ObjectIdentity(0, cim:ConformLoad)?
  - Identify terminals linked to $ObjectIdentity(0, cim:ConformLoad).
  - Can you provide the terminals associated with $ObjectIdentity(0, cim:ConformLoad)?
  questions:
  - expected_steps:
    - - args:
          query: TRONDHEI300 L2
        name: iri_discovery
        output: urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90214-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2f911b7a9b8ee99a6193f2b41ef0d50f
    nl_question: What terminals belong to TRONDHEI300 L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176977c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   300 L2
        name: iri_discovery
        output: urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_676fe01ef76f4befeb4b30c7630b45cc
    nl_question: Can you provide the terminals associated with ASKER   300 L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697a6-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697a6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f17697a6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697a6-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90229-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_a74c9f6254658e8f2ee5b7508f8a1cd6
    nl_question: Which terminals are associated with f17697a6-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697a6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769788-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769788-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769788-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769788-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9021a-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_c59eeba7167f0beeb9ac961e34833237
    nl_question: Identify terminals linked to f1769788-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769788-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697ca-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697ca-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f17697ca-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697ca-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9023b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_5bf875139ec50fe570a0b46b0ab22c30
    nl_question: List all terminals connected to f17697ca-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697ca-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_4d825d6a62b570bdfa01fd2f15b7bab0
- description: A graph pattern which lists all values for terminal limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/rules#Terminal.Equipment) and
    by filter properties none.
  filters: []
  name: List terminal by parameters linearshuntcompensator and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the terminals associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - List all terminals connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What terminals are linked to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Provide details of terminals connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 300 LSC1
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90409-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_81e2145f0abf5c2cf787f7a0ec3383df
    nl_question: What terminals are linked to ARENDAL 300 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903fc
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903fd-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e4bdebd29a8c84f542068e115f7ffdca
    nl_question: Provide details of terminals connected to 2dd903fc.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903c1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_a44c972fbb870a962ef36cef28a4c5f5
    nl_question: List all terminals connected to 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cf
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_5bc844cd4ee35014604848b6a7b2e9d3
    nl_question: List all terminals connected to 2dd903cf.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: SYLLING 420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903fa-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_0786709ccc2da46f14b05586622d36cf
    nl_question: List all terminals connected to SYLLING 420 LSC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_6ce57395a38d0769cb123a8ec2c03fe2
- description: A graph pattern which lists all values for terminal limited by parameters
    for nonconformload (https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter
    properties none.
  filters: []
  name: List terminal by parameters nonconformload and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which terminal is associated with $ObjectIdentity(0, cim:NonConformLoad)?
  - List the terminals connected to $ObjectIdentity(0, cim:NonConformLoad).
  - What terminals are linked to $ObjectIdentity(0, cim:NonConformLoad)?
  - Can you provide the terminal associated with $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the terminal connected to $ObjectIdentity(0, cim:NonConformLoad).
  questions:
  - expected_steps:
    - - args:
          query: f17697b8
        name: iri_discovery
        output: urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90232-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_8068e8798b2d0328baf70888df233061
    nl_question: List the terminals connected to f17697b8.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: STEENKU 135 L1
        name: iri_discovery
        output: urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901ed-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_b3d975f5ef3652de63b63b06c59966e1
    nl_question: Which terminal is associated with STEENKU 135 L1?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: DANNEBO 420 L1
        name: iri_discovery
        output: urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901cf-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2fe865b89b75aead7f12c81ea0154739
    nl_question: Identify the terminal connected to DANNEBO 420 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769794-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90220-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_b90db8c42c37f685f42c7b23a9d3cb9e
    nl_question: List the terminals connected to f1769794-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697c4
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cimr:Terminal.Equipment <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90238-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_5fbf283910aad417985e5f0d01fb198a
    nl_question: Which terminal is associated with f17697c4?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cimr:Terminal.Equipment {$ObjectIdentity(0, cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_a81ef9e3ff9884e9a7876f9570e8b76c
- description: A graph pattern which lists all values for terminal limited by parameters
    for connectivitynode (https://cim.ucaiug.io/ns#Terminal.ConnectivityNode), regulatingcontrol
    (https://cim.ucaiug.io/ns#Terminal.RegulatingControl) and by filter properties
    none.
  filters: []
  name: List terminal by parameters connectivitynode, regulatingcontrol and filters
    none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Terminal.RegulatingControl
    type: https://cim.ucaiug.io/ns#RegulatingControl
  paraphrases:
  - Which terminal is connected to $ObjectIdentity(0, cim:ConnectivityNode) and regulated
    by $ObjectIdentity(1, cim:RegulatingControl)?
  - Identify the terminal associated with $ObjectIdentity(0, cim:ConnectivityNode)
    and regulated using $ObjectIdentity(1, cim:RegulatingControl).
  - What terminal belongs to the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)
    and is controlled by $ObjectIdentity(1, cim:RegulatingControl)?
  - List the terminal connected to $ObjectIdentity(0, cim:ConnectivityNode) and under
    the regulation of $ObjectIdentity(1, cim:RegulatingControl).
  - Which terminal is linked to $ObjectIdentity(0, cim:ConnectivityNode) and managed
    by $ObjectIdentity(1, cim:RegulatingControl)?
  questions:
  - expected_steps:
    - - args:
          query: f17695a9
        name: iri_discovery
        output: urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769803-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.RegulatingControl <urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_62af5d430771287412ace766acee6dbd
    nl_question: List the terminal connected to f17695a9 and under the regulation
      of f1769803-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17695a9-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RegulatingControl): urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 'GRUNDFORS   '
        name: iri_discovery
        output: urn:uuid:f17695e4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: GRUNDFOR420 RC1
        name: iri_discovery
        output: urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f17695e4-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.RegulatingControl <urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e4-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_fbcd1580c0b53912e0679376ff330c8b
    nl_question: List the terminal connected to GRUNDFORS    and under the regulation
      of GRUNDFOR420 RC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17695e4-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RegulatingControl): urn:uuid:f1769844-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695f0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17698aa
        name: iri_discovery
        output: urn:uuid:f17698aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f17695f0-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.RegulatingControl <urn:uuid:f17698aa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f0-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:f17698aa-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_9448e9a490b7bc347d9b50976614155f
    nl_question: Which terminal is connected to f17695f0-9aeb-11e5-91da-b8763fd99c5f
      and regulated by f17698aa?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17695f0-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RegulatingControl): urn:uuid:f17698aa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769623-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769623-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17698de-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17698de-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f1769623-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.RegulatingControl <urn:uuid:f17698de-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769623-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:f17698de-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90184-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_4ecfacfe007e1534bf33b5c682b279bd
    nl_question: Which terminal is connected to f1769623-9aeb-11e5-91da-b8763fd99c5f
      and regulated by f17698de-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769623-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RegulatingControl): urn:uuid:f17698de-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769663-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90474-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90474-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.RegulatingControl <urn:uuid:2dd90474-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:2dd90474-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9019a-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e4c0beb43713eaf387dcd43274b5673c
    nl_question: Which terminal is connected to f1769663-9aeb-11e5-91da-b8763fd99c5f
      and regulated by 2dd90474-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:RegulatingControl): urn:uuid:2dd90474-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.ConnectivityNode {$ObjectIdentity(0, cim:ConnectivityNode)} ;

    cim:Terminal.RegulatingControl {$ObjectIdentity(1, cim:RegulatingControl)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .

    {$ObjectIdentity(1, cim:RegulatingControl)} a cim:RegulatingControl ;

    .'
  template_id: template_list_27ebcaccf20cd99587a78dec2214801b
- description: A graph pattern which lists all values for terminal limited by parameters
    for connectivitynode (https://cim.ucaiug.io/ns#Terminal.ConnectivityNode), svpowerflow
    (https://cim.ucaiug.io/ns#Terminal.SvPowerFlow) and by filter properties none.
  filters: []
  name: List terminal by parameters connectivitynode, svpowerflow and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    type: https://cim.ucaiug.io/ns#SvPowerFlow
  paraphrases:
  - Which terminals are connected to the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)
    and have the power flow $ObjectIdentity(1, cim:SvPowerFlow)?
  - Identify the terminals associated with $ObjectIdentity(0, cim:ConnectivityNode)
    and $ObjectIdentity(1, cim:SvPowerFlow).
  - What terminals are linked to the node $ObjectIdentity(0, cim:ConnectivityNode)
    and the power flow $ObjectIdentity(1, cim:SvPowerFlow)?
  - List all terminals connected to $ObjectIdentity(0, cim:ConnectivityNode) with
    power flow $ObjectIdentity(1, cim:SvPowerFlow).
  - Which terminal is associated with the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)
    and is related to the power flow $ObjectIdentity(1, cim:SvPowerFlow)?
  questions:
  - expected_steps:
    - - args:
          query: 'HASLE       '
        name: iri_discovery
        output: urn:uuid:f176960d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:b0400346-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400346-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f176960d-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400346-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:f176960d-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:b0400346-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903b4-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e348a882b2ba9ef7f60b7e7f11b0faa5
    nl_question: What terminals are linked to the node HASLE        and the power
      flow urn:uuid:b0400346-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f176960d-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:SvPowerFlow): urn:uuid:b0400346-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: f17695d7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695d7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:b040030c-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b040030c-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f17695d7-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.SvPowerFlow <urn:uuid:b040030c-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:f17695d7-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:b040030c-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90393-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_53897ba52f6a6fac5a0ee2a0d8034b2f
    nl_question: Which terminal is associated with the connectivity node f17695d7-9aeb-11e5-91da-b8763fd99c5f
      and is related to the power flow urn:uuid:b040030c-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17695d7-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:SvPowerFlow): urn:uuid:b040030c-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: 'GEILO       '
        name: iri_discovery
        output: urn:uuid:f176962f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:b0400340-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400340-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f176962f-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400340-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:f176962f-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:b0400340-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903e4-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_67b562eb0fb2d717ba06424ac7965cc4
    nl_question: List all terminals connected to GEILO        with power flow urn:uuid:b0400340-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f176962f-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:SvPowerFlow): urn:uuid:b0400340-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: f17695bd
        name: iri_discovery
        output: urn:uuid:f17695bd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:b0400360-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400360-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f17695bd-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400360-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:f17695bd-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:b0400360-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9036f-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_1eef6eb60d538cacbacf3841c9c86aa3
    nl_question: What terminals are linked to the node f17695bd and the power flow
      urn:uuid:b0400360-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f17695bd-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:SvPowerFlow): urn:uuid:b0400360-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: f1769669
        name: iri_discovery
        output: urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: urn:uuid:b0400385-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400385-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode <urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:Terminal.SvPowerFlow <urn:uuid:b0400385-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            <urn:uuid:b0400385-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903f4-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_c4d85e8ad2809923799500e2811337e9
    nl_question: List all terminals connected to f1769669 with power flow urn:uuid:b0400385-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:SvPowerFlow): urn:uuid:b0400385-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.ConnectivityNode {$ObjectIdentity(0, cim:ConnectivityNode)} ;

    cim:Terminal.SvPowerFlow {$ObjectIdentity(1, cim:SvPowerFlow)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .

    {$ObjectIdentity(1, cim:SvPowerFlow)} a cim:SvPowerFlow ;

    .'
  template_id: template_list_df66688dd7b59b600f2bc1c4082d36ec
- description: A graph pattern which lists all values for terminal limited by parameters
    for regulatingcontrol (https://cim.ucaiug.io/ns#Terminal.RegulatingControl), svpowerflow
    (https://cim.ucaiug.io/ns#Terminal.SvPowerFlow) and by filter properties none.
  filters: []
  name: List terminal by parameters regulatingcontrol, svpowerflow and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.RegulatingControl
    type: https://cim.ucaiug.io/ns#RegulatingControl
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    type: https://cim.ucaiug.io/ns#SvPowerFlow
  paraphrases:
  - Which terminal is associated with $ObjectIdentity(0, cim:RegulatingControl) and
    $ObjectIdentity(1, cim:SvPowerFlow)?
  - Identify the terminal linked to $ObjectIdentity(0, cim:RegulatingControl) and
    $ObjectIdentity(1, cim:SvPowerFlow).
  - What terminal is regulated by $ObjectIdentity(0, cim:RegulatingControl) and has
    a power flow state of $ObjectIdentity(1, cim:SvPowerFlow)?
  - List the terminal connected to regulating control $ObjectIdentity(0, cim:RegulatingControl)
    and power flow $ObjectIdentity(1, cim:SvPowerFlow).
  - Find the terminal associated with regulating control $ObjectIdentity(0, cim:RegulatingControl)
    and state variable power flow $ObjectIdentity(1, cim:SvPowerFlow).
  questions: []
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.RegulatingControl {$ObjectIdentity(0, cim:RegulatingControl)} ;

    cim:Terminal.SvPowerFlow {$ObjectIdentity(1, cim:SvPowerFlow)} .

    {$ObjectIdentity(0, cim:RegulatingControl)} a cim:RegulatingControl ;

    .

    {$ObjectIdentity(1, cim:SvPowerFlow)} a cim:SvPowerFlow ;

    .'
  template_id: template_list_2830872e2c907af4a3eef344ad41f7d2
- description: A graph pattern which lists all values for terminal limited by parameters
    for connectivitynodecontainer (https://cim.ucaiug.io/ns#Terminal.ConnectivityNode,
    https://cim.ucaiug.io/ns#ConnectivityNode.ConnectivityNodeContainer) and by filter
    properties none.
  filters: []
  name: List terminal by parameters connectivitynodecontainer and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    - https://cim.ucaiug.io/ns#ConnectivityNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which terminals are connected to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - List all terminals associated with the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer).
  - What terminals are linked to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - Identify the terminals that belong to $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What are the terminals associated with the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  questions:
  - expected_steps:
    - - args:
          query: f176962c
        name: iri_discovery
        output: urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90459-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e1-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_dad155f8cb3ed4b3c1ee7b845df66d0f
    nl_question: What are the terminals associated with the connectivity node container
      f176962c?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: PORJUS  420
        name: iri_discovery
        output: urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9037e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90384-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90387-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90265-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90268-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90262-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90162-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90381-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2d4dcc0ac55a35908f576194380063dc
    nl_question: Identify the terminals that belong to PORJUS  420.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176964a
        name: iri_discovery
        output: urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90467-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_4415a6d7ddf552ffbc373ebdf42b340b
    nl_question: List all terminals associated with the connectivity node container
      f176964a.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769632
        name: iri_discovery
        output: urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903c7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90188-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903dc-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_dae0bc07ccaceacf24e2a78ed38e1716
    nl_question: Which terminals are connected to the connectivity node container
      f1769632?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TENHULT 420
        name: iri_discovery
        output: urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90166-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90370-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90373-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90390-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_97250c69a02509af3e18be2c16619f31
    nl_question: Which terminals are connected to the connectivity node container
      TENHULT 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer {$ObjectIdentity(0,
    cim:ConnectivityNodeContainer)} .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_d5e97f909c1a44f1cdc015dede20b34a
- description: A graph pattern which lists all values for terminal limited by parameters
    for terminal (https://cim.ucaiug.io/ns#Terminal.ConnectivityNode, https://cim.ucaiug.io/ns#ConnectivityNode.Terminals)
    and by filter properties none.
  filters: []
  name: List terminal by parameters terminal and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    - https://cim.ucaiug.io/ns#ConnectivityNode.Terminals
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:Terminal)?
  - Identify the terminals linked through the connectivity node of $ObjectIdentity(0,
    cim:Terminal).
  - What terminals share a connectivity node with $ObjectIdentity(0, cim:Terminal)?
  - List all terminals connected via the same connectivity node as $ObjectIdentity(0,
    cim:Terminal).
  - Which terminals are associated with the same node as $ObjectIdentity(0, cim:Terminal)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd903a5-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.Terminals <urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_94eb9a27a611cebc317e0217d6dcafcb
    nl_question: Identify the terminals linked through the connectivity node of 2dd903a5-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.Terminals <urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2ef7a2e70b77aa0294fa5c8f6c39e1e7
    nl_question: List all terminals connected via the same connectivity node as T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901cc
        name: iri_discovery
        output: urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.Terminals <urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90363-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90258-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90357-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90366-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90360-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f3bd3a2f28cec925479d36bbbfbe90e0
    nl_question: Which terminals are associated with the same node as 2dd901cc?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90447
        name: iri_discovery
        output: urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.Terminals <urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_747093cdc7ac486502385b5bbfe7e1c2
    nl_question: Identify the terminals linked through the connectivity node of 2dd90447.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90336-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.Terminals <urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9032a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90330-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90232-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90423-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90321-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90223-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90429-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90229-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90426-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90339-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90333-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90226-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90324-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_c6c7f395eb6110c3d0f93b31d2aa66da
    nl_question: Which terminals are associated with the same node as 2dd90336-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.ConnectivityNode/cim:ConnectivityNode.Terminals {$ObjectIdentity(0,
    cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_d737d6bf367efa5362aa4dffd40eeeaa
- description: A graph pattern which lists all values for terminal limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#Terminal.ConnectivityNode, https://cim.ucaiug.io/ns#ConnectivityNode.TopologicalNode)
    and by filter properties none.
  filters: []
  name: List terminal by parameters topologicalnode and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    - https://cim.ucaiug.io/ns#ConnectivityNode.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which terminals are connected to the topological node $ObjectIdentity(0, cim:TopologicalNode)?
  - What are the terminals associated with $ObjectIdentity(0, cim:TopologicalNode)?
  - List all terminals connected to the topological node $ObjectIdentity(0, cim:TopologicalNode).
  - Identify the terminals linked to $ObjectIdentity(0, cim:TopologicalNode).
  - What terminals are part of the topological node $ObjectIdentity(0, cim:TopologicalNode)?
  questions:
  - expected_steps:
    - - args:
          query: KARLSH_HVDC
        name: iri_discovery
        output: urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode <urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90253-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_90c4d2f5a3b08385275ac8423593d970
    nl_question: What terminals are part of the topological node KARLSH_HVDC?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIANSAND
        name: iri_discovery
        output: urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode <urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:71d09d39-a080-5d4f-86f3-7b3185e51b8e"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ecfaf384-4581-4249-8646-b5d31943ad61"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_4b8c45bfc14a82bad3b39f523d5da282
    nl_question: What terminals are part of the topological node KRISTIANSAND?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: 47eb7c32
        name: iri_discovery
        output: urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode <urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:40725e5a-33bf-6046-8d11-da19f9c726b4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:40c8340e-7ccf-d446-8a6b-bffa19ec88e6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:5831696b-e9e1-8e4a-a169-0e4e09f15f1f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0dae5d37-4d01-3645-9e94-607410c5ac34"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ea014fdb-b96f-2a4b-b1df-d38e846d4941"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:f723530d-ae1e-df4f-9c7f-21e42da147d6"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:692809cf-1bb4-8642-9b70-ee677f063304"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8d35b51b-06bd-7541-b3e6-2ddbbb1204fe"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:79887cf1-6c94-3f4f-a1f8-7ddef866d55f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:d7a472cc-6b91-564d-93b4-0f3c24f2342c"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:d92cb2eb-fd81-194c-9e43-618df025d6b4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_fe7a285da565a7aa546b2d0efaec6902
    nl_question: What are the terminals associated with 47eb7c32?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: KRISTIANSAND
        name: iri_discovery
        output: urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode <urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:ad37e24a-9993-4f45-80ed-49a80b6a85d9"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:0a122f63-f2c6-ca43-be49-76571474d98c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_a49045618877c705a493485e977d7854
    nl_question: List all terminals connected to the topological node KRISTIANSAND.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: f176968f
        name: iri_discovery
        output: urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode <urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90300-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020b-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_c8da0b78784b1a1cf302804db61c9f4b
    nl_question: List all terminals connected to the topological node f176968f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode {$ObjectIdentity(0,
    cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_c649aab397181e375acbe73fd709b968
- description: A graph pattern which lists all values for terminal limited by parameters
    for topologicalisland (https://cim.ucaiug.io/ns#Terminal.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland)
    and by filter properties none.
  filters: []
  name: List terminal by parameters topologicalisland and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which terminals are part of the topological island $ObjectIdentity(0, cim:TopologicalIsland)?
  - Identify all terminals associated with the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - List the terminals contained within the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - What terminals belong to the topological island $ObjectIdentity(0, cim:TopologicalIsland)?
  - Find terminals connected to the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  questions:
  - expected_steps:
    - - args:
          query: b04002c8
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.AngleRefTopologicalIsland
            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90399-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90292-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90367-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90298-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90364-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90295-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901de-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_c47c01478d8db7e911b5cd409f4e134f
    nl_question: Find terminals connected to the topological island b04002c8.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.AngleRefTopologicalIsland {$ObjectIdentity(0,
    cim:TopologicalIsland)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_d5ffd430362c129d566d4def2e156f64
- description: A graph pattern which lists all values for terminal limited by parameters
    for basevoltage (https://cim.ucaiug.io/ns#Terminal.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage)
    and by filter properties none.
  filters: []
  name: List terminal by parameters basevoltage and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which terminals are connected to the topological nodes with base voltage $ObjectIdentity(0,
    cim:BaseVoltage)?
  - List the terminals associated with topological nodes having base voltage $ObjectIdentity(0,
    cim:BaseVoltage).
  - What terminals are linked through topological nodes with base voltage $ObjectIdentity(0,
    cim:BaseVoltage)?
  - Identify the terminals connected to nodes where the base voltage is $ObjectIdentity(0,
    cim:BaseVoltage).
  - Provide the terminals associated with topological nodes of base voltage $ObjectIdentity(0,
    cim:BaseVoltage).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9037b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90369-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9015e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90375-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90378-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903df-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90247-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90244-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90353-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90350-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90432-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90347-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90356-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90459-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ca-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90483-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90475-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90400-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90343-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901bc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90340-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90430-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90388-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9023e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90241-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9023b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9033d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90397-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90467-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903cd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9017e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90330-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90232-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90423-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90321-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90223-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90429-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90229-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90426-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90339-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90333-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90226-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90324-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90384-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90387-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90265-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90268-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90262-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90162-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90381-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:02b41435-bd3e-bb4b-9b89-24e3a8983c0f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9046e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903bb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90194-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9043d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90272-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90361-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9017c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ba-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9044e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90166-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90370-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90373-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90390-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90427-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90238-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90399-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90292-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90367-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90298-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90364-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90295-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90182-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90460-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90253-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9048a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90220-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90235-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90424-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9015c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90358-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90250-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90433-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90363-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90258-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90357-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90366-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90360-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:669c1d0c-87dd-a943-9316-88308bd36f15"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90188-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903dc-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_6134d22f54bf0bb3264c04bc5b069348
    nl_question: List the terminals associated with topological nodes having base
      voltage 2dd90159-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90412-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90208-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90418-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90205-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:ea014fdb-b96f-2a4b-b1df-d38e846d4941"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90463-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90409-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90417-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90403-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90478-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90421-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90486-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ac-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90317-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90314-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90300-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90393-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90168-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90439-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90415-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ee-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90202-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902dd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90411-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9046a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90192-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90406-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903eb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903af-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90402-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90471-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90452-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90178-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90440-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9030d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90420-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9030a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90310-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901aa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90217-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90214-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90211-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90307-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90394-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902bf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90184-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902bc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90455-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:8f8094c3-5c43-1241-9014-6c7a3ae10213"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e4edb24e3d8641cd5391d3f7dfedb0b0
    nl_question: What terminals are linked through topological nodes with base voltage
      2dd90169?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9044b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90173-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ed-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_b86400a040bc6ea7235ee5f0ef48ca55
    nl_question: Identify the terminals connected to nodes where the base voltage
      is 2dd90174-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.BaseVoltage {$ObjectIdentity(0,
    cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_042d9f6cbc1dc6331fbc65d121dcfc57
- description: A graph pattern which lists all values for terminal limited by parameters
    for connectivitynodecontainer (https://cim.ucaiug.io/ns#Terminal.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer) and by filter
    properties none.
  filters: []
  name: List terminal by parameters connectivitynodecontainer and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which terminals belong to the connectivity node container $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  - Identify the terminals associated with $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What terminals are connected to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - List all terminals linked to $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What are the terminals within the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  questions:
  - expected_steps:
    - - args:
          query: f17695e7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f5c247c3c1bc29eff4e61942be2bcdc9
    nl_question: Identify the terminals associated with f17695e7-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f9
        name: iri_discovery
        output: urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9044b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90173-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ed-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_9a8f28b8225303e2fb4bd90bd7927a78
    nl_question: What are the terminals within the connectivity node container f17695f9?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90166-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90370-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90373-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90390-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_5e9f6529ec47c7ad746028a42b2162ac
    nl_question: Which terminals belong to the connectivity node container f17695d4-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176963e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90463-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ed-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_21ee563492d86dd66153bf8658399aec
    nl_question: Identify the terminals associated with f176963e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRETTEN 300
        name: iri_discovery
        output: urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90452-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90178-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_692de670d2d75e3f0b5362247d6c6f6e
    nl_question: List all terminals linked to TRETTEN 300.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer {$ObjectIdentity(0,
    cim:ConnectivityNodeContainer)} .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_7df44b10a210fa413bf88be8c5c1abf7
- description: A graph pattern which lists all values for terminal limited by parameters
    for connectivitynode (https://cim.ucaiug.io/ns#Terminal.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes)
    and by filter properties none.
  filters: []
  name: List terminal by parameters connectivitynode and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:ConnectivityNode)?
  - List all terminals associated with $ObjectIdentity(0, cim:ConnectivityNode).
  - What terminals are linked to the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)?
  - Identify the terminals connected to the connectivity node $ObjectIdentity(0, cim:ConnectivityNode).
  - Provide details of terminals that are associated with $ObjectIdentity(0, cim:ConnectivityNode).
  questions:
  - expected_steps:
    - - args:
          query: f1769669
        name: iri_discovery
        output: urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodes <urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903f4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:02b41435-bd3e-bb4b-9b89-24e3a8983c0f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_f3bb3ea2e637134b782737bb8faac675
    nl_question: List all terminals associated with f1769669.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769669-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769663-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodes <urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9040c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90471-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019a-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_54179d2c93a933b3e00ee570dedec098
    nl_question: What terminals are linked to the connectivity node f1769663-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769663-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: cd874389
        name: iri_discovery
        output: urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodes <urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4>
            .

            <urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90202-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902dd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90411-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e6-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_d82f050f43bd3db691428e9fe8233b1a
    nl_question: List all terminals associated with cd874389.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4
  - expected_steps:
    - - args:
          query: f176961d-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176961d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodes <urn:uuid:f176961d-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176961d-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90182-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d2-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_3f8f109c6dc3742b228ab5760c1b79c1
    nl_question: List all terminals associated with f176961d-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f176961d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIAN CN 013
        name: iri_discovery
        output: urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodes <urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127>
            .

            <urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90202-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902dd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90411-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e6-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_4799426351e65598cdc25bc7ac358c40
    nl_question: Provide details of terminals that are associated with KRISTIAN CN
      013.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.ConnectivityNodes {$ObjectIdentity(0,
    cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_1383bef003b67a2ad10c1b7e991ba674
- description: A graph pattern which lists all values for terminal limited by parameters
    for svvoltage (https://cim.ucaiug.io/ns#Terminal.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage)
    and by filter properties none.
  filters: []
  name: List terminal by parameters svvoltage and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage
    type: https://cim.ucaiug.io/ns#SvVoltage
  paraphrases:
  - Which terminal is associated with $ObjectIdentity(0, cim:SvVoltage)?
  - Identify the terminal connected to the topological node with $ObjectIdentity(0,
    cim:SvVoltage).
  - What terminal corresponds to the topological node having $ObjectIdentity(0, cim:SvVoltage)?
  - List terminals linked to $ObjectIdentity(0, cim:SvVoltage) through their topological
    node.
  - What is the terminal associated with the specific $ObjectIdentity(0, cim:SvVoltage)?
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90427-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90238-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e9ab34ebbb52a90f86770eba3807cec1
    nl_question: List terminals linked to urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
      through their topological node.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90421-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90486-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ac-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90317-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90314-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_2df1aec3e631b8deec6a6b6ce378570e
    nl_question: What terminal corresponds to the topological node having urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002da-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002da-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002da-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002da-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90363-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90258-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90357-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90366-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90360-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_99d8ac7181318068b9fa92114b2edce5
    nl_question: Which terminal is associated with urn:uuid:b04002da-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002da-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002d1-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002d1-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002d1-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002d1-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90250-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90433-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_7cf14bc4a268e2900f8400c4a4778ee5
    nl_question: What terminal corresponds to the topological node having urn:uuid:b04002d1-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002d1-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002e6-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002e6-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002e6-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002e6-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90202-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902dd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90411-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e6-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_669c6fc3471a6fc3e7883bb5af359965
    nl_question: Which terminal is associated with urn:uuid:b04002e6-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002e6-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.SvVoltage {$ObjectIdentity(0,
    cim:SvVoltage)} .

    {$ObjectIdentity(0, cim:SvVoltage)} a cim:SvVoltage ;

    .'
  template_id: template_list_63cb34320e3850b78783ee5b0fe98897
- description: A graph pattern which lists all values for terminal limited by parameters
    for terminal (https://cim.ucaiug.io/ns#Terminal.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.Terminal)
    and by filter properties none.
  filters: []
  name: List terminal by parameters terminal and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which terminals are connected to the same topological node as $ObjectIdentity(0,
    cim:Terminal)?
  - Identify the terminals that share a topological node with $ObjectIdentity(0, cim:Terminal).
  - What terminals have connections to the same topological node as $ObjectIdentity(0,
    cim:Terminal)?
  - List all terminals associated with the topological node of $ObjectIdentity(0,
    cim:Terminal).
  - Which other terminals are linked through the topological node of $ObjectIdentity(0,
    cim:Terminal)?
  questions:
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_dc430ba8f0a2890a67ad4a79bd8dad29
    nl_question: Identify the terminals that share a topological node with T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9032a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90330-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90232-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90423-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90321-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90223-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90429-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90229-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90426-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90339-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90333-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90226-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90324-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_3f7325510ce58c4824046aa9d72aca8b
    nl_question: What terminals have connections to the same topological node as T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T2
        name: iri_discovery
        output: urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90247-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90244-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90353-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90350-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90432-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90347-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90356-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_e92db298e340f60311a8baf5abe58876
    nl_question: List all terminals associated with the topological node of T2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90382-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_1de529b49dec083eec969e8c95fcb19d
    nl_question: List all terminals associated with the topological node of 2dd90382-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903a2-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_449500c22227a843d66d012827b49130
    nl_question: List all terminals associated with the topological node of 2dd903a2-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.Terminal {$ObjectIdentity(0,
    cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_88f000917e297d4b0ba981877bd4159f
- description: A graph pattern which lists all values for terminal limited by parameters
    for topologicalisland (https://cim.ucaiug.io/ns#Terminal.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland)
    and by filter properties none.
  filters: []
  name: List terminal by parameters topologicalisland and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:TopologicalIsland)?
  - List all terminals in the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  - Identify terminals that belong to $ObjectIdentity(0, cim:TopologicalIsland).
  - What terminals are associated with $ObjectIdentity(0, cim:TopologicalIsland)?
  - Provide the terminals connected to the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  questions:
  - expected_steps:
    - - args:
          query: OSKARSHAMN
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.TopologicalNode/cim:TopologicalNode.TopologicalIsland <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90412-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90208-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90369-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9015e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90375-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90378-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90418-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90205-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903df-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90247-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90244-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90353-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90350-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90432-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90347-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9034a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9024d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90356-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90459-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ca-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90483-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90475-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90400-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90343-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901bc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90340-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90430-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90388-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9023e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90241-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9023b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9033d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90397-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90467-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903cd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9017e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90463-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90330-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90232-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90423-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90321-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90223-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90336-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90429-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90229-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90426-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9042f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90339-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9032d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90333-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90327-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90226-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9022f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90324-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90409-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90417-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90403-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90478-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90384-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90387-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90265-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9026b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90268-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90262-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90162-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90381-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9044b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90173-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:02b41435-bd3e-bb4b-9b89-24e3a8983c0f"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9046e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903bb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90194-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90421-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90486-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ac-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90317-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9031d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90314-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9043d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90272-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9037f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90361-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90300-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902fd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9020b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9017c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ba-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903a0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9044e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903be-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90166-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90370-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90373-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9036d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90390-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90427-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90238-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90393-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90168-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90439-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ea-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90415-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ee-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902ed-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901a4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90399-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901db-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90292-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90367-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90298-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9039c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9038b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9029e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90364-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90295-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901de-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90196-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90202-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902dd-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90411-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901ff-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90414-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902e6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90182-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9046a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90192-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90406-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902d9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903eb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903af-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90402-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90282-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9028b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90276-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90444-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9016d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90285-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90396-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90382-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90288-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9027f-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90279-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9018e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903fa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90460-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90253-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90436-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9048a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90385-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9021d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90220-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9040c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90471-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9019a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90235-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90424-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9015c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90358-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90452-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b1-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f0-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902b5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ae-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90178-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90176-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903ab-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90440-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90250-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90433-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025b-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901cc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90363-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90258-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9035d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9025e-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90357-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90366-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90360-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901c9-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90156-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9041d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9030d-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90420-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9030a-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90310-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901aa-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90217-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90214-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90211-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903b2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90307-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90394-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c5-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902bf-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902cb-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902c2-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90184-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd902bc-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d8-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90455-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd901f3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:669c1d0c-87dd-a943-9316-88308bd36f15"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd9047c-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903c7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e4-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903e7-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd90188-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903d6-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"terminal": {"type": "uri", "value": "urn:uuid:2dd903dc-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_1150f5ee042eff451a1301fef5fb8f0f
    nl_question: Provide the terminals connected to the topological island OSKARSHAMN.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.TopologicalNode/cim:TopologicalNode.TopologicalIsland {$ObjectIdentity(0,
    cim:TopologicalIsland)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_f16d5093cf8ec9fb92cc06f1e6dca84e
- description: A graph pattern which lists all values for terminal limited by parameters
    for terminal (https://cim.ucaiug.io/ns#Terminal.SvPowerFlow, https://cim.ucaiug.io/ns#SvPowerFlow.Terminal)
    and by filter properties none.
  filters: []
  name: List terminal by parameters terminal and filters none
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    - https://cim.ucaiug.io/ns#SvPowerFlow.Terminal
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which terminals are connected to $ObjectIdentity(0, cim:Terminal) through power
    flow?
  - Identify the terminals that experience power flow with $ObjectIdentity(0, cim:Terminal).
  - What other terminals are linked via power flow to $ObjectIdentity(0, cim:Terminal)?
  - List all terminals that are part of the power flow involving $ObjectIdentity(0,
    cim:Terminal).
  - Which terminals are associated with the same power flow as $ObjectIdentity(0,
    cim:Terminal)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd902d6
        name: iri_discovery
        output: urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow/cim:SvPowerFlow.Terminal <urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_92faf6940fa0476fe97a5a9ec69ab1c4
    nl_question: Which terminals are associated with the same power flow as 2dd902d6?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd902d6-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901fc
        name: iri_discovery
        output: urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow/cim:SvPowerFlow.Terminal <urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_245062411433415769b28346f8fafd5b
    nl_question: What other terminals are linked via power flow to 2dd901fc?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd901fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9042c
        name: iri_discovery
        output: urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow/cim:SvPowerFlow.Terminal <urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_6b1587faa1566f5977b62494cf41a6e6
    nl_question: What other terminals are linked via power flow to 2dd9042c?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9042c-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90303-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow/cim:SvPowerFlow.Terminal <urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_b1d4ccb37eaea69f29b8d379f0555b13
    nl_question: Which terminals are connected to 2dd90303-bdfb-11e5-94fa-c8f73332c8f4
      through power flow?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90303-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903d3
        name: iri_discovery
        output: urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?terminal WHERE {

            ?terminal a cim:Terminal ;

            cim:Terminal.SvPowerFlow/cim:SvPowerFlow.Terminal <urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["terminal"]}, "results": {"bindings": [{"terminal":
          {"type": "uri", "value": "urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - terminal
    id: question_89cd71a0d2f93d1232358da161a9f041
    nl_question: List all terminals that are part of the power flow involving 2dd903d3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903d3-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?terminal a cim:Terminal ;

    cim:Terminal.SvPowerFlow/cim:SvPowerFlow.Terminal {$ObjectIdentity(0, cim:Terminal)}
    .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_b61eced1e23d140f8c1bcc42efbdf028
- description: A graph pattern which lists all values for terminal limited by parameters
    for none and by filter properties svpowerflow.p.
  filters:
  - property: https://cim.ucaiug.io/ns#SvPowerFlow.p
    subject: cim:Terminal
    type: xsd:float
  name: List terminal by parameters none and filters svpowerflow.p
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters: []
  paraphrases:
  - Which terminals have a power flow of $ValueFilter(cim:Terminal, cim:SvPowerFlow.p,
    xsd:float)?
  - List the terminals with a power flow of $ValueFilter(cim:Terminal, cim:SvPowerFlow.p,
    xsd:float).
  - What are the terminals where the power flow is $ValueFilter(cim:Terminal, cim:SvPowerFlow.p,
    xsd:float)?
  - Identify terminals with $ValueFilter(cim:Terminal, cim:SvPowerFlow.p, xsd:float)
    power flow.
  - Provide the terminals that show a power flow value of $ValueFilter(cim:Terminal,
    cim:SvPowerFlow.p, xsd:float).
  questions: []
  sparql_template: '?terminal a cim:Terminal ;

    cim:SvPowerFlow.p {$ValueFilter(cim:Terminal, cim:SvPowerFlow.p, xsd:float)} .'
  template_id: template_list_f8efc5e4d03625231258d5f1453876b0
- description: A graph pattern which lists all values for terminal limited by parameters
    for none and by filter properties svpowerflow.q.
  filters:
  - property: https://cim.ucaiug.io/ns#SvPowerFlow.q
    subject: cim:Terminal
    type: xsd:float
  name: List terminal by parameters none and filters svpowerflow.q
  outputs:
  - name: terminal
    type: cim:Terminal
  parameters: []
  paraphrases:
  - Which terminals have a reactive power flow of $ValueFilter(cim:Terminal, cim:SvPowerFlow.q,
    xsd:float)?
  - List the terminals with a reactive power flow value of $ValueFilter(cim:Terminal,
    cim:SvPowerFlow.q, xsd:float).
  - Identify terminals with reactive power flow equal to $ValueFilter(cim:Terminal,
    cim:SvPowerFlow.q, xsd:float).
  - What terminals correspond to the reactive power flow value of $ValueFilter(cim:Terminal,
    cim:SvPowerFlow.q, xsd:float)?
  - Provide the terminals having a reactive power flow of $ValueFilter(cim:Terminal,
    cim:SvPowerFlow.q, xsd:float).
  questions: []
  sparql_template: '?terminal a cim:Terminal ;

    cim:SvPowerFlow.q {$ValueFilter(cim:Terminal, cim:SvPowerFlow.q, xsd:float)} .'
  template_id: template_list_2bd3a15e1fdbacf2f9fb2fa552939f23
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for none and by filter properties none.
  filters: []
  name: List topologicalnode by parameters none and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters: []
  paraphrases:
  - What are all the topological nodes?
  - List all instances of topological nodes.
  - Can you provide a list of topological nodes?
  - What are the available topological nodes?
  - Identify all topological nodes in the dataset.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2c-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176962b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176963d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696af-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c28-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c31-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c34-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2d-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769683-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769643-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696a9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696d5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769625-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c25-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769631-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c30-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2e-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_846f9641d37a9fc2d48f388e15430690
    nl_question: List all instances of topological nodes.
    parameter_bindings: {}
  sparql_template: ?topologicalnode a cim:TopologicalNode .
  template_id: template_list_178d4c3e1c86b1228f7b40d1b513ffe1
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalisland (https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters topologicalisland and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which topological nodes belong to the angle reference topological island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  - Identify the topological nodes associated with the angle reference island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - What topological nodes are part of the angle reference island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  - List all topological nodes in the angle reference island $ObjectIdentity(0, cim:TopologicalIsland).
  - Which topological nodes are linked to the angle reference topological island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  questions:
  - expected_steps:
    - - args:
          query: b04002c8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.AngleRefTopologicalIsland <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_07f539b7bc73368d4e1b8a47b088071b
    nl_question: What topological nodes are part of the angle reference island b04002c8-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.AngleRefTopologicalIsland {$ObjectIdentity(0, cim:TopologicalIsland)}
    .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_8d853af72ace1248a23d2f368464bab4
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for basevoltage (https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters basevoltage and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which topological nodes are associated with the base voltage $ObjectIdentity(0,
    cim:BaseVoltage)?
  - List all topological nodes that have the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - What are the topological nodes connected to the base voltage $ObjectIdentity(0,
    cim:BaseVoltage)?
  - Identify the topological nodes linked with base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - Which topological nodes belong to the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2c-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176963d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c28-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c31-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c34-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2d-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769683-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769625-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c30-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2e-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_2a7b7bed83b9752e577898c4275a7c79
    nl_question: Identify the topological nodes linked with base voltage 2dd90169.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90159
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176962b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696af-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769643-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696a9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696d5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c25-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769631-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6dac9dbab9485502a5d4f135e8d35fdf
    nl_question: List all topological nodes that have the base voltage 2dd90159.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 135kV
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_57880e25ec929c87ca98a73a9c33b6b3
    nl_question: Which topological nodes belong to the base voltage 135kV?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.BaseVoltage {$ObjectIdentity(0, cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_b257fc87119928907b07ce70d3fbf90a
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for connectivitynodecontainer (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters connectivitynodecontainer and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which topological nodes belong to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - List all topological nodes associated with $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What are the topological nodes within the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - Identify the topological nodes that are part of $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What topological nodes are contained in the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  questions:
  - expected_steps:
    - - args:
          query: f17695da-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695d9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_2c056d6c9e9e664d6f877a53dd931f10
    nl_question: Which topological nodes belong to the connectivity node container
      f17695da-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695c4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_06e852b98a8628df7f466082c973cad3
    nl_question: What topological nodes are contained in the connectivity node container
      f17695c4-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARENDAL 300
        name: iri_discovery
        output: urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c28-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_ef08de10ae058f3548d1a4d1322dd249
    nl_question: What are the topological nodes within the connectivity node container
      ARENDAL 300?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SYSLE   420
        name: iri_discovery
        output: urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_9b3258d541af2cf5174509487e6fee9d
    nl_question: Identify the topological nodes that are part of SYSLE   420.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ed
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_36d506abe77db20ef5f4ffd3b5e4dd26
    nl_question: What topological nodes are contained in the connectivity node container
      f17695ed?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.ConnectivityNodeContainer {$ObjectIdentity(0, cim:ConnectivityNodeContainer)}
    .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_42a2c393e9a5030758b9eb5d0f545692
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for connectivitynode (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters connectivitynode and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - Which connectivity nodes belong to the topological node associated with $ObjectIdentity(0,
    cim:ConnectivityNode)?
  - Identify the topological node containing connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  - What topological node is associated with the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode)?
  - List all connectivity nodes within the topological node of $ObjectIdentity(0,
    cim:ConnectivityNode).
  - The connectivity node $ObjectIdentity(0, cim:ConnectivityNode) is part of which
    topological node?
  questions:
  - expected_steps:
    - - args:
          query: 802abb47
        name: iri_discovery
        output: urn:uuid:802abb47-d6be-d248-99a0-748dc8fa6c91
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes <urn:uuid:802abb47-d6be-d248-99a0-748dc8fa6c91>
            .

            <urn:uuid:802abb47-d6be-d248-99a0-748dc8fa6c91> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_8ca3f2415200bd6b0b3e62ab913538ad
    nl_question: Identify the topological node containing connectivity node 802abb47.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:802abb47-d6be-d248-99a0-748dc8fa6c91
  - expected_steps:
    - - args:
          query: cd874389-3b02-3e4a-895b-d40c055de5f4
        name: iri_discovery
        output: urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes <urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4>
            .

            <urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_e24927b72bf8fd4ae582aa37e0eda88c
    nl_question: Which connectivity nodes belong to the topological node associated
      with cd874389-3b02-3e4a-895b-d40c055de5f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:cd874389-3b02-3e4a-895b-d40c055de5f4
  - expected_steps:
    - - args:
          query: f1769635
        name: iri_discovery
        output: urn:uuid:f1769635-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes <urn:uuid:f1769635-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769635-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_99d7d3706861cf56c7e200b0c01db9a8
    nl_question: What topological node is associated with the connectivity node f1769635?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769635-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 2751922a-47e7-714b-a611-b90281f72c7e
        name: iri_discovery
        output: urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes <urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e>
            .

            <urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_731af8deb8867e0f66670877c182f73c
    nl_question: What topological node is associated with the connectivity node 2751922a-47e7-714b-a611-b90281f72c7e?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e
  - expected_steps:
    - - args:
          query: f1769629-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769629-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes <urn:uuid:f1769629-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769629-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176962b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_b3bff47b75023f1ecbbd7347f49a9ff3
    nl_question: What topological node is associated with the connectivity node f1769629-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769629-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.ConnectivityNodes {$ObjectIdentity(0, cim:ConnectivityNode)}
    .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_490af50f64a75af5a60ca6d87bd060ee
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for svvoltage (https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters svvoltage and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage
    type: https://cim.ucaiug.io/ns#SvVoltage
  paraphrases:
  - What topological nodes are associated with $ObjectIdentity(0, cim:SvVoltage)?
  - Identify the topological nodes linked to $ObjectIdentity(0, cim:SvVoltage).
  - Which topological nodes have the specified $ObjectIdentity(0, cim:SvVoltage)?
  - List the topological nodes connected to $ObjectIdentity(0, cim:SvVoltage).
  - What are the topological nodes related to $ObjectIdentity(0, cim:SvVoltage)?
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage <urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_e0bf25a0ad373b40283a13df7596dbe7
    nl_question: What topological nodes are associated with urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002d8-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage <urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_458bfcd59c2880e33d5fe16922fecc49
    nl_question: List the topological nodes connected to urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002ff-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002ff-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage <urn:uuid:b04002ff-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002ff-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_22926db04b101dd06c4660a0e0a93ed3
    nl_question: List the topological nodes connected to urn:uuid:b04002ff-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002ff-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b0400305-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400305-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage <urn:uuid:b0400305-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b0400305-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_37eff733b4102e70bdebb5efc69dfc0f
    nl_question: Which topological nodes have the specified urn:uuid:b0400305-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b0400305-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage <urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_f1d5418699f1bf655f9eddbf2111784d
    nl_question: Which topological nodes have the specified urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002f4-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.SvVoltage {$ObjectIdentity(0, cim:SvVoltage)} .

    {$ObjectIdentity(0, cim:SvVoltage)} a cim:SvVoltage ;

    .'
  template_id: template_list_e4aa4448af071e8ca621d69e02221db7
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for terminal (https://cim.ucaiug.io/ns#TopologicalNode.Terminal)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters terminal and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which topological node is connected to $ObjectIdentity(0, cim:Terminal)?
  - Identify the topological node associated with $ObjectIdentity(0, cim:Terminal).
  - What is the topological node linked to $ObjectIdentity(0, cim:Terminal)?
  - List the topological nodes connected to terminal $ObjectIdentity(0, cim:Terminal).
  - Find the topological node that has a connection to $ObjectIdentity(0, cim:Terminal).
  questions:
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal <urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_076ad08a15c3a56f839c827949f0b9a6
    nl_question: What is the topological node linked to T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9034d-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal <urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_9b2fbe0a819c9fa1307e0c7010b705d6
    nl_question: Which topological node is connected to T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal <urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_d4d04bd328be6e97efe4ae594d24b594
    nl_question: Identify the topological node associated with T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903ff-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd902a5-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal <urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_00a63570739ce02ace454f435318f4c5
    nl_question: Which topological node is connected to 2dd902a5-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd902a5-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal {$ObjectIdentity(0, cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_21b1b2066fb36e343d42034a916bf2ee
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalisland (https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters topologicalisland and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which topological nodes belong to $ObjectIdentity(0, cim:TopologicalIsland)?
  - List all topological nodes in the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  - What are the topological nodes associated with $ObjectIdentity(0, cim:TopologicalIsland)?
  - Identify the topological nodes that are part of $ObjectIdentity(0, cim:TopologicalIsland).
  - What topological nodes can be found in the topological island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  questions:
  - expected_steps:
    - - args:
          query: OSKARSHAMN
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.TopologicalIsland <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176962b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695f2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176963d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696af-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695f8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769683-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769643-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696a9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ff-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696d5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769625-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c25-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769631-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6f31815b6b3f3bbad1c6415aaf459f82
    nl_question: What topological nodes can be found in the topological island OSKARSHAMN?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.TopologicalIsland {$ObjectIdentity(0, cim:TopologicalIsland)}
    .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_b55729f7637bd1ff0061517e2d9196b9
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalisland (https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland),
    basevoltage (https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage) and by filter
    properties none.
  filters: []
  name: List topologicalnode by parameters topologicalisland, basevoltage and filters
    none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which topological nodes have the angle reference to the topological island $ObjectIdentity(0,
    cim:TopologicalIsland) and the base voltage $ObjectIdentity(1, cim:BaseVoltage)?
  - Identify the topological nodes with an angle reference to $ObjectIdentity(0, cim:TopologicalIsland)
    and an associated base voltage of $ObjectIdentity(1, cim:BaseVoltage).
  - List topological nodes connected to the topological island $ObjectIdentity(0,
    cim:TopologicalIsland) with the base voltage $ObjectIdentity(1, cim:BaseVoltage).
  - What are the topological nodes that reference $ObjectIdentity(0, cim:TopologicalIsland)
    and have base voltage $ObjectIdentity(1, cim:BaseVoltage)?
  - Provide all topological nodes related to the topological island $ObjectIdentity(0,
    cim:TopologicalIsland) and base voltage $ObjectIdentity(1, cim:BaseVoltage).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: b04002c8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.AngleRefTopologicalIsland <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191>
            ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_934466201bf70f0f7123a37b2d1c8cc9
    nl_question: Provide all topological nodes related to the topological island b04002c8-53a3-11e8-a5aa-74e5f963e191
      and base voltage 2dd90159-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
      $ObjectIdentity(1, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.AngleRefTopologicalIsland {$ObjectIdentity(0, cim:TopologicalIsland)}
    ;

    cim:TopologicalNode.BaseVoltage {$ObjectIdentity(1, cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .

    {$ObjectIdentity(1, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_d5c2ed042ca1465f35312ab171a09854
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalisland (https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland),
    connectivitynodecontainer (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters topologicalisland, connectivitynodecontainer
    and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which topological nodes in $ObjectIdentity(1, cim:ConnectivityNodeContainer) reference
    the topological island $ObjectIdentity(0, cim:TopologicalIsland) as their angle
    reference?
  - Identify the topological nodes in $ObjectIdentity(1, cim:ConnectivityNodeContainer)
    that have $ObjectIdentity(0, cim:TopologicalIsland) as their angle reference topological
    island.
  - What are the topological nodes within $ObjectIdentity(1, cim:ConnectivityNodeContainer)
    that use $ObjectIdentity(0, cim:TopologicalIsland) as their angle reference?
  - List all topological nodes in $ObjectIdentity(1, cim:ConnectivityNodeContainer)
    with $ObjectIdentity(0, cim:TopologicalIsland) as their angle reference island.
  - Which nodes in $ObjectIdentity(1, cim:ConnectivityNodeContainer) are associated
    with $ObjectIdentity(0, cim:TopologicalIsland) as their angle reference?
  questions:
  - expected_steps:
    - - args:
          query: OSKARSHA420
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: b04002c8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.AngleRefTopologicalIsland <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191>
            ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6c2fff2d463afe8f431b2047caa3952a
    nl_question: Which topological nodes in OSKARSHA420 reference the topological
      island b04002c8-53a3-11e8-a5aa-74e5f963e191 as their angle reference?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
      $ObjectIdentity(1, cim:ConnectivityNodeContainer): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.AngleRefTopologicalIsland {$ObjectIdentity(0, cim:TopologicalIsland)}
    ;

    cim:TopologicalNode.ConnectivityNodeContainer {$ObjectIdentity(1, cim:ConnectivityNodeContainer)}
    .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .

    {$ObjectIdentity(1, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_9dd642f9ee44ce65dc2af1779c9a066a
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for basevoltage (https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage),
    connectivitynodecontainer (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer)
    and by filter properties none.
  filters: []
  name: List topologicalnode by parameters basevoltage, connectivitynodecontainer
    and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which topological nodes have a base voltage of $ObjectIdentity(0, cim:BaseVoltage)
    and belong to $ObjectIdentity(1, cim:ConnectivityNodeContainer)?
  - Identify the topological nodes with base voltage $ObjectIdentity(0, cim:BaseVoltage)
    within $ObjectIdentity(1, cim:ConnectivityNodeContainer).
  - List all topological nodes that have the base voltage $ObjectIdentity(0, cim:BaseVoltage)
    and are part of $ObjectIdentity(1, cim:ConnectivityNodeContainer).
  - What are the topological nodes connected via base voltage $ObjectIdentity(0, cim:BaseVoltage)
    and are in $ObjectIdentity(1, cim:ConnectivityNodeContainer)?
  - Provide the topological nodes with their base voltage $ObjectIdentity(0, cim:BaseVoltage)
    found in $ObjectIdentity(1, cim:ConnectivityNodeContainer).
  questions:
  - expected_steps:
    - - args:
          query: f17695da
        name: iri_discovery
        output: urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 300kV
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695d9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_a85952d4f71a22f360ff0939a99b5c2a
    nl_question: Which topological nodes have a base voltage of 300kV and belong to
      f17695da?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:ConnectivityNodeContainer): urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ba
        name: iri_discovery
        output: urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 420kV
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_23b1f431530612310e600adcaf0a9e96
    nl_question: What are the topological nodes connected via base voltage 420kV and
      are in f17696ba?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:ConnectivityNodeContainer): urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769660-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 300kV
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2c-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c31-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c34-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2d-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c30-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2f-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2e-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_8eebfb2ad846cf3d138a769144050c00
    nl_question: Provide the topological nodes with their base voltage 300kV found
      in f1769660-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:ConnectivityNodeContainer): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769650-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 300kV
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_f1a3e97fd609094943d56cc060db8336
    nl_question: What are the topological nodes connected via base voltage 300kV and
      are in f1769650-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:ConnectivityNodeContainer): urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176966c
        name: iri_discovery
        output: urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:TopologicalNode.ConnectivityNodeContainer <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_34855a5b1390c07cef5284bcced536c3
    nl_question: Identify the topological nodes with base voltage 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      within f176966c.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:ConnectivityNodeContainer): urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.BaseVoltage {$ObjectIdentity(0, cim:BaseVoltage)} ;

    cim:TopologicalNode.ConnectivityNodeContainer {$ObjectIdentity(1, cim:ConnectivityNodeContainer)}
    .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .

    {$ObjectIdentity(1, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_b9244575207f21287ace2abeee4b87c0
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for connectivitynode (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/ns#Terminal.ConnectivityNode) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters connectivitynode and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - Which topological nodes are connected through the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode)?
  - List all topological nodes associated with the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  - What topological nodes are linked to the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode)?
  - Identify the topological nodes that share the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  - Which topological nodes are related to the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode)?
  questions:
  - expected_steps:
    - - args:
          query: 3c9ed587-6983-374e-a74d-83d4f7d7f649
        name: iri_discovery
        output: urn:uuid:3c9ed587-6983-374e-a74d-83d4f7d7f649
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.ConnectivityNode <urn:uuid:3c9ed587-6983-374e-a74d-83d4f7d7f649>
            .

            <urn:uuid:3c9ed587-6983-374e-a74d-83d4f7d7f649> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_b2431e0353bca55819cbca88f8e23667
    nl_question: List all topological nodes associated with the connectivity node
      3c9ed587-6983-374e-a74d-83d4f7d7f649.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:3c9ed587-6983-374e-a74d-83d4f7d7f649
  - expected_steps:
    - - args:
          query: 56c7aad0-b73d-714f-8904-cb156a912127
        name: iri_discovery
        output: urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.ConnectivityNode <urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127>
            .

            <urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_58065202cec834dd25187fb1e143f011
    nl_question: List all topological nodes associated with the connectivity node
      56c7aad0-b73d-714f-8904-cb156a912127.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:56c7aad0-b73d-714f-8904-cb156a912127
  - expected_steps:
    - - args:
          query: ARENDAL CN 006
        name: iri_discovery
        output: urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.ConnectivityNode <urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4>
            .

            <urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_d1c2fb39322e452f758acdf3b703552d
    nl_question: Which topological nodes are related to the connectivity node ARENDAL
      CN 006?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:6d29661c-f61d-2d41-bf87-4f8956ddd2a4
  - expected_steps:
    - - args:
          query: ARENDAL CN 015
        name: iri_discovery
        output: urn:uuid:cb837454-5c66-d341-be63-d0c044e5fd3c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.ConnectivityNode <urn:uuid:cb837454-5c66-d341-be63-d0c044e5fd3c>
            .

            <urn:uuid:cb837454-5c66-d341-be63-d0c044e5fd3c> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c25-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_311dda67fe8224252747591d58ec19a0
    nl_question: Which topological nodes are related to the connectivity node ARENDAL
      CN 015?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:cb837454-5c66-d341-be63-d0c044e5fd3c
  - expected_steps:
    - - args:
          query: d5ea472c-af76-584c-8a65-a5b8317877f0
        name: iri_discovery
        output: urn:uuid:d5ea472c-af76-584c-8a65-a5b8317877f0
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.ConnectivityNode <urn:uuid:d5ea472c-af76-584c-8a65-a5b8317877f0>
            .

            <urn:uuid:d5ea472c-af76-584c-8a65-a5b8317877f0> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_8cce4a085a8d02d2522eab41112a8522
    nl_question: Which topological nodes are related to the connectivity node d5ea472c-af76-584c-8a65-a5b8317877f0?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:d5ea472c-af76-584c-8a65-a5b8317877f0
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cim:Terminal.ConnectivityNode {$ObjectIdentity(0,
    cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_c49ee8aa816cd7f392eaa2a68d73fa93
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for regulatingcontrol (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/ns#Terminal.RegulatingControl) and by filter properties
    none.
  filters: []
  name: List topologicalnode by parameters regulatingcontrol and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/ns#Terminal.RegulatingControl
    type: https://cim.ucaiug.io/ns#RegulatingControl
  paraphrases:
  - Which topological nodes are associated with the regulating control $ObjectIdentity(0,
    cim:RegulatingControl)?
  - Identify the topological nodes controlled by $ObjectIdentity(0, cim:RegulatingControl).
  - What topological nodes are linked to the regulating control $ObjectIdentity(0,
    cim:RegulatingControl)?
  - List all topological nodes influenced by $ObjectIdentity(0, cim:RegulatingControl).
  - Which topological nodes are connected to the regulating control $ObjectIdentity(0,
    cim:RegulatingControl)?
  questions:
  - expected_steps:
    - - args:
          query: FORSMARK420 RC1
        name: iri_discovery
        output: urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.RegulatingControl <urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_0a210abd0335fe7fe190131652fc7c3b
    nl_question: List all topological nodes influenced by FORSMARK420 RC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769803-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769946
        name: iri_discovery
        output: urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.RegulatingControl <urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769683-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_0add62bb24b838ffdbe0d5f98bd11639
    nl_question: Which topological nodes are connected to the regulating control f1769946?
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f1769946-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MO      300 RC1
        name: iri_discovery
        output: urn:uuid:f176999e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.RegulatingControl <urn:uuid:f176999e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176999e-9aeb-11e5-91da-b8763fd99c5f> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_e963eaddd7221901d913c4c292dc02a6
    nl_question: List all topological nodes influenced by MO      300 RC1.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:f176999e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 2dd90466
        name: iri_discovery
        output: urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.RegulatingControl <urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_69b27dabee3ed16d755f621d462a4754
    nl_question: List all topological nodes influenced by 2dd90466.
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:2dd90466-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9044a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9044a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.RegulatingControl <urn:uuid:2dd9044a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9044a-bdfb-11e5-94fa-c8f73332c8f4> a cim:RegulatingControl
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_70b93af306366d8bd8d02f998826b5c4
    nl_question: Which topological nodes are associated with the regulating control
      2dd9044a-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:RegulatingControl): urn:uuid:2dd9044a-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cim:Terminal.RegulatingControl {$ObjectIdentity(0,
    cim:RegulatingControl)} .

    {$ObjectIdentity(0, cim:RegulatingControl)} a cim:RegulatingControl ;

    .'
  template_id: template_list_03a32c69609b607318df337f861d3094
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for svpowerflow (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/ns#Terminal.SvPowerFlow) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters svpowerflow and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    type: https://cim.ucaiug.io/ns#SvPowerFlow
  paraphrases:
  - Which topological nodes are associated with $ObjectIdentity(0, cim:SvPowerFlow)?
  - Identify the topological nodes connected to the power flow $ObjectIdentity(0,
    cim:SvPowerFlow).
  - What topological nodes have connections to $ObjectIdentity(0, cim:SvPowerFlow)?
  - List topological nodes linked to the power flow instance $ObjectIdentity(0, cim:SvPowerFlow).
  - Which topological nodes are related to the specific power flow $ObjectIdentity(0,
    cim:SvPowerFlow)?
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.SvPowerFlow <urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696af-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_098016eeba5fa94de39b75120d638942
    nl_question: What topological nodes have connections to urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b0400350-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04003e8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04003e8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.SvPowerFlow <urn:uuid:b04003e8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04003e8-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_f6c40e52cf6779322bb2d42266825e7a
    nl_question: Which topological nodes are associated with urn:uuid:b04003e8-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b04003e8-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04003e0-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04003e0-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.SvPowerFlow <urn:uuid:b04003e0-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04003e0-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_d5762c142e5ee9d0dfb6c31f1eee178c
    nl_question: Identify the topological nodes connected to the power flow urn:uuid:b04003e0-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b04003e0-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b0400401-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400401-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.SvPowerFlow <urn:uuid:b0400401-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b0400401-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_4d1129672969234ba5dc2c4ecd45cb08
    nl_question: What topological nodes have connections to urn:uuid:b0400401-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b0400401-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04003f8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04003f8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.SvPowerFlow <urn:uuid:b04003f8-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04003f8-53a3-11e8-a5aa-74e5f963e191> a cim:SvPowerFlow ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769625-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_481eca0c07f395880b886a74629796a3
    nl_question: List topological nodes linked to the power flow instance urn:uuid:b04003f8-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvPowerFlow): urn:uuid:b04003f8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cim:Terminal.SvPowerFlow {$ObjectIdentity(0, cim:SvPowerFlow)}
    .

    {$ObjectIdentity(0, cim:SvPowerFlow)} a cim:SvPowerFlow ;

    .'
  template_id: template_list_dc5a805499e6ba3432bb5f1562c37ed6
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalnode (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/ns#Terminal.TopologicalNode) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters topologicalnode and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:TopologicalNode)?
  - List the topological nodes that are associated with $ObjectIdentity(0, cim:TopologicalNode).
  - What topological nodes are linked to the node $ObjectIdentity(0, cim:TopologicalNode)?
  - Identify the topological nodes connected through terminals to $ObjectIdentity(0,
    cim:TopologicalNode).
  - What are the topological nodes directly connected to $ObjectIdentity(0, cim:TopologicalNode)?
  questions:
  - expected_steps:
    - - args:
          query: f1769615-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TopologicalNode <urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_a0ab7f0593ace508843766dc6dffe822
    nl_question: What topological nodes are linked to the node f1769615-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176968f-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TopologicalNode <urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_0c42fa2edce7bc7ff79b16c70f065d91
    nl_question: Which topological nodes are connected to f176968f-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696bf
        name: iri_discovery
        output: urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TopologicalNode <urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_5584d7164ee540db6d96507b71663fb3
    nl_question: What topological nodes are linked to the node f17696bf?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696c5-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TopologicalNode <urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6828fd699e0095382e949328f27c2215
    nl_question: What topological nodes are linked to the node f17696c5-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 47eb7c26-d0f6-11e7-9f7b-b46d83638f70
        name: iri_discovery
        output: urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TopologicalNode <urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_ab41215948b7e4575133714252ca4093
    nl_question: List the topological nodes that are associated with 47eb7c26-d0f6-11e7-9f7b-b46d83638f70.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cim:Terminal.TopologicalNode {$ObjectIdentity(0,
    cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_272d9d581df7763ac2eb4caf0fc98279
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for transformerend (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/ns#Terminal.TransformerEnd) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters transformerend and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/ns#Terminal.TransformerEnd
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - Which topological nodes are connected to the transformer end $ObjectIdentity(0,
    cim:TransformerEnd)?
  - Identify the topological nodes associated with $ObjectIdentity(0, cim:TransformerEnd).
  - What are the topological nodes linked through the transformer end $ObjectIdentity(0,
    cim:TransformerEnd)?
  - List the topological nodes that are connected to $ObjectIdentity(0, cim:TransformerEnd).
  - Find the topological nodes related to the transformer end $ObjectIdentity(0, cim:TransformerEnd).
  questions:
  - expected_steps:
    - - args:
          query: OSLO    T2 P
        name: iri_discovery
        output: urn:uuid:2dd90464-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TransformerEnd <urn:uuid:2dd90464-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90464-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176963d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_b4c1844f5b7fdc41bf3ce173819866a5
    nl_question: Which topological nodes are connected to the transformer end OSLO    T2
      P?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90464-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90456-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TransformerEnd <urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769625-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_5b1879d98c3dc8502f15de4af0f6b686
    nl_question: Find the topological nodes related to the transformer end 2dd90456-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90461-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TransformerEnd <urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769643-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_4828e415becf54f4c37c3722a66dd4a0
    nl_question: Find the topological nodes related to the transformer end 2dd90461-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90461-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: RINGHALST1 P
        name: iri_discovery
        output: urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TransformerEnd <urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_2aac052d77b39f2ed8aad3d0559dc56e
    nl_question: Which topological nodes are connected to the transformer end RINGHALST1
      P?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90448-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9046b
        name: iri_discovery
        output: urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cim:Terminal.TransformerEnd <urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_f3ed77bc9cdd5dbff7f9f7def49260ef
    nl_question: Identify the topological nodes associated with 2dd9046b.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cim:Terminal.TransformerEnd {$ObjectIdentity(0, cim:TransformerEnd)}
    .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_f9af92b9f9f330b65cbdfc3146255e12
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for pinterminal (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim4.eu/ns/nc#Terminal.PinTerminal) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters pinterminal and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim4.eu/ns/nc#Terminal.PinTerminal
    type: https://cim4.eu/ns/nc#PinTerminal
  paraphrases:
  - Which topological nodes have terminal connections to $ObjectIdentity(0, nc:PinTerminal)?
  - Identify the topological nodes connected via the terminal $ObjectIdentity(0, nc:PinTerminal).
  - What are the topological nodes linked to the pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  - List the topological nodes that are connected to $ObjectIdentity(0, nc:PinTerminal)
    through terminals.
  - Which topological nodes are associated with the terminal $ObjectIdentity(0, nc:PinTerminal)?
  questions:
  - expected_steps:
    - - args:
          query: 112e3335-caa5-44dd-85eb-3a258791e127
        name: iri_discovery
        output: urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/nc:Terminal.PinTerminal <urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127>
            .

            <urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_1adf5936d1114ff519e6070946937360
    nl_question: List the topological nodes that are connected to 112e3335-caa5-44dd-85eb-3a258791e127
      through terminals.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:112e3335-caa5-44dd-85eb-3a258791e127
  - expected_steps:
    - - args:
          query: 9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        name: iri_discovery
        output: urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/nc:Terminal.PinTerminal <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2>
            .

            <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c32-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_3711257ace1f69d6106f22ef341974db
    nl_question: Which topological nodes are associated with the terminal 9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2?
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
  - expected_steps:
    - - args:
          query: GP 300KRISTIAN-ARENDAL DIR
        name: iri_discovery
        output: urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/nc:Terminal.PinTerminal <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d>
            .

            <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_2776366babd2c2925de40b5b37527794
    nl_question: Identify the topological nodes connected via the terminal GP 300KRISTIAN-ARENDAL
      DIR.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
  - expected_steps:
    - - args:
          query: GP 300KRISTIAN-KVILLDAL DIR
        name: iri_discovery
        output: urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/nc:Terminal.PinTerminal <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31>
            .

            <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31> a nc:PinTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_aeed61d437a07c6ecd8c550bf9746a84
    nl_question: List the topological nodes that are connected to GP 300KRISTIAN-KVILLDAL
      DIR through terminals.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinTerminal): urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/nc:Terminal.PinTerminal {$ObjectIdentity(0, nc:PinTerminal)}
    .

    {$ObjectIdentity(0, nc:PinTerminal)} a nc:PinTerminal ;

    .'
  template_id: template_list_7f30e99ef4dc8df6e81c7d1444f1a6a1
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for synchronousmachine (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters synchronousmachine and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which topological nodes are connected to the terminal of $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the topological nodes associated with the terminal of $ObjectIdentity(0,
    cim:SynchronousMachine).
  - What topological nodes are linked through the terminal of $ObjectIdentity(0, cim:SynchronousMachine)?
  - List the topological nodes connected via the terminal of $ObjectIdentity(0, cim:SynchronousMachine).
  - Find all topological nodes associated with $ObjectIdentity(0, cim:SynchronousMachine)
    through its terminal.
  questions:
  - expected_steps:
    - - args:
          query: f17699a6
        name: iri_discovery
        output: urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_3b2e546f7e42f6f2558b83dba554bd95
    nl_question: Which topological nodes are connected to the terminal of f17699a6?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699a6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 M2
        name: iri_discovery
        output: urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_a3682aced813e8634399315d18b370c9
    nl_question: Find all topological nodes associated with MALMO   420 M2 through
      its terminal.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a19-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a27-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a27-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769a27-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a27-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_895238a73c9b641d5a811769b6f407ce
    nl_question: What topological nodes are linked through the terminal of f1769a27-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a27-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769818-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6c80f464d53261cdee5337215afe0952
    nl_question: What topological nodes are linked through the terminal of f1769818-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769818-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698bd
        name: iri_discovery
        output: urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f2-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_0b3f0e1d3cf1ab57a3c9974acc49b748
    nl_question: What topological nodes are linked through the terminal of f17698bd?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698bd-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:SynchronousMachine)}
    .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_371bd7271661509419f4d06f0bec77d4
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for aclinesegment (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters aclinesegment and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:ACLineSegment)?
  - Identify the topological nodes linked through terminals with $ObjectIdentity(0,
    cim:ACLineSegment).
  - What are the topological nodes associated with $ObjectIdentity(0, cim:ACLineSegment)
    via terminals?
  - List all topological nodes connected to $ObjectIdentity(0, cim:ACLineSegment)
    through terminals.
  - Find the topological nodes that are connected to $ObjectIdentity(0, cim:ACLineSegment).
  questions:
  - expected_steps:
    - - args:
          query: f1769d40-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769d40-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769d40-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d40-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696c5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17696af-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_214114b848f2246ca3e3ed776a60f262
    nl_question: List all topological nodes connected to f1769d40-9aeb-11e5-91da-b8763fd99c5f
      through terminals.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d40-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 300KRISTIAN-ARENDAL
        name: iri_discovery
        output: urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c24-d0f6-11e7-9f7b-b46d83638f70"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:47eb7c2a-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_3b4dd918268358477fc9de04746b1925
    nl_question: List all topological nodes connected to 300KRISTIAN-ARENDAL through
      terminals.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769cd4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d1c
        name: iri_discovery
        output: urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_47a1376b5d0925821aaf82919793afc7
    nl_question: List all topological nodes connected to f1769d1c through terminals.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d1c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 300TRONDHEIM-MO 1
        name: iri_discovery
        output: urn:uuid:f1769d10-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769d10-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d10-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_7843a554a0bd51a9d266351e24264c65
    nl_question: List all topological nodes connected to 300TRONDHEIM-MO 1 through
      terminals.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769d10-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769bea-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769631-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_5ee55143524b8b788c1c69f5b7334e98
    nl_question: Find the topological nodes that are connected to f1769bea-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:f1769bea-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:ACLineSegment)}
    .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_1e8852d76a24c0152b8eb864f309d2b9
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for breaker (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters breaker and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:Breaker)?
  - Identify the topological nodes associated with $ObjectIdentity(0, cim:Breaker).
  - What topological nodes are linked to $ObjectIdentity(0, cim:Breaker)?
  - List the topological nodes connected through $ObjectIdentity(0, cim:Breaker).
  - Find all the topological nodes that are connected to $ObjectIdentity(0, cim:Breaker).
  questions: []
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:Breaker)}
    .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_c29b3850e7b6bfff2b1d6e3b3b59c471
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for disconnector (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters disconnector and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:Disconnector)?
  - Identify the topological nodes associated with the disconnector $ObjectIdentity(0,
    cim:Disconnector).
  - List all topological nodes linked to $ObjectIdentity(0, cim:Disconnector).
  - What topological nodes does $ObjectIdentity(0, cim:Disconnector) connect to?
  - Find the topological nodes that are connected via $ObjectIdentity(0, cim:Disconnector).
  questions: []
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:Disconnector)}
    .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_6bb5f3bff998614a1bb110f3bc728066
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for powertransformer (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters powertransformer and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:PowerTransformer)?
  - List the topological nodes associated with $ObjectIdentity(0, cim:PowerTransformer).
  - What are the topological nodes linked to $ObjectIdentity(0, cim:PowerTransformer)?
  - Give me all topological nodes connected to $ObjectIdentity(0, cim:PowerTransformer).
  - Identify the topological nodes that are associated with $ObjectIdentity(0, cim:PowerTransformer).
  questions:
  - expected_steps:
    - - args:
          query: f1769dc4
        name: iri_discovery
        output: urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769625-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176962b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_492a34a318f133d665f246b481a4a992
    nl_question: Identify the topological nodes that are associated with f1769dc4.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HOGASEN T1
        name: iri_discovery
        output: urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f17695d9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_3eef770f038b10576082718ae93f197e
    nl_question: Identify the topological nodes that are associated with HOGASEN T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769d7c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: STAVANGET1
        name: iri_discovery
        output: urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_9ebe114b5fb0d8114160bc30ec7427b3
    nl_question: List the topological nodes associated with STAVANGET1.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769db2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_3934885a325ecead1d02c4d8d93f248d
    nl_question: What are the topological nodes linked to f1769db2-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769de8
        name: iri_discovery
        output: urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}},
          {"topologicalnode": {"type": "uri", "value": "urn:uuid:f176963d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_585aa2247f3b760aa4c24208e7ebbd73
    nl_question: Give me all topological nodes connected to f1769de8.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:PowerTransformer)}
    .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_b7e3c5708ee2f2036ab1bbe01d32b646
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for busbarsection (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters busbarsection and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which topological nodes are linked to $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the topological nodes associated with the busbar section $ObjectIdentity(0,
    cim:BusbarSection).
  - What topological nodes are connected to $ObjectIdentity(0, cim:BusbarSection)?
  - List all topological nodes related to $ObjectIdentity(0, cim:BusbarSection).
  - Which topological nodes are connected through terminals to $ObjectIdentity(0,
    cim:BusbarSection)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd9018f-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769649-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_9b917247aa1cfc06f8c80daf9248a227
    nl_question: Identify the topological nodes associated with the busbar section
      2dd9018f-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9018f-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9015b
        name: iri_discovery
        output: urn:uuid:2dd9015b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd9015b-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9015b-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_934b408ef1273a1d8210317cd3c13fa7
    nl_question: Identify the topological nodes associated with the busbar section
      2dd9015b.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9015b-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: b8666715
        name: iri_discovery
        output: urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5>
            .

            <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c26-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_240bcce633a36cb229e8369512c9557c
    nl_question: Which topological nodes are linked to b8666715?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
  - expected_steps:
    - - args:
          query: 2dd9016e
        name: iri_discovery
        output: urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_2e89482b6986a7dc08431fb7b0b1efa6
    nl_question: Identify the topological nodes associated with the busbar section
      2dd9016e.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9016e-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901a7-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_9e4a61841c25a9da7831b8c6d5cd26f2
    nl_question: Which topological nodes are connected through terminals to 2dd901a7-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a7-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:BusbarSection)}
    .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_00d9244d1d148bf532a31fa7221d4927
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for conformload (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters conformload and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the topological nodes where $ObjectIdentity(0, cim:ConformLoad) is connected.
  - List all topological nodes linked to $ObjectIdentity(0, cim:ConformLoad).
  - What topological nodes are associated with $ObjectIdentity(0, cim:ConformLoad)?
  - Find the topological nodes connected to the equipment $ObjectIdentity(0, cim:ConformLoad).
  questions:
  - expected_steps:
    - - args:
          query: f17697e8
        name: iri_discovery
        output: urn:uuid:f17697e8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f17697e8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697e8-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_b11f8af8c03d8df6407bf4d8f0d949e5
    nl_question: Identify the topological nodes where f17697e8 is connected.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697e8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: BLAFALLI300 L1
        name: iri_discovery
        output: urn:uuid:f176976a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f176976a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176976a-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176968f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_3a812fafadde6bf80c1dc5d73758e94a
    nl_question: What topological nodes are associated with BLAFALLI300 L1?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176976a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697ac-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697ac-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f17697ac-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697ac-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696af-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_cd4b20394febd320a660a0dacc546039
    nl_question: List all topological nodes linked to f17697ac-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697ac-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769740
        name: iri_discovery
        output: urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176963d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_4dd4b469d7f181a2dd21e10d175a61fa
    nl_question: What topological nodes are associated with f1769740?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769704-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_74155cec7a086758d72a29120712f021
    nl_question: Identify the topological nodes where f1769704-9aeb-11e5-91da-b8763fd99c5f
      is connected.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:ConformLoad)}
    .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_d30f3115d2adce2191a535ec0fb3ebc4
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for linearshuntcompensator (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters linearshuntcompensator and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the topological nodes linked to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What topological nodes have connections to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - List the topological nodes associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - Find all topological nodes connected through $ObjectIdentity(0, cim:LinearShuntCompensator).
  questions:
  - expected_steps:
    - - args:
          query: 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_af95fc542122066680156bb357a1157c
    nl_question: Find all topological nodes connected through 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: SYLLING 420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769643-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_576ed3192a51d72e46bf4e30e5f2fa7e
    nl_question: What topological nodes have connections to SYLLING 420 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_1b79e532ffcc4e1c41902b5eac7118a4
    nl_question: Identify the topological nodes linked to 2dd903bd-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: HAGAFOSS420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_d1716e82d9e2805959f4738b71a2de20
    nl_question: What topological nodes have connections to HAGAFOSS420 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_46ca567e9504dd025bf8d979c9182290
    nl_question: Find all topological nodes connected through 2dd903cc.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:LinearShuntCompensator)}
    .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_5644d66efa65f76a9eec1d174bb5b774
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for nonconformload (https://cim.ucaiug.io/ns#TopologicalNode.Terminal,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters nonconformload and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which topological nodes are connected to $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the topological nodes associated with $ObjectIdentity(0, cim:NonConformLoad).
  - List the topological nodes connected through terminals to $ObjectIdentity(0, cim:NonConformLoad).
  - What are the topological nodes linked to $ObjectIdentity(0, cim:NonConformLoad)
    via a terminal?
  - Give me all topological nodes that are connected to $ObjectIdentity(0, cim:NonConformLoad).
  questions:
  - expected_steps:
    - - args:
          query: KARLSH  420 L1
        name: iri_discovery
        output: urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696db-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_e47780d375f17e5fb773ca16789f3160
    nl_question: List the topological nodes connected through terminals to KARLSH  420
      L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIA 300 L1
        name: iri_discovery
        output: urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_7fb86c19bc5301d8c8c0ebd2e0275072
    nl_question: List the topological nodes connected through terminals to KRISTIA
      300 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: STEENKU 135 L1
        name: iri_discovery
        output: urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695f8-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_d92547529fdb95fe12e82cdd6bcc52c4
    nl_question: Give me all topological nodes that are connected to STEENKU 135 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769794
        name: iri_discovery
        output: urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696a9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_e6c0cbdae483d05056d92acd3ec90b62
    nl_question: Identify the topological nodes associated with f1769794.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f1769794-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696f2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.Terminal/cimr:Terminal.Equipment <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6afa566ecdf39fc4df6650a3e3c76d3e
    nl_question: Identify the topological nodes associated with f17696f2-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.Terminal/cimr:Terminal.Equipment {$ObjectIdentity(0, cim:NonConformLoad)}
    .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_3b50abfd0a20c31e3507d1a75fc0455b
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for connectivitynodecontainer (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes,
    https://cim.ucaiug.io/ns#ConnectivityNode.ConnectivityNodeContainer) and by filter
    properties none.
  filters: []
  name: List topologicalnode by parameters connectivitynodecontainer and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    - https://cim.ucaiug.io/ns#ConnectivityNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which topological nodes are connected through the connectivity node container
    $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  - Identify the topological nodes associated with the connectivity node container
    $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What topological nodes are linked via $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  - List all topological nodes connected to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer).
  - The connectivity node container $ObjectIdentity(0, cim:ConnectivityNodeContainer)
    is associated with which topological nodes?
  questions:
  - expected_steps:
    - - args:
          query: f17695e7
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695e6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_0141607ac0a955b60030316e805491ad
    nl_question: Identify the topological nodes associated with the connectivity node
      container f17695e7.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRONDHEI300
        name: iri_discovery
        output: urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769695-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_40ee2a3b5a77a354498fd33e01ea8850
    nl_question: The connectivity node container TRONDHEI300 is associated with which
      topological nodes?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSKARSHA420
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_4f0d2ef7788df16015024f461c7db16c
    nl_question: The connectivity node container OSKARSHA420 is associated with which
      topological nodes?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176968a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_00dd59dcb37f4cb5120121f356220ce6
    nl_question: Identify the topological nodes associated with the connectivity node
      container f176968a-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696a4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176969f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_af4e31de9019c49606731c70224f2903
    nl_question: List all topological nodes connected to the connectivity node container
      f17696a4-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_85a2abb5a76d95e2320283f51cefd9b7
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for terminal (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes,
    https://cim.ucaiug.io/ns#ConnectivityNode.Terminals) and by filter properties
    none.
  filters: []
  name: List topologicalnode by parameters terminal and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    - https://cim.ucaiug.io/ns#ConnectivityNode.Terminals
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which topological node is connected to $ObjectIdentity(0, cim:Terminal)?
  - Identify the topological node associated with $ObjectIdentity(0, cim:Terminal).
  - What is the topological node connected through $ObjectIdentity(0, cim:Terminal)?
  - List the topological nodes linked to $ObjectIdentity(0, cim:Terminal).
  - Which topological node corresponds to $ObjectIdentity(0, cim:Terminal)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd903d0
        name: iri_discovery
        output: urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.Terminals <urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_bd9b8ae9d978976aa56d6e050c6304a9
    nl_question: List the topological nodes linked to 2dd903d0.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903d0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9036c-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.Terminals <urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_b39e5018a98dc21b0fd477afdb21e03a
    nl_question: Which topological node is connected to 2dd9036c-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9036c-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9024a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.Terminals <urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_65147839542406f64217ec1b86619e4b
    nl_question: Identify the topological node associated with 2dd9024a-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9024a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901a2
        name: iri_discovery
        output: urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.Terminals <urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_4f9cdb6ff31ba26262e21800547b4ca4
    nl_question: Identify the topological node associated with 2dd901a2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd901a2-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.Terminals {$ObjectIdentity(0,
    cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_09356db8bac66ad5628dab77f7af1e35
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalnode (https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes,
    https://cim.ucaiug.io/ns#ConnectivityNode.TopologicalNode) and by filter properties
    none.
  filters: []
  name: List topologicalnode by parameters topologicalnode and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    - https://cim.ucaiug.io/ns#ConnectivityNode.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which connectivity nodes are associated with the topological node $ObjectIdentity(0,
    cim:TopologicalNode)?
  - Identify the connectivity nodes that belong to $ObjectIdentity(0, cim:TopologicalNode).
  - What connectivity nodes are linked to the topological node $ObjectIdentity(0,
    cim:TopologicalNode)?
  - List all connectivity nodes connected to $ObjectIdentity(0, cim:TopologicalNode).
  - The topological node $ObjectIdentity(0, cim:TopologicalNode) is associated with
    which connectivity nodes?
  questions:
  - expected_steps:
    - - args:
          query: TENHULT
        name: iri_discovery
        output: urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_11f4667b114b86f4f3aed0ab5941c834
    nl_question: What connectivity nodes are linked to the topological node TENHULT?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769655-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_18cdd86b31a26c6605daa2194568a652
    nl_question: List all connectivity nodes connected to f1769655-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769655-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARENDAL
        name: iri_discovery
        output: urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70> .

            <urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_adf640928acff0257c550d272d76ace1
    nl_question: Which connectivity nodes are associated with the topological node
      ARENDAL?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c27-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: HASLE
        name: iri_discovery
        output: urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_c5fc2e02f8029d57a00604ce55761e3b
    nl_question: The topological node HASLE is associated with which connectivity
      nodes?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176960f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769605
        name: iri_discovery
        output: urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_6e2bd219a4f7cb1212454a32e8bf1ffd
    nl_question: What connectivity nodes are linked to the topological node f1769605?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode {$ObjectIdentity(0,
    cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_7c7aef674c6cc92c73af2745c401e98e
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for topologicalnode (https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage,
    https://cim.ucaiug.io/ns#SvVoltage.TopologicalNode) and by filter properties none.
  filters: []
  name: List topologicalnode by parameters topologicalnode and filters none
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage
    - https://cim.ucaiug.io/ns#SvVoltage.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which topological nodes are associated with $ObjectIdentity(0, cim:TopologicalNode)?
  - Identify the topological nodes linked to $ObjectIdentity(0, cim:TopologicalNode)
    through SvVoltage.
  - What are the topological nodes connected to $ObjectIdentity(0, cim:TopologicalNode)?
  - List all topological nodes that have a relationship with $ObjectIdentity(0, cim:TopologicalNode)
    via SvVoltage.
  - How is $ObjectIdentity(0, cim:TopologicalNode) related to other topological nodes?
  questions:
  - expected_steps:
    - - args:
          query: f176964f
        name: iri_discovery
        output: urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage/cim:SvVoltage.TopologicalNode <urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_83e95589bc6c6c589ed14a56f7eaddc4
    nl_question: How is f176964f related to other topological nodes?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176964f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 47eb7c33
        name: iri_discovery
        output: urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage/cim:SvVoltage.TopologicalNode <urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_d0ca66540b6a4b3e037bbd9fc6b863fc
    nl_question: How is 47eb7c33 related to other topological nodes?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c33-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: JARPSTROMMEN
        name: iri_discovery
        output: urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage/cim:SvVoltage.TopologicalNode <urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_641f0b542488b4326ed4d789de93ae22
    nl_question: Identify the topological nodes linked to JARPSTROMMEN through SvVoltage.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695e0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: FEDA_HVDC
        name: iri_discovery
        output: urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage/cim:SvVoltage.TopologicalNode <urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_17626bc1e65e197aebcd49b86341f31e
    nl_question: What are the topological nodes connected to FEDA_HVDC?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176967d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 47eb7c2b
        name: iri_discovery
        output: urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?topologicalnode WHERE {

            ?topologicalnode a cim:TopologicalNode ;

            cim:TopologicalNode.SvVoltage/cim:SvVoltage.TopologicalNode <urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["topologicalnode"]}, "results": {"bindings": [{"topologicalnode":
          {"type": "uri", "value": "urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - topologicalnode
    id: question_bebb9204631821b66e3ca6270aec5264
    nl_question: List all topological nodes that have a relationship with 47eb7c2b
      via SvVoltage.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c2b-d0f6-11e7-9f7b-b46d83638f70
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:TopologicalNode.SvVoltage/cim:SvVoltage.TopologicalNode {$ObjectIdentity(0,
    cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_cf354cd7399b96d46961220cbe24c94a
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for none and by filter properties svvoltage.angle.
  filters:
  - property: https://cim.ucaiug.io/ns#SvVoltage.angle
    subject: cim:TopologicalNode
    type: xsd:float
  name: List topologicalnode by parameters none and filters svvoltage.angle
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters: []
  paraphrases:
  - Which topological nodes have a voltage angle of $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.angle, xsd:float)?
  - List the topological nodes with a voltage angle equal to $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.angle, xsd:float).
  - Identify the topological nodes where the voltage angle is $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.angle, xsd:float).
  - What topological nodes have a voltage angle of $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.angle, xsd:float)?
  - Provide the topological nodes with a voltage angle of $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.angle, xsd:float).
  questions: []
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:SvVoltage.angle {$ValueFilter(cim:TopologicalNode, cim:SvVoltage.angle, xsd:float)}
    .'
  template_id: template_list_974174ce99ed80bdda6b5973a5eacd9d
- description: A graph pattern which lists all values for topologicalnode limited
    by parameters for none and by filter properties svvoltage.v.
  filters:
  - property: https://cim.ucaiug.io/ns#SvVoltage.v
    subject: cim:TopologicalNode
    type: xsd:float
  name: List topologicalnode by parameters none and filters svvoltage.v
  outputs:
  - name: topologicalnode
    type: cim:TopologicalNode
  parameters: []
  paraphrases:
  - Which topological nodes have a voltage of $ValueFilter(cim:TopologicalNode, cim:SvVoltage.v,
    xsd:float)?
  - List the topological nodes with a voltage value of $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.v, xsd:float).
  - Provide the topological nodes where the voltage equals $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.v, xsd:float).
  - What are the topological nodes with $ValueFilter(cim:TopologicalNode, cim:SvVoltage.v,
    xsd:float) voltage?
  - Find the topological nodes with a voltage of $ValueFilter(cim:TopologicalNode,
    cim:SvVoltage.v, xsd:float).
  questions: []
  sparql_template: '?topologicalnode a cim:TopologicalNode ;

    cim:SvVoltage.v {$ValueFilter(cim:TopologicalNode, cim:SvVoltage.v, xsd:float)}
    .'
  template_id: template_list_74d704deee05ff1f92c73f78d9cd8baa
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for none and by filter properties none.
  filters: []
  name: List voltagelevel by parameters none and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters: []
  paraphrases:
  - What are all voltage levels in the dataset?
  - List all the voltage levels present.
  - Can you identify the voltage levels in the data?
  - What voltage levels are available?
  - Provide the list of all voltage levels.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769690-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_cb3733b6e2874e72b15af4c962459b56
    nl_question: What are all voltage levels in the dataset?
    parameter_bindings: {}
  sparql_template: ?voltagelevel a cim:VoltageLevel .
  template_id: template_list_7ebac60fad457b3effb40e97fbba22c8
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for basevoltage (https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters basevoltage and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which voltage levels are associated with the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - What voltage levels use the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - List all voltage levels related to the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - Identify the voltage levels connected to the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - What are the voltage levels corresponding to the base voltage $ObjectIdentity(0,
    cim:BaseVoltage)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90159
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_419e7119320819e36819f1e6e8800b20
    nl_question: What voltage levels use the base voltage 2dd90159?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769690-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_6793b93b4313172166cd5f370b51277c
    nl_question: Identify the voltage levels connected to the base voltage 2dd90169.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 135kV
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_cc90a5d2ebeb0fdbf34966d79afbfa75
    nl_question: List all voltage levels related to the base voltage 135kV.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.BaseVoltage {$ObjectIdentity(0, cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_0a058e5969d0214f5cd45a6e5643d7c4
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/ns#VoltageLevel.Bays) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Bays
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage level includes bay $ObjectIdentity(0, cim:Bay)?
  - Identify the voltage level that contains $ObjectIdentity(0, cim:Bay).
  - What voltage level is bay $ObjectIdentity(0, cim:Bay) a part of?
  - List the voltage level associated with $ObjectIdentity(0, cim:Bay).
  - The bay $ObjectIdentity(0, cim:Bay) is contained in which voltage level?
  questions:
  - expected_steps:
    - - args:
          query: c356ea84
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c3a25e0252414cd7da89b79a75527529
    nl_question: Which voltage level includes bay c356ea84?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: bd862643-f24b-234c-8b43-3724eb3a173c
        name: iri_discovery
        output: urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c>
            .

            <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e25a067c6298026b02ecf243261b2e27
    nl_question: List the voltage level associated with bd862643-f24b-234c-8b43-3724eb3a173c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
  - expected_steps:
    - - args:
          query: KRISTIAN300G4
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3>
            .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7d3b8723d2305577092bb226f76ba93f
    nl_question: The bay KRISTIAN300G4 is contained in which voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
  - expected_steps:
    - - args:
          query: 07a43fc4
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a>
            .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bdd79bf830d722de12e582c5826149d1
    nl_question: The bay 07a43fc4 is contained in which voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
  - expected_steps:
    - - args:
          query: d965c17e-a3fe-c447-8139-b55a1201b3b3
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c0d0aac105fccfea8448d4054f275b8c
    nl_question: The bay d965c17e-a3fe-c447-8139-b55a1201b3b3 is contained in which
      voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Bays {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_d19dabfa1256f613c9600d5fc43de057
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for substation (https://cim.ucaiug.io/ns#VoltageLevel.Substation) and
    by filter properties none.
  filters: []
  name: List voltagelevel by parameters substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What voltage levels are associated with $ObjectIdentity(0, cim:Substation)?
  - List the voltage levels belonging to $ObjectIdentity(0, cim:Substation).
  - Which voltage levels are present in $ObjectIdentity(0, cim:Substation)?
  - Can you provide the voltage levels linked to $ObjectIdentity(0, cim:Substation)?
  - Identify the voltage levels associated with substation $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f17696b8
        name: iri_discovery
        output: urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation <urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c6a7a0793a9bbceee70786c38834481d
    nl_question: Identify the voltage levels associated with substation f17696b8.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ae
        name: iri_discovery
        output: urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_68cbfa6cc064d0b18dcaa30693e825fd
    nl_question: Can you provide the voltage levels linked to f17696ae?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769642
        name: iri_discovery
        output: urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation <urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_43c096ba6ec85a7707cc54d309aa3adc
    nl_question: Identify the voltage levels associated with substation f1769642.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: GRUNDFORS
        name: iri_discovery
        output: urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation <urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_853641518e0d0898b39d8c0582109cae
    nl_question: List the voltage levels belonging to GRUNDFORS.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695e5-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695fe-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation <urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_24bbb62d9f8ea33db50661c453476f7b
    nl_question: Identify the voltage levels associated with substation f17695fe-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_897b38d22e6dbfde458a2957ff2e7c1f
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for busbarsection (https://cim.ucaiug.io/rules#hasPart) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters busbarsection and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which voltage level contains the busbar section $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the voltage level that includes the busbar section $ObjectIdentity(0,
    cim:BusbarSection).
  - What voltage level is associated with the busbar section $ObjectIdentity(0, cim:BusbarSection)?
  - List the voltage level that has the busbar section $ObjectIdentity(0, cim:BusbarSection).
  - In which voltage level is the busbar section $ObjectIdentity(0, cim:BusbarSection)
    located?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90167-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a780a597eb00fab5693cf5e994b89fae
    nl_question: Which voltage level contains the busbar section 2dd90167-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: GRUNDFOR420 A
        name: iri_discovery
        output: urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_5512f53888cf2d725eb8ed6aff515b47
    nl_question: Which voltage level contains the busbar section GRUNDFOR420 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9016c-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901a3
        name: iri_discovery
        output: urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fde5e794db87360c535e60ec497c99f6
    nl_question: Which voltage level contains the busbar section 2dd901a3?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: JARPSTRO420 A
        name: iri_discovery
        output: urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_159f8f34592fd443bf0f437d775b299c
    nl_question: Which voltage level contains the busbar section JARPSTRO420 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90193-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_45092e2da1e6a30cc83232412dcc6855
    nl_question: Which voltage level contains the busbar section 2dd90193-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPart {$ObjectIdentity(0, cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_59a4dedc3d670426099f0830b4e3f5e6
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for substation (https://cim.ucaiug.io/rules#isPart) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What voltage levels are part of $ObjectIdentity(0, cim:Substation)?
  - List the voltage levels contained within $ObjectIdentity(0, cim:Substation).
  - Which voltage levels belong to the substation $ObjectIdentity(0, cim:Substation)?
  - Identify the voltage levels that are part of $ObjectIdentity(0, cim:Substation).
  - Can you provide the voltage levels within $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: FORSMARK
        name: iri_discovery
        output: urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPart <urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a38675602cc48559582f2a34aad712c4
    nl_question: Which voltage levels belong to the substation FORSMARK?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695aa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRONDHEIM
        name: iri_discovery
        output: urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPart <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_96998b6f2d0ad129bbb8ea8e1123f6cc
    nl_question: What voltage levels are part of TRONDHEIM?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769642
        name: iri_discovery
        output: urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPart <urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_71dcb6b24d313b7b4d48a5447bdeb436
    nl_question: Identify the voltage levels that are part of f1769642.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPart <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_39cfbd3c638b133fad80c01f86cca7a3
    nl_question: Can you provide the voltage levels within f1769670-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: GEILO
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPart <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0111d1ce2ee5882c820e6bd035675c1a
    nl_question: What voltage levels are part of GEILO?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:isPart {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_31872afc071cdd6cbde462994b5dd01e
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for busbarsection (https://cim.ucaiug.io/rules#hasPartTransitive) and
    by filter properties none.
  filters: []
  name: List voltagelevel by parameters busbarsection and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which voltage level includes $ObjectIdentity(0, cim:BusbarSection) as a part?
  - Identify the voltage level containing $ObjectIdentity(0, cim:BusbarSection).
  - What voltage level does $ObjectIdentity(0, cim:BusbarSection) belong to?
  - List the voltage levels that have $ObjectIdentity(0, cim:BusbarSection) as a part.
  - In which voltage level is $ObjectIdentity(0, cim:BusbarSection) located?
  questions:
  - expected_steps:
    - - args:
          query: 2dd901c3
        name: iri_discovery
        output: urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_df847bea5db562035b01c4877aed49f9
    nl_question: Which voltage level includes 2dd901c3 as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8ceef0642e4781451c09fb24a9e66560
    nl_question: Which voltage level includes 2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
      as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9016a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901b1-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bb9da64cfa2701d3dec23bb057516da7
    nl_question: Identify the voltage level containing 2dd901b1-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_97e1d4fb7b17bbfebfb55e40fcd642be
    nl_question: List the voltage levels that have 2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
      as a part.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9018d-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: ESTLINK 420 A
        name: iri_discovery
        output: urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_22e0b956990559d5d14e5a608a54ba53
    nl_question: List the voltage levels that have ESTLINK 420 A as a part.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b9-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_82a7c117ed6945c2e96d40cacaa539b9
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for substation (https://cim.ucaiug.io/rules#isPartTransitive) and by
    filter properties none.
  filters: []
  name: List voltagelevel by parameters substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What voltage levels are part of $ObjectIdentity(0, cim:Substation)?
  - List the voltage levels contained within $ObjectIdentity(0, cim:Substation).
  - Which voltage levels are associated with $ObjectIdentity(0, cim:Substation)?
  - Give me all voltage levels that are part of $ObjectIdentity(0, cim:Substation).
  - Identify the voltage levels within $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f176965a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPartTransitive <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_df2e41dcc554fc6e6d2905c01ee9e98d
    nl_question: What voltage levels are part of f176965a-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176969e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPartTransitive <urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e1eb52f3e59ac055e373bfe6fb64f7ea
    nl_question: What voltage levels are part of f176969e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695be
        name: iri_discovery
        output: urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPartTransitive <urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bf601dba5909d03f78430ac629098462
    nl_question: What voltage levels are part of f17695be?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696a8
        name: iri_discovery
        output: urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPartTransitive <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7179dd34527d3b7e46f1fe83bc2dcdca
    nl_question: Identify the voltage levels within f17696a8.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769604
        name: iri_discovery
        output: urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:isPartTransitive <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d92b273ac0b8a92d42c874c94d924ed9
    nl_question: List the voltage levels contained within f1769604.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_9851b2bb85bafdb449af64f5abee69cf
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for substation (https://cim.ucaiug.io/rules#connectedThroughPart) and
    by filter properties none.
  filters: []
  name: List voltagelevel by parameters substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which voltage levels are connected through parts of $ObjectIdentity(0, cim:Substation)?
  - Identify the voltage levels that are connected to $ObjectIdentity(0, cim:Substation).
  - What voltage levels are connected to $ObjectIdentity(0, cim:Substation) through
    parts?
  - List all voltage levels that are connected via parts of $ObjectIdentity(0, cim:Substation).
  - Show me the voltage levels connected to $ObjectIdentity(0, cim:Substation) through
    its parts.
  questions:
  - expected_steps:
    - - args:
          query: f176967c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_37c45e488c456819228368d876540c3e
    nl_question: Show me the voltage levels connected to f176967c-9aeb-11e5-91da-b8763fd99c5f
      through its parts.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RINGHALS
        name: iri_discovery
        output: urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_1e0f50d7209a505b12f943b170c3aefe
    nl_question: Identify the voltage levels that are connected to RINGHALS.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769642-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_23cfbf93fbdb14b795e2ff0ced12e61d
    nl_question: Which voltage levels are connected through parts of f1769642-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769642-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695c8
        name: iri_discovery
        output: urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7bc1a824afb8b0be657ff0579faf5150
    nl_question: List all voltage levels that are connected via parts of f17695c8.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695c8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: STAVANGER
        name: iri_discovery
        output: urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ec6fbc5ff60a3eb72f477229db689ab2
    nl_question: Show me the voltage levels connected to STAVANGER through its parts.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769664-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_32132ccb0dbc7869c7d6e29d2be7c31f
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for voltagelevel (https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters voltagelevel and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which voltage levels are connected to $ObjectIdentity(0, cim:VoltageLevel)?
  - List all voltage levels that are linked with $ObjectIdentity(0, cim:VoltageLevel).
  - What voltage levels are directly connected to $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the voltage levels connected through parts to $ObjectIdentity(0, cim:VoltageLevel).
  - Provide the voltage levels connected to $ObjectIdentity(0, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: KRISTIA 300
        name: iri_discovery
        output: urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a632259b476ec777c3f58f90177d80eb
    nl_question: List all voltage levels that are linked with KRISTIA 300.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f3-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_323f0fde44d587b3a734073fc59d492a
    nl_question: Identify the voltage levels connected through parts to f17695f3-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769632
        name: iri_discovery
        output: urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_aa73544f3eb3898d953318f986eec92f
    nl_question: What voltage levels are directly connected to f1769632?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176967e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fe780d2fdebe1a7c031a90757e31a949
    nl_question: What voltage levels are directly connected to f176967e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ed
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_243bb1bf1ca58c6c82383dc5eee2e46f
    nl_question: Identify the voltage levels connected through parts to f17695ed.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_2808da46c2dd2ea9898e2373cc8708dc
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for line (https://cim.ucaiug.io/rules#connectedThroughPart) and by
    filter properties none.
  filters: []
  name: List voltagelevel by parameters line and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which voltage levels are connected through $ObjectIdentity(0, cim:Line)?
  - What voltage levels are associated with $ObjectIdentity(0, cim:Line)?
  - List the voltage levels that are connected through line $ObjectIdentity(0, cim:Line).
  - Identify the voltage levels linked via $ObjectIdentity(0, cim:Line).
  - Which voltage levels are related to $ObjectIdentity(0, cim:Line) through a connection?
  questions:
  - expected_steps:
    - - args:
          query: bef3e97b-1294-f249-a7ce-dff614cb3af1
        name: iri_discovery
        output: urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1>
            .

            <urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c6252184e456a3402591bb9166171997
    nl_question: List the voltage levels that are connected through line bef3e97b-1294-f249-a7ce-dff614cb3af1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:bef3e97b-1294-f249-a7ce-dff614cb3af1
  - expected_steps:
    - - args:
          query: e484fe2d
        name: iri_discovery
        output: urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405>
            .

            <urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c174eba972e32ddbcd3f9a94cc963c84
    nl_question: Identify the voltage levels linked via e484fe2d.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:e484fe2d-eb2b-da46-8be9-e6c9e3f24405
  - expected_steps:
    - - args:
          query: fd79db98-7494-8348-8442-0400e115ef44
        name: iri_discovery
        output: urn:uuid:fd79db98-7494-8348-8442-0400e115ef44
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:fd79db98-7494-8348-8442-0400e115ef44>
            .

            <urn:uuid:fd79db98-7494-8348-8442-0400e115ef44> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_da471cda365f5b95b805cddd371580f9
    nl_question: Identify the voltage levels linked via fd79db98-7494-8348-8442-0400e115ef44.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:fd79db98-7494-8348-8442-0400e115ef44
  - expected_steps:
    - - args:
          query: LC 420TENHULT-MALMO
        name: iri_discovery
        output: urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f>
            .

            <urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_40a805c35650adba9a46cf0991ae1685
    nl_question: Identify the voltage levels linked via LC 420TENHULT-MALMO.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:bd0a07ab-b470-1f47-9bbb-bbbcfdc6bb4f
  - expected_steps:
    - - args:
          query: 81e75f1c
        name: iri_discovery
        output: urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c>
            .

            <urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ab56fb5a1f5ac455d8f62d028b734761
    nl_question: Which voltage levels are related to 81e75f1c through a connection?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:81e75f1c-a0d2-4b40-9d06-76e3a0f7166c
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Line)} .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_61fba7bea36162e607d569f49524f092
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for synchronousmachine (https://cim.ucaiug.io/rules#hasPart) and by
    filter properties none.
  filters: []
  name: List voltagelevel by parameters synchronousmachine and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which voltage level contains the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the voltage level associated with $ObjectIdentity(0, cim:SynchronousMachine).
  - What is the voltage level that includes $ObjectIdentity(0, cim:SynchronousMachine)?
  - List the voltage level in which $ObjectIdentity(0, cim:SynchronousMachine) is
    contained.
  - To which voltage level does the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)
    belong?
  questions:
  - expected_steps:
    - - args:
          query: ASKER   300 M2
        name: iri_discovery
        output: urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f412190ec36ed6a7e2c24d61d2426721
    nl_question: Which voltage level contains the synchronous machine ASKER   300
      M2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176993e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176993e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f176993e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176993e-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fabd52e2bc799f210423907feb2606f4
    nl_question: Which voltage level contains the synchronous machine f176993e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f176993e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HELSINKI420 M2
        name: iri_discovery
        output: urn:uuid:f17699c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17699c4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17699c4-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_9b1e27bb2cf93e50f23f7a369db02c1b
    nl_question: Which voltage level contains the synchronous machine HELSINKI420
      M2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699b4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699b4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17699b4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17699b4-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_aedf52a798494367112c4e68c1bb23d8
    nl_question: List the voltage level in which f17699b4-9aeb-11e5-91da-b8763fd99c5f
      is contained.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699b4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698df
        name: iri_discovery
        output: urn:uuid:f17698df-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17698df-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17698df-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d0edf95695c3a54e8bd805cdc0697e4c
    nl_question: To which voltage level does the synchronous machine f17698df belong?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698df-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPart {$ObjectIdentity(0, cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_f5c176078583ca7425bffcc31fd79e95
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for conformload (https://cim.ucaiug.io/rules#hasPart) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters conformload and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which voltage level contains $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the voltage level associated with $ObjectIdentity(0, cim:ConformLoad).
  - What voltage level is $ObjectIdentity(0, cim:ConformLoad) a part of?
  - List the voltage level that includes $ObjectIdentity(0, cim:ConformLoad).
  - In which voltage level can $ObjectIdentity(0, cim:ConformLoad) be found?
  questions:
  - expected_steps:
    - - args:
          query: HJALTA 420 L1
        name: iri_discovery
        output: urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_dedef36aab9b6b29e705ffa9b3c0826a
    nl_question: In which voltage level can HJALTA 420 L1 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769776
        name: iri_discovery
        output: urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_37c87e8bf8f1031b4e7efe8647832038
    nl_question: What voltage level is f1769776 a part of?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697e2
        name: iri_discovery
        output: urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f5070affc6c0526ccd1bb638036bed43
    nl_question: In which voltage level can f17697e2 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIAN300 L2
        name: iri_discovery
        output: urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b404ab66bfb49ec3471e95dd9c3c25bc
    nl_question: List the voltage level that includes KRISTIAN300 L2.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696e0
        name: iri_discovery
        output: urn:uuid:f17696e0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17696e0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696e0-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_09139edbb726e8577a78a556f5a7d370
    nl_question: Identify the voltage level associated with f17696e0.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696e0-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPart {$ObjectIdentity(0, cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_ac96b3430f84a0ad712f35ec6d6f9b39
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/rules#hasPart) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage level includes $ObjectIdentity(0, cim:Bay)?
  - Identify the voltage level containing $ObjectIdentity(0, cim:Bay).
  - In which voltage level is $ObjectIdentity(0, cim:Bay) located?
  - What is the voltage level associated with $ObjectIdentity(0, cim:Bay)?
  - List the voltage level that has $ObjectIdentity(0, cim:Bay) as part of it.
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 420T1
        name: iri_discovery
        output: urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c> .

            <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_597557fc3160d17a16110dc6e44184a3
    nl_question: Identify the voltage level containing ARENDAL 420T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
  - expected_steps:
    - - args:
          query: ARENDAL 300KR2
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a50ad07da8099017e21ae9f76acf0bc3
    nl_question: Identify the voltage level containing ARENDAL 300KR2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  - expected_steps:
    - - args:
          query: KRISTIAN300AR1
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3a1d827d78d2d2abe8834f3ac476090e
    nl_question: Identify the voltage level containing KRISTIAN300AR1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: bc25cadf-543e-8442-a72a-6c11a851d3cf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b4dc225dfb5e0648e4744c6d0ab65a11
    nl_question: Identify the voltage level containing bc25cadf-543e-8442-a72a-6c11a851d3cf.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  - expected_steps:
    - - args:
          query: KRISTIAN300L2
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ff66376d0b4b5706c8484543bea0b856
    nl_question: Which voltage level includes KRISTIAN300L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_e8b7755c78b6f1d4e841e3c5b605f5ee
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for breaker (https://cim.ucaiug.io/rules#hasPartTransitive) and by
    filter properties none.
  filters: []
  name: List voltagelevel by parameters breaker and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which voltage level contains the breaker $ObjectIdentity(0, cim:Breaker)?
  - Identify the voltage level associated with the breaker $ObjectIdentity(0, cim:Breaker).
  - What voltage level is $ObjectIdentity(0, cim:Breaker) a part of?
  - List the voltage level that includes the breaker $ObjectIdentity(0, cim:Breaker).
  - In which voltage level can the breaker $ObjectIdentity(0, cim:Breaker) be found?
  questions:
  - expected_steps:
    - - args:
          query: 373c4779
        name: iri_discovery
        output: urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9>
            .

            <urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fd84be3649ca2a23f72fbf7105da41e8
    nl_question: List the voltage level that includes the breaker 373c4779.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9
  - expected_steps:
    - - args:
          query: KRISTIAN300G2  AB_S
        name: iri_discovery
        output: urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305>
            .

            <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_4e13867cb1876de8cd965f38a80e674f
    nl_question: In which voltage level can the breaker KRISTIAN300G2  AB_S be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
  - expected_steps:
    - - args:
          query: 0169b8e7-c05b-3640-b55e-22b40081ca21
        name: iri_discovery
        output: urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21>
            .

            <urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_643b96a2a3cd0ff0db0c59bee3d99c53
    nl_question: Which voltage level contains the breaker 0169b8e7-c05b-3640-b55e-22b40081ca21?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21
  - expected_steps:
    - - args:
          query: e399c43f-0e9e-ae42-a66e-116fcccb56ac
        name: iri_discovery
        output: urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac>
            .

            <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e3602ce36fda3565b07164d7129b0488
    nl_question: Identify the voltage level associated with the breaker e399c43f-0e9e-ae42-a66e-116fcccb56ac.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
  - expected_steps:
    - - args:
          query: ARENDAL 300KR1 AB_S
        name: iri_discovery
        output: urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b>
            .

            <urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0261af955da81dbbb43e9c056b810494
    nl_question: What voltage level is ARENDAL 300KR1 AB_S a part of?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_56a0cffe63a42a91fd42aec43e9a7aea
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for disconnector (https://cim.ucaiug.io/rules#hasPartTransitive) and
    by filter properties none.
  filters: []
  name: List voltagelevel by parameters disconnector and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which voltage level includes the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - Identify the voltage level that contains the disconnector $ObjectIdentity(0, cim:Disconnector).
  - What is the voltage level associated with the disconnector $ObjectIdentity(0,
    cim:Disconnector)?
  - List the voltage level that has $ObjectIdentity(0, cim:Disconnector) as its part.
  - Where can the disconnector $ObjectIdentity(0, cim:Disconnector) be found in terms
    of voltage level?
  questions:
  - expected_steps:
    - - args:
          query: 0192045c
        name: iri_discovery
        output: urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0>
            .

            <urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d0261dddf54e932b2c2b588ee0065da1
    nl_question: Where can the disconnector 0192045c be found in terms of voltage
      level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:0192045c-3523-324a-a050-c9dddd6fe2d0
  - expected_steps:
    - - args:
          query: 674b85b4
        name: iri_discovery
        output: urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a>
            .

            <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7a2976bbd10640f6836df15430f65399
    nl_question: List the voltage level that has 674b85b4 as its part.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
  - expected_steps:
    - - args:
          query: KRISTIAN300KV1 BD_S
        name: iri_discovery
        output: urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340>
            .

            <urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_43e870a57bfa0f59bf30e091fc02afcd
    nl_question: Identify the voltage level that contains the disconnector KRISTIAN300KV1
      BD_S.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:4ee41c27-44cd-3146-8fe0-ad30d5051340
  - expected_steps:
    - - args:
          query: 41b5a199-973e-9246-ab28-6593d6a59a0d
        name: iri_discovery
        output: urn:uuid:41b5a199-973e-9246-ab28-6593d6a59a0d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:41b5a199-973e-9246-ab28-6593d6a59a0d>
            .

            <urn:uuid:41b5a199-973e-9246-ab28-6593d6a59a0d> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_39682516faccdaf01960d49650e9d717
    nl_question: Which voltage level includes the disconnector 41b5a199-973e-9246-ab28-6593d6a59a0d?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:41b5a199-973e-9246-ab28-6593d6a59a0d
  - expected_steps:
    - - args:
          query: KRISTIAN300G2  BD_S
        name: iri_discovery
        output: urn:uuid:df16ad25-a8cf-a04b-a420-0d71145132dc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:df16ad25-a8cf-a04b-a420-0d71145132dc>
            .

            <urn:uuid:df16ad25-a8cf-a04b-a420-0d71145132dc> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3da5222100af532d1bbd56707f476743
    nl_question: List the voltage level that has KRISTIAN300G2  BD_S as its part.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:df16ad25-a8cf-a04b-a420-0d71145132dc
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:Disconnector)} .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_067644b1d5d533d5d09c2a98305e9d19
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for synchronousmachine (https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters synchronousmachine and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which voltage level contains the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the voltage level that has $ObjectIdentity(0, cim:SynchronousMachine)
    as its part.
  - In which voltage level can the synchronous machine $ObjectIdentity(0, cim:SynchronousMachine)
    be found?
  - What is the voltage level associated with $ObjectIdentity(0, cim:SynchronousMachine)?
  - List the voltage level that includes $ObjectIdentity(0, cim:SynchronousMachine)
    as a component.
  questions:
  - expected_steps:
    - - args:
          query: f17699ee
        name: iri_discovery
        output: urn:uuid:f17699ee-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17699ee-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699ee-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_71d675e5c0a6df90d21366734e39ceeb
    nl_question: List the voltage level that includes f17699ee as a component.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699ee-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 M5
        name: iri_discovery
        output: urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b21e2ae0b75a62d047f62ca67f6aeb42
    nl_question: List the voltage level that includes MALMO   420 M5 as a component.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a2e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17698fb
        name: iri_discovery
        output: urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_dfba318a74317df02d1f52638eea29c3
    nl_question: Identify the voltage level that has f17698fb as its part.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698fb-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 M3
        name: iri_discovery
        output: urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_be7c3b22bcca417c9f8a65c86843e418
    nl_question: Identify the voltage level that has MALMO   420 M3 as its part.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176983d
        name: iri_discovery
        output: urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f6cb20343663fa78d35261fae5ee9beb
    nl_question: List the voltage level that includes f176983d as a component.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f176983d-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_9bbfce464e14703002a8b7d2a2921101
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for conformload (https://cim.ucaiug.io/rules#hasPartTransitive) and
    by filter properties none.
  filters: []
  name: List voltagelevel by parameters conformload and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which voltage levels contain the conform load $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the voltage level that includes $ObjectIdentity(0, cim:ConformLoad).
  - In which voltage level is $ObjectIdentity(0, cim:ConformLoad) located?
  - What voltage level has $ObjectIdentity(0, cim:ConformLoad) as part of it?
  - List the voltage levels that include the conform load $ObjectIdentity(0, cim:ConformLoad).
  questions:
  - expected_steps:
    - - args:
          query: f1769758-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8074351486f741ae68e08e24dc0dfc4d
    nl_question: Identify the voltage level that includes f1769758-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: BLAFALLI300 L2
        name: iri_discovery
        output: urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769690-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_edcd5f8186c3b2c29bbaafb83490fa50
    nl_question: List the voltage levels that include the conform load BLAFALLI300
      L2.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HJALTA 420 L1
        name: iri_discovery
        output: urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_419723199fdd1fef19259f02f609b17e
    nl_question: In which voltage level is HJALTA 420 L1 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696f8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MALMO   420 L2
        name: iri_discovery
        output: urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3e2d53bd5cb2e5077b702a87a61901e5
    nl_question: In which voltage level is MALMO   420 L2 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697e2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSLO    300 L1
        name: iri_discovery
        output: urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d63883534be849f58f3443cbf55cb716
    nl_question: List the voltage levels that include the conform load OSLO    300
      L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769740-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_c0b55ae859ffa83d08f01b95fff07fdf
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/rules#hasPartTransitive) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage levels contain the bay $ObjectIdentity(0, cim:Bay)?
  - Identify the voltage level that has the bay $ObjectIdentity(0, cim:Bay).
  - What is the voltage level associated with the bay $ObjectIdentity(0, cim:Bay)?
  - In which voltage level is the bay $ObjectIdentity(0, cim:Bay) located?
  - List the voltage levels that include the bay $ObjectIdentity(0, cim:Bay).
  questions:
  - expected_steps:
    - - args:
          query: c356ea84-abae-cb43-895f-7118f2f82b3e
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_55d908b9f41b6cb45fad1f1e3d5f858f
    nl_question: What is the voltage level associated with the bay c356ea84-abae-cb43-895f-7118f2f82b3e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: KRISTIAN300G2
        name: iri_discovery
        output: urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad>
            .

            <urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_18e30693df50aa2a61b4664f424529a5
    nl_question: What is the voltage level associated with the bay KRISTIAN300G2?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad
  - expected_steps:
    - - args:
          query: KRISTIAN300FE1
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bc0933560b0a07395f53e4cd0b20e75e
    nl_question: In which voltage level is the bay KRISTIAN300FE1 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: ARENDAL 300T1
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a>
            .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e287391bba10092c1026c3852b732a8b
    nl_question: In which voltage level is the bay ARENDAL 300T1 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
  - expected_steps:
    - - args:
          query: ARENDAL 300KR1
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_05df10008820101af6f3f0976c383ce5
    nl_question: List the voltage levels that include the bay ARENDAL 300KR1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_117f5d71a79e55582efb37a73a05743c
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/rules#connectedThroughPart) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage levels are connected through part $ObjectIdentity(0, cim:Bay)?
  - List the voltage levels that are connected via bay $ObjectIdentity(0, cim:Bay).
  - What voltage levels are linked through the part $ObjectIdentity(0, cim:Bay)?
  - Identify all voltage levels associated with $ObjectIdentity(0, cim:Bay) through
    connection.
  - Which voltage levels are associated with the bay $ObjectIdentity(0, cim:Bay)?
  questions:
  - expected_steps:
    - - args:
          query: d965c17e
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_798a1070040fef93c8a40f800f426705
    nl_question: Which voltage levels are connected through part d965c17e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: KRISTIAN300G3
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_70b2ed02f3976aeaef1e30de93afaaf0
    nl_question: List the voltage levels that are connected via bay KRISTIAN300G3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: KRISTIAN300ST1
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_81e736fd96a6bf4a948e9a71e4e34e6b
    nl_question: Which voltage levels are associated with the bay KRISTIAN300ST1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  - expected_steps:
    - - args:
          query: e5943b0f
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_57aba793b2e32ed6dc4172aea9351f04
    nl_question: List the voltage levels that are connected via bay e5943b0f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  - expected_steps:
    - - args:
          query: f72994d8-9857-b349-a4ae-2e3c9652d5bc
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:connectedThroughPart <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7fd06bd643d17cb7a677332e409a2a6d
    nl_question: Which voltage levels are connected through part f72994d8-9857-b349-a4ae-2e3c9652d5bc?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:connectedThroughPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_27d34562ba6cd05d771e40feca3f111a
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for linearshuntcompensator (https://cim.ucaiug.io/rules#hasPart) and
    by filter properties none.
  filters: []
  name: List voltagelevel by parameters linearshuntcompensator and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which voltage level contains $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the voltage level that includes $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What voltage level is $ObjectIdentity(0, cim:LinearShuntCompensator) a part of?
  - List the voltage level associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - In which voltage level is $ObjectIdentity(0, cim:LinearShuntCompensator) located?
  questions:
  - expected_steps:
    - - args:
          query: 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_75be0b24d5337074bb30ac7ec82ea921
    nl_question: In which voltage level is 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903bd
        name: iri_discovery
        output: urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_65bc0b5debc1a7a33fdb9290af8a4ef2
    nl_question: Identify the voltage level that includes 2dd903bd.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cf
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a2272786e04d6f45138d339e331e3b9f
    nl_question: List the voltage level associated with 2dd903cf.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90408
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_cf78a5e75e8dcbad8d510189e3baa0bb
    nl_question: List the voltage level associated with 2dd90408.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b4140944e673e6d572f46cdf499536c0
    nl_question: Which voltage level contains 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPart {$ObjectIdentity(0, cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_160bd95feaebaf2228da6e5b47b824c8
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for linearshuntcompensator (https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters linearshuntcompensator and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which voltage level contains the linear shunt compensator $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the voltage level associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What is the voltage level that includes the linear shunt compensator $ObjectIdentity(0,
    cim:LinearShuntCompensator)?
  - List the voltage level that has $ObjectIdentity(0, cim:LinearShuntCompensator)
    as part of it.
  - In which voltage level can the linear shunt compensator $ObjectIdentity(0, cim:LinearShuntCompensator)
    be found?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3db917ecc81c2091c3d3db2ac73be64e
    nl_question: Which voltage level contains the linear shunt compensator 2dd90408-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903c0
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_196683105af2a1b4f8a937715cceca05
    nl_question: List the voltage level that has 2dd903c0 as part of it.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f73421c195792178611fdb1d47188702
    nl_question: Identify the voltage level associated with 2dd90405-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: HAGAFOSS420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_23d63c12ce201c75a903aa4f27750969
    nl_question: Which voltage level contains the linear shunt compensator HAGAFOSS420
      LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7337bbe05819203aa0335c1ba0079a28
    nl_question: Identify the voltage level associated with 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_a59a382c985879f4635950afdfef52d2
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for nonconformload (https://cim.ucaiug.io/rules#hasPart) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters nonconformload and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which voltage level includes $ObjectIdentity(0, cim:NonConformLoad) as a part?
  - Identify the voltage level associated with $ObjectIdentity(0, cim:NonConformLoad).
  - What is the voltage level that contains $ObjectIdentity(0, cim:NonConformLoad)?
  - In which voltage level is $ObjectIdentity(0, cim:NonConformLoad) located?
  - List the voltage level that has $ObjectIdentity(0, cim:NonConformLoad) as one
    of its components.
  questions:
  - expected_steps:
    - - args:
          query: OULU    420 L3
        name: iri_discovery
        output: urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_6f7da3e72857c5b4455a5d643a4cfd4f
    nl_question: Which voltage level includes OULU    420 L3 as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176972e
        name: iri_discovery
        output: urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_1957e15c7951f93256ad1a5df3704b99
    nl_question: Which voltage level includes f176972e as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KARLSH  420 L1
        name: iri_discovery
        output: urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_857e758fce21ffc39cac18ee0e3e91b6
    nl_question: List the voltage level that has KARLSH  420 L1 as one of its components.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: FEDA    300 L1
        name: iri_discovery
        output: urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_981c426a419d125234307e5eb36f2341
    nl_question: Which voltage level includes FEDA    300 L1 as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f1769764-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARRIE   420 L1
        name: iri_discovery
        output: urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPart <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_92001eed4e69a52e1629db9a44fc14c1
    nl_question: In which voltage level is ARRIE   420 L1 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697f4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPart {$ObjectIdentity(0, cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_6aaafdb76e932909f902a00bbfb291ef
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for nonconformload (https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters nonconformload and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which voltage level contains $ObjectIdentity(0, cim:NonConformLoad) as its part?
  - Identify the voltage level that includes $ObjectIdentity(0, cim:NonConformLoad)
    as part of its components.
  - What voltage level is associated with $ObjectIdentity(0, cim:NonConformLoad)?
  - List the voltage level that has $ObjectIdentity(0, cim:NonConformLoad) as part
    of it.
  - In which voltage level is $ObjectIdentity(0, cim:NonConformLoad) included?
  questions:
  - expected_steps:
    - - args:
          query: f17697ee-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d097316b2f8b8dc5a8ca12987b3e407f
    nl_question: What voltage level is associated with f17697ee-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: NARVIK  420 L1
        name: iri_discovery
        output: urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3f1f290348a7480b2adc3f0a77eba589
    nl_question: Which voltage level contains NARVIK  420 L1 as its part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697c4
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_833e8ebb9a25d6b229d2ce891db1c79f
    nl_question: In which voltage level is f17697c4 included?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697b8
        name: iri_discovery
        output: urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_45638cdcb14386fbd861fbca108d26f0
    nl_question: Which voltage level contains f17697b8 as its part?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697b8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KARLSH  420 L1
        name: iri_discovery
        output: urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cimr:hasPartTransitive <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_302b8d2c80eaa65fefb1198f7b7c0263
    nl_question: In which voltage level is KARLSH  420 L1 included?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697fa-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cimr:hasPartTransitive {$ObjectIdentity(0, cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_bfff8f7b7c667f3143c1c35bf00aceb4
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for basevoltage (https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage),
    bay (https://cim.ucaiug.io/ns#VoltageLevel.Bays) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters basevoltage, bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Bays
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage levels are associated with base voltage $ObjectIdentity(0, cim:BaseVoltage)
    and contain bay $ObjectIdentity(1, cim:Bay)?
  - Identify the voltage levels that utilize base voltage $ObjectIdentity(0, cim:BaseVoltage)
    and are connected to bay $ObjectIdentity(1, cim:Bay).
  - List the voltage levels linked with $ObjectIdentity(0, cim:BaseVoltage) that include
    bay $ObjectIdentity(1, cim:Bay).
  - What voltage levels are defined by base voltage $ObjectIdentity(0, cim:BaseVoltage)
    and are associated with bay $ObjectIdentity(1, cim:Bay)?
  - Find voltage levels using base voltage $ObjectIdentity(0, cim:BaseVoltage) and
    having bay $ObjectIdentity(1, cim:Bay).
  questions:
  - expected_steps:
    - - args:
          query: bd862643-f24b-234c-8b43-3724eb3a173c
        name: iri_discovery
        output: urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 420kV
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Bays <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_656d1ecc9e548980bc52b59a0e0b0d50
    nl_question: Which voltage levels are associated with base voltage 420kV and contain
      bay bd862643-f24b-234c-8b43-3724eb3a173c?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Bay): urn:uuid:bd862643-f24b-234c-8b43-3724eb3a173c
  - expected_steps:
    - - args:
          query: cf91c2cb-551a-e14c-8295-85c979c5c75e
        name: iri_discovery
        output: urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Bays <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8f48de6b7880c7acf95d1aad653991a7
    nl_question: What voltage levels are defined by base voltage 2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      and are associated with bay cf91c2cb-551a-e14c-8295-85c979c5c75e?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Bay): urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
  - expected_steps:
    - - args:
          query: c356ea84
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Bays <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_73565cd91a49d3a88c063144b7acff24
    nl_question: List the voltage levels linked with 2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      that include bay c356ea84.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: KRISTIAN300AR1
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 300kV
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Bays <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3b82f5c9d9581268ddc1e2982fbbfc8f
    nl_question: What voltage levels are defined by base voltage 300kV and are associated
      with bay KRISTIAN300AR1?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: b61b6279
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Bays <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_5a98b84189641b8623f2ff431b83f591
    nl_question: What voltage levels are defined by base voltage 2dd90169 and are
      associated with bay b61b6279?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.BaseVoltage {$ObjectIdentity(0, cim:BaseVoltage)} ;

    cim:VoltageLevel.Bays {$ObjectIdentity(1, cim:Bay)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .

    {$ObjectIdentity(1, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_14a287c351953cba779c0bd6c6f20b49
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for basevoltage (https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage),
    substation (https://cim.ucaiug.io/ns#VoltageLevel.Substation) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters basevoltage, substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What voltage levels in $ObjectIdentity(1, cim:Substation) are associated with
    base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - Identify the voltage levels in $ObjectIdentity(1, cim:Substation) that have a
    base voltage of $ObjectIdentity(0, cim:BaseVoltage).
  - Which voltage levels are part of $ObjectIdentity(1, cim:Substation) and correspond
    to base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - List all voltage levels within $ObjectIdentity(1, cim:Substation) having $ObjectIdentity(0,
    cim:BaseVoltage) as their base voltage.
  - Which voltage levels in $ObjectIdentity(1, cim:Substation) operate with base voltage
    $ObjectIdentity(0, cim:BaseVoltage)?
  questions:
  - expected_steps:
    - - args:
          query: f1769624
        name: iri_discovery
        output: urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 300kV
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_07c8ad11cb728f96f5feb4b301d251e8
    nl_question: Which voltage levels in f1769624 operate with base voltage 300kV?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769624-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769648-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90159
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_49a763cb4009f9fa17a9a4aa465e0db4
    nl_question: Which voltage levels are part of f1769648-9aeb-11e5-91da-b8763fd99c5f
      and correspond to base voltage 2dd90159?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769648-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ae-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0f4a58197b7171e8cc87340f9881db2c
    nl_question: Identify the voltage levels in f17696ae-9aeb-11e5-91da-b8763fd99c5f
      that have a base voltage of 2dd90159-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Substation): urn:uuid:f17696ae-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: GEILO
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_52b525648a85505945fcadada9f99672
    nl_question: List all voltage levels within GEILO having 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      as their base voltage.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769688
        name: iri_discovery
        output: urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            <urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0c47fc1b79cbb07ba542f5a32686df54
    nl_question: Identify the voltage levels in f1769688 that have a base voltage
      of 2dd90159-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.BaseVoltage {$ObjectIdentity(0, cim:BaseVoltage)} ;

    cim:VoltageLevel.Substation {$ObjectIdentity(1, cim:Substation)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .

    {$ObjectIdentity(1, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_3650b483f10ee53eb684799c278ef4b4
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/ns#VoltageLevel.Bays), substation (https://cim.ucaiug.io/ns#VoltageLevel.Substation)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters bay, substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Bays
    type: https://cim.ucaiug.io/ns#Bay
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which voltage level contains the bay $ObjectIdentity(0, cim:Bay) and belongs to
    the substation $ObjectIdentity(1, cim:Substation)?
  - Identify the voltage level that includes bay $ObjectIdentity(0, cim:Bay) and is
    part of substation $ObjectIdentity(1, cim:Substation).
  - What is the voltage level containing $ObjectIdentity(0, cim:Bay) and associated
    with $ObjectIdentity(1, cim:Substation)?
  - List the voltage level that has the bay $ObjectIdentity(0, cim:Bay) and belongs
    to substation $ObjectIdentity(1, cim:Substation).
  - Find the voltage level associated with bay $ObjectIdentity(0, cim:Bay) and substation
    $ObjectIdentity(1, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: KRISTIANSAND
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        name: iri_discovery
        output: urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d> a cim:Bay ;

            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_df5ba7e8d5d240563ac55db41093ba67
    nl_question: Which voltage level contains the bay 9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
      and belongs to the substation KRISTIANSAND?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
      $ObjectIdentity(1, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: ARENDAL 300AS1
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3f0a8313f5a32c4ecab7e01e35ee849c
    nl_question: Which voltage level contains the bay ARENDAL 300AS1 and belongs to
      the substation f1769670-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b90588842d26d3240e2ac1370b2cf36e
    nl_question: List the voltage level that has the bay b61b6279-c21e-8241-aeb7-8d9bd3ead57c
      and belongs to substation f1769670-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 07a43fc4
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_56e186658ceccd296430ab908da1ec35
    nl_question: Find the voltage level associated with bay 07a43fc4 and substation
      f1769670-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIANSAND
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 58f5a32f
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Bays <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            ;

            cim:VoltageLevel.Substation <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e56f8e3a9423c914283f74f32c24ab24
    nl_question: Which voltage level contains the bay 58f5a32f and belongs to the
      substation KRISTIANSAND?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
      $ObjectIdentity(1, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Bays {$ObjectIdentity(0, cim:Bay)} ;

    cim:VoltageLevel.Substation {$ObjectIdentity(1, cim:Substation)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .

    {$ObjectIdentity(1, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_2303a1f4a98aaee00a03af679bedddb8
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for connectivitynodecontainer (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.ConnectivityNodes,
    https://cim.ucaiug.io/ns#ConnectivityNode.ConnectivityNodeContainer) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters connectivitynodecontainer and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.ConnectivityNodes
    - https://cim.ucaiug.io/ns#ConnectivityNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which voltage levels are connected to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - Identify the voltage levels associated with $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What voltage levels are linked to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - List the voltage levels connected to $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - Find all voltage levels associated with the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer).
  questions:
  - expected_steps:
    - - args:
          query: f17696c6
        name: iri_discovery
        output: urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d77e34923cc53e9ffe77c54c3ddfebd8
    nl_question: What voltage levels are linked to the connectivity node container
      f17696c6?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176966c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_47a4fee499a6411525fc720cbf0f9a71
    nl_question: Identify the voltage levels associated with f176966c-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   300
        name: iri_discovery
        output: urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a38a1e436ce60dbd3ac550db66cf7f64
    nl_question: List the voltage levels connected to ASKER   300.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ba
        name: iri_discovery
        output: urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f1e46f1130b066179db63ed9235eec1c
    nl_question: Which voltage levels are connected to the connectivity node container
      f17695ba?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ed-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_81e46366ef54c4cec39d40ae61afa864
    nl_question: List the voltage levels connected to f17695ed-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.ConnectivityNodeContainer
    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_1a6270d734b86f9290aa86b6fc2ea20e
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for terminal (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.ConnectivityNodes,
    https://cim.ucaiug.io/ns#ConnectivityNode.Terminals) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters terminal and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.ConnectivityNodes
    - https://cim.ucaiug.io/ns#ConnectivityNode.Terminals
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which voltage level is associated with the terminal $ObjectIdentity(0, cim:Terminal)?
  - Identify the voltage level containing the terminal $ObjectIdentity(0, cim:Terminal).
  - What voltage level does the terminal $ObjectIdentity(0, cim:Terminal) belong to?
  - List the voltage level where terminal $ObjectIdentity(0, cim:Terminal) is located.
  - Provide the voltage level linked to the terminal $ObjectIdentity(0, cim:Terminal).
  questions:
  - expected_steps:
    - - args:
          query: e3ef93a1-723a-224e-8863-472e4f269633
        name: iri_discovery
        output: urn:uuid:e3ef93a1-723a-224e-8863-472e4f269633
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.Terminals
            <urn:uuid:e3ef93a1-723a-224e-8863-472e4f269633> .

            <urn:uuid:e3ef93a1-723a-224e-8863-472e4f269633> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_aa68916aab15392841b14e4157eedd11
    nl_question: Provide the voltage level linked to the terminal e3ef93a1-723a-224e-8863-472e4f269633.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:e3ef93a1-723a-224e-8863-472e4f269633
  - expected_steps:
    - - args:
          query: a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5
        name: iri_discovery
        output: urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.Terminals
            <urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5> .

            <urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c0dbeaed2d52fd1f609c24d78554f7ff
    nl_question: Identify the voltage level containing the terminal a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5
  - expected_steps:
    - - args:
          query: T2
        name: iri_discovery
        output: urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.Terminals
            <urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_9c506dfafe7c65dbc40a653c05391bc9
    nl_question: Which voltage level is associated with the terminal T2?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90376-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 0dae5d37
        name: iri_discovery
        output: urn:uuid:0dae5d37-4d01-3645-9e94-607410c5ac34
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.Terminals
            <urn:uuid:0dae5d37-4d01-3645-9e94-607410c5ac34> .

            <urn:uuid:0dae5d37-4d01-3645-9e94-607410c5ac34> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b9abb0b35e4a6999c7fba275083d9610
    nl_question: Which voltage level is associated with the terminal 0dae5d37?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:0dae5d37-4d01-3645-9e94-607410c5ac34
  - expected_steps:
    - - args:
          query: e035c87e-704d-404f-8ea8-91c62e0d7d8a
        name: iri_discovery
        output: urn:uuid:e035c87e-704d-404f-8ea8-91c62e0d7d8a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.Terminals
            <urn:uuid:e035c87e-704d-404f-8ea8-91c62e0d7d8a> .

            <urn:uuid:e035c87e-704d-404f-8ea8-91c62e0d7d8a> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_68c935cabd89c54cec19d7022b7e489d
    nl_question: Which voltage level is associated with the terminal e035c87e-704d-404f-8ea8-91c62e0d7d8a?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:e035c87e-704d-404f-8ea8-91c62e0d7d8a
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.Terminals
    {$ObjectIdentity(0, cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_b36f872436c08e1c191661bde6e87595
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for topologicalnode (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.ConnectivityNodes,
    https://cim.ucaiug.io/ns#ConnectivityNode.TopologicalNode) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters topologicalnode and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.ConnectivityNodes
    - https://cim.ucaiug.io/ns#ConnectivityNode.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which voltage level contains the topological node $ObjectIdentity(0, cim:TopologicalNode)?
  - Identify the voltage level associated with the topological node $ObjectIdentity(0,
    cim:TopologicalNode).
  - What is the voltage level that includes the topological node $ObjectIdentity(0,
    cim:TopologicalNode)?
  - List the voltage level linked to the topological node $ObjectIdentity(0, cim:TopologicalNode).
  - In which voltage level is the topological node $ObjectIdentity(0, cim:TopologicalNode)
    located?
  questions:
  - expected_steps:
    - - args:
          query: DAGALI
        name: iri_discovery
        output: urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7a9f36f037e9f42cce1c25a973de3a7a
    nl_question: In which voltage level is the topological node DAGALI located?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 47eb7c29
        name: iri_discovery
        output: urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70> .

            <urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_420fd07db4baff14b204b8f38e523bfc
    nl_question: List the voltage level linked to the topological node 47eb7c29.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: f176961f
        name: iri_discovery
        output: urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ec37d49d13175390755768e4926cccc4
    nl_question: Identify the voltage level associated with the topological node f176961f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176961f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d3
        name: iri_discovery
        output: urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_93e6216d867825c10f48a1cc39ac1ed8
    nl_question: What is the voltage level that includes the topological node f17695d3?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695d3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIA_HVDC
        name: iri_discovery
        output: urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
            <urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c1b0ebe978cc69b520df07ab041110a2
    nl_question: List the voltage level linked to the topological node KRISTIA_HVDC.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769677-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.ConnectivityNodes/cim:ConnectivityNode.TopologicalNode
    {$ObjectIdentity(0, cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_144d32c9c845707bfdb8c1b80e751808
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for topologicalisland (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters topologicalisland and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which voltage levels are associated with the topological island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  - Identify voltage levels connected to the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - What voltage levels belong to the topological island $ObjectIdentity(0, cim:TopologicalIsland)?
  - List all voltage levels within the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  - What are the voltage levels linked to $ObjectIdentity(0, cim:TopologicalIsland)?
  questions:
  - expected_steps:
    - - args:
          query: b04002c8
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.AngleRefTopologicalIsland
            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_cc3a5e8e4a048bc5bdad679aa07fccdf
    nl_question: List all voltage levels within the topological island b04002c8.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.AngleRefTopologicalIsland
    {$ObjectIdentity(0, cim:TopologicalIsland)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_b006deea6753c7cf08ba52aac43ca8b8
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for basevoltage (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters basevoltage and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which voltage levels are associated with the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - Identify voltage levels that use the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - List all voltage levels connected to the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - What voltage levels correspond to base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - Provide the voltage levels that are related to base voltage $ObjectIdentity(0,
    cim:BaseVoltage).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.BaseVoltage
            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769690-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_55df4ffb4f2c10b409f07c852a3f2507
    nl_question: List all voltage levels connected to the base voltage 2dd90169.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 420kV
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.BaseVoltage
            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7d74185b65d263cbce49948b8d9a7b98
    nl_question: Which voltage levels are associated with the base voltage 420kV?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 135kV
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.BaseVoltage
            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c70f95604b0bd51e3689bab5c17ef204
    nl_question: Provide the voltage levels that are related to base voltage 135kV.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.BaseVoltage
    {$ObjectIdentity(0, cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_f9d6fb0ea54990335bb4e3839987fd38
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for connectivitynodecontainer (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer) and by filter
    properties none.
  filters: []
  name: List voltagelevel by parameters connectivitynodecontainer and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which voltage levels are part of the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  - Identify the voltage levels associated with $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What voltage levels belong to the connectivity container $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  - List all voltage levels connected to $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What are the voltage levels within $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  questions:
  - expected_steps:
    - - args:
          query: f1769650-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a70051d4d3cee2ac841a83c3181aeb40
    nl_question: List all voltage levels connected to f1769650-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769638-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_51c25bd439b04283fd52725177a8a320
    nl_question: What voltage levels belong to the connectivity container f1769638-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769672-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_01a87075e383de0e4d9a6543baf260d0
    nl_question: List all voltage levels connected to f1769672-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769626
        name: iri_discovery
        output: urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ca7256f7a36f6d82d24ec42891ff4d10
    nl_question: What voltage levels belong to the connectivity container f1769626?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769660
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fac71adda5e0b88ec14f218b202ff739
    nl_question: Identify the voltage levels associated with f1769660.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_110d523af0ae8045f1461079cbb0b34b
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for connectivitynode (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters connectivitynode and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - Which voltage levels contain the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)?
  - Identify the voltage levels that have $ObjectIdentity(0, cim:ConnectivityNode)
    as one of their connectivity nodes.
  - What voltage levels include the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)?
  - List the voltage levels associated with the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  - Find the voltage levels that are linked to the connectivity node $ObjectIdentity(0,
    cim:ConnectivityNode).
  questions:
  - expected_steps:
    - - args:
          query: 'TRONDHEIM   '
        name: iri_discovery
        output: urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e2c3036ec6bf32a324e438e27cb7de8a
    nl_question: Which voltage levels contain the connectivity node TRONDHEIM   ?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARENDAL CN 003
        name: iri_discovery
        output: urn:uuid:c270f00c-d35c-384d-82bf-ff0883b1eb41
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:c270f00c-d35c-384d-82bf-ff0883b1eb41> .

            <urn:uuid:c270f00c-d35c-384d-82bf-ff0883b1eb41> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7d724ac917f60e961aa73c76e179781a
    nl_question: List the voltage levels associated with the connectivity node ARENDAL
      CN 003.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:c270f00c-d35c-384d-82bf-ff0883b1eb41
  - expected_steps:
    - - args:
          query: 70075010-ec3b-4f48-aa6f-a8b0b0a68c8c
        name: iri_discovery
        output: urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c> .

            <urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f6f816b9612887d7bffdcac43e6c4183
    nl_question: List the voltage levels associated with the connectivity node 70075010-ec3b-4f48-aa6f-a8b0b0a68c8c.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c
  - expected_steps:
    - - args:
          query: acb47937-7b0b-5b48-aa5c-1bfea476304c
        name: iri_discovery
        output: urn:uuid:acb47937-7b0b-5b48-aa5c-1bfea476304c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:acb47937-7b0b-5b48-aa5c-1bfea476304c> .

            <urn:uuid:acb47937-7b0b-5b48-aa5c-1bfea476304c> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ad734f0784feceb4f3ebd963a846d623
    nl_question: List the voltage levels associated with the connectivity node acb47937-7b0b-5b48-aa5c-1bfea476304c.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:acb47937-7b0b-5b48-aa5c-1bfea476304c
  - expected_steps:
    - - args:
          query: f176967b
        name: iri_discovery
        output: urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_1f3c75c914e08b9d88341c32675ab376
    nl_question: What voltage levels include the connectivity node f176967b?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f176967b-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
    {$ObjectIdentity(0, cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_c45fcfd3bc3df48dfb0bcee7c102d034
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for svvoltage (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters svvoltage and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage
    type: https://cim.ucaiug.io/ns#SvVoltage
  paraphrases:
  - Which voltage level is associated with $ObjectIdentity(0, cim:SvVoltage)?
  - Identify the voltage level containing $ObjectIdentity(0, cim:SvVoltage).
  - What is the voltage level connected to $ObjectIdentity(0, cim:SvVoltage)?
  - List the voltage level that $ObjectIdentity(0, cim:SvVoltage) belongs to.
  - Which voltage level is linked to $ObjectIdentity(0, cim:SvVoltage)?
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b04002df-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002df-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.SvVoltage
            <urn:uuid:b04002df-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002df-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fc7f9ba6d444aa4204f7b3943db59d22
    nl_question: What is the voltage level connected to urn:uuid:b04002df-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002df-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002e8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002e8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.SvVoltage
            <urn:uuid:b04002e8-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002e8-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_1c184213d477785c31aefc308679cb9b
    nl_question: What is the voltage level connected to urn:uuid:b04002e8-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002e8-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b0400301-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b0400301-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.SvVoltage
            <urn:uuid:b0400301-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b0400301-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bed61171269647fa8930e0d3422639aa
    nl_question: What is the voltage level connected to urn:uuid:b0400301-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b0400301-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002f5-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002f5-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.SvVoltage
            <urn:uuid:b04002f5-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002f5-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c27725098bb6a7a2ae737f5a331ebc4b
    nl_question: Which voltage level is linked to urn:uuid:b04002f5-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002f5-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.SvVoltage
            <urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_90f9d2aba57da10eef7d264ba8d3d112
    nl_question: Identify the voltage level containing urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.SvVoltage {$ObjectIdentity(0,
    cim:SvVoltage)} .

    {$ObjectIdentity(0, cim:SvVoltage)} a cim:SvVoltage ;

    .'
  template_id: template_list_da524d2e3edb23859fe2394579d3de4e
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for terminal (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.Terminal) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters terminal and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which voltage level is associated with the terminal $ObjectIdentity(0, cim:Terminal)?
  - Identify the voltage level containing the terminal $ObjectIdentity(0, cim:Terminal).
  - What voltage level is linked to $ObjectIdentity(0, cim:Terminal)?
  - List the voltage level that includes the terminal $ObjectIdentity(0, cim:Terminal).
  - In which voltage level can the terminal $ObjectIdentity(0, cim:Terminal) be found?
  questions:
  - expected_steps:
    - - args:
          query: 2dd9045c
        name: iri_discovery
        output: urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.Terminal
            <urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_eb2b9e8c6b02dcdc1d364ec0b94b45c0
    nl_question: Which voltage level is associated with the terminal 2dd9045c?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd9045c-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90391-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.Terminal
            <urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_92c16d191609b972c322d47d70800daf
    nl_question: In which voltage level can the terminal 2dd90391-bdfb-11e5-94fa-c8f73332c8f4
      be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90391-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90447
        name: iri_discovery
        output: urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.Terminal
            <urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_397050e2d4eb68a2abb7d2d410d26f5c
    nl_question: What voltage level is linked to 2dd90447?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90447-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90435-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.Terminal
            <urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e4ac2efe0e62fe026e3456839175a885
    nl_question: List the voltage level that includes the terminal 2dd90435-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90435-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90379
        name: iri_discovery
        output: urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.Terminal
            <urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e68bf4ecca73f77f5a90c296edc13244
    nl_question: In which voltage level can the terminal 2dd90379 be found?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90379-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.Terminal {$ObjectIdentity(0,
    cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_4c786c95102ac09eabe09ea9b4de8f7d
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for topologicalisland (https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland) and by filter properties
    none.
  filters: []
  name: List voltagelevel by parameters topologicalisland and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConnectivityNodeContainer.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which voltage levels are part of the topological island $ObjectIdentity(0, cim:TopologicalIsland)?
  - List all voltage levels connected to the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - What are the voltage levels associated with $ObjectIdentity(0, cim:TopologicalIsland)?
  - Identify the voltage levels within the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  - Voltage levels in the topological island $ObjectIdentity(0, cim:TopologicalIsland)
    include which elements?
  questions:
  - expected_steps:
    - - args:
          query: b04002c8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.TopologicalIsland
            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769678-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769690-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_45c16e1d16d1cd038b8064ec2f11291d
    nl_question: What are the voltage levels associated with b04002c8-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:ConnectivityNodeContainer.TopologicalNode/cim:TopologicalNode.TopologicalIsland
    {$ObjectIdentity(0, cim:TopologicalIsland)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_c0fd395d005654e0ffc0cb0cef54b724
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for subgeographicalregion (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/ns#Substation.Region) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters subgeographicalregion and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/ns#Substation.Region
    type: https://cim.ucaiug.io/ns#SubGeographicalRegion
  paraphrases:
  - Which voltage levels are in the region $ObjectIdentity(0, cim:SubGeographicalRegion)?
  - List all voltage levels located within the region $ObjectIdentity(0, cim:SubGeographicalRegion).
  - What voltage levels are associated with the sub-geographical region $ObjectIdentity(0,
    cim:SubGeographicalRegion)?
  - Identify the voltage levels present in $ObjectIdentity(0, cim:SubGeographicalRegion)
    region.
  - What are the voltage levels within the region $ObjectIdentity(0, cim:SubGeographicalRegion)?
  questions:
  - expected_steps:
    - - args:
          query: f17695cd
        name: iri_discovery
        output: urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.Region <urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_2a011c553e440f0466f280254c71a3fa
    nl_question: What are the voltage levels within the region f17695cd?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695cd-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: NO4 SGR
        name: iri_discovery
        output: urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.Region <urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_433c2f70320b1384a5cc3af8bd2886a1
    nl_question: List all voltage levels located within the region NO4 SGR.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17696a3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769699-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.Region <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8807c2fb069db63a1c7963bae4dd3b01
    nl_question: Which voltage levels are in the region f1769699-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769699-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769619-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.Region <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769638-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176962c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176961a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ce063b707736c75c4b86025be977ec37
    nl_question: Identify the voltage levels present in f1769619-9aeb-11e5-91da-b8763fd99c5f
      region.
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f1769619-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695af
        name: iri_discovery
        output: urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.Region <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f> a cim:SubGeographicalRegion
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695d4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c865c542be981d74ae08236119ad69c3
    nl_question: Which voltage levels are in the region f17695af?
    parameter_bindings:
      $ObjectIdentity(0, cim:SubGeographicalRegion): urn:uuid:f17695af-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cim:Substation.Region {$ObjectIdentity(0, cim:SubGeographicalRegion)}
    .

    {$ObjectIdentity(0, cim:SubGeographicalRegion)} a cim:SubGeographicalRegion ;

    .'
  template_id: template_list_ab24dd0fb8ff7a757906758aecd5f951
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for voltagelevel (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/ns#Substation.VoltageLevels) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters voltagelevel and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/ns#Substation.VoltageLevels
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which voltage levels are associated with the same substation as $ObjectIdentity(0,
    cim:VoltageLevel)?
  - Identify the other voltage levels within the substation of $ObjectIdentity(0,
    cim:VoltageLevel).
  - What voltage levels are also part of the substation containing $ObjectIdentity(0,
    cim:VoltageLevel)?
  - List all voltage levels that belong to the same substation as $ObjectIdentity(0,
    cim:VoltageLevel).
  - The substation of $ObjectIdentity(0, cim:VoltageLevel) contains which other voltage
    levels?
  questions:
  - expected_steps:
    - - args:
          query: f176967e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.VoltageLevels <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_82926c037ea58e02b2ad51ef6af33357
    nl_question: What voltage levels are also part of the substation containing f176967e-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HELSINKI420
        name: iri_discovery
        output: urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.VoltageLevels <urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_63772ad02d6da134ce822a3302e2cbc2
    nl_question: Identify the other voltage levels within the substation of HELSINKI420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f3
        name: iri_discovery
        output: urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.VoltageLevels <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_09182d3afc5204b892eff469ca67f060
    nl_question: Identify the other voltage levels within the substation of f17695f3.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SYSLE   420
        name: iri_discovery
        output: urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.VoltageLevels <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_4178803bc7ca94c1afeb1f1c41c37161
    nl_question: The substation of SYSLE   420 contains which other voltage levels?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: JARPSTRO420
        name: iri_discovery
        output: urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cim:Substation.VoltageLevels <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_55089609cf6c727f9600e8e25a4949b8
    nl_question: List all voltage levels that belong to the same substation as JARPSTRO420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e1-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cim:Substation.VoltageLevels {$ObjectIdentity(0, cim:VoltageLevel)}
    .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_bfde2db722f9361ea218f8cd52b151a0
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for generatingunit (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters generatingunit and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which voltage level is associated with $ObjectIdentity(0, cim:GeneratingUnit)?
  - Identify the voltage level containing $ObjectIdentity(0, cim:GeneratingUnit).
  - What is the voltage level where $ObjectIdentity(0, cim:GeneratingUnit) is located?
  - List the voltage levels that include $ObjectIdentity(0, cim:GeneratingUnit).
  - Which voltage level does $ObjectIdentity(0, cim:GeneratingUnit) belong to?
  questions:
  - expected_steps:
    - - args:
          query: f17699b1
        name: iri_discovery
        output: urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_1eb4f3c5b8d2f7fb53afdda40772bcc8
    nl_question: Which voltage level is associated with f17699b1?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17699b1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769976-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769690-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_550afb9249f888b922be568dd554b01a
    nl_question: Which voltage level does f1769976-9aeb-11e5-91da-b8763fd99c5f belong
      to?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769976-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TRONDHEIG4
        name: iri_discovery
        output: urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b63cd0db7b53212ec7ea3c4dd29d001f
    nl_question: Identify the voltage level containing TRONDHEIG4.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769993-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a01
        name: iri_discovery
        output: urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_56855c840dbbbe11a43fe6c7e90f1ed7
    nl_question: Which voltage level is associated with f1769a01?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176990e
        name: iri_discovery
        output: urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8336ae84aaeed760da2d5c05b3092f6e
    nl_question: What is the voltage level where f176990e is located?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f176990e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPart {$ObjectIdentity(0, cim:GeneratingUnit)}
    .

    {$ObjectIdentity(0, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_c7374b15aa7d9c60883ea0ce45549625
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for powertransformer (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters powertransformer and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - What voltage level is associated with $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the voltage level that includes $ObjectIdentity(0, cim:PowerTransformer).
  - Which voltage level contains the power transformer $ObjectIdentity(0, cim:PowerTransformer)?
  - List the voltage level linked to $ObjectIdentity(0, cim:PowerTransformer).
  - What is the voltage level of $ObjectIdentity(0, cim:PowerTransformer)?
  questions:
  - expected_steps:
    - - args:
          query: f1769e30
        name: iri_discovery
        output: urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769684-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fed152b24627166560036575c0dd497d
    nl_question: List the voltage level linked to f1769e30.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e30-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769d8e
        name: iri_discovery
        output: urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_1615824287b4fc3f663c0cab62d0d601
    nl_question: What is the voltage level of f1769d8e?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769de8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f65f683d4a39e7972bad942348e677b9
    nl_question: What voltage level is associated with f1769de8-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769dfa-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bb53440d0659695ec74408081d79d073
    nl_question: What is the voltage level of f1769dfa-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dfa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769e0c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769666-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_455a53bb45a4018c81d7cb86e0c24544
    nl_question: What is the voltage level of f1769e0c-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e0c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPart {$ObjectIdentity(0, cim:PowerTransformer)}
    .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_205ee06e0a13ed72fb60f116500ed83d
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for voltagelevel (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters voltagelevel and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which substations contain the voltage level $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the substations associated with voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - What substations have $ObjectIdentity(0, cim:VoltageLevel) as a part of their
    structure?
  - List the substations connected to the voltage level $ObjectIdentity(0, cim:VoltageLevel).
  - The voltage level $ObjectIdentity(0, cim:VoltageLevel) belongs to which substation?
  questions:
  - expected_steps:
    - - args:
          query: f17696ba-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_4fe115497b71e6b63d2f4c02c28b9b31
    nl_question: Which substations contain the voltage level f17696ba-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: AJAURE  300
        name: iri_discovery
        output: urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0317091a08b2fbe4e242d405e776e11d
    nl_question: List the substations connected to the voltage level AJAURE  300.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ce-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_fec29e395ea891cb5f15116c12113f35
    nl_question: What substations have f17695ce-9aeb-11e5-91da-b8763fd99c5f as a part
      of their structure?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176960a
        name: iri_discovery
        output: urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_cdb1bebf30f98e8e3583dcd3b3dfcf92
    nl_question: Which substations contain the voltage level f176960a?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769626
        name: iri_discovery
        output: urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPart <urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_373cb89db998ee3d88fa640cb3553e64
    nl_question: Identify the substations associated with voltage level f1769626.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPart {$ObjectIdentity(0, cim:VoltageLevel)}
    .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_d5760381a92420fba0872146cc605d75
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for generatingunit (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters generatingunit and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#GeneratingUnit
  paraphrases:
  - Which voltage level contains the substation with $ObjectIdentity(0, cim:GeneratingUnit)?
  - What is the voltage level of the substation associated with $ObjectIdentity(0,
    cim:GeneratingUnit)?
  - Identify the voltage level containing the substation with $ObjectIdentity(0, cim:GeneratingUnit).
  - In which voltage level is the substation of $ObjectIdentity(0, cim:GeneratingUnit)
    located?
  - List the voltage levels linked to the substation with $ObjectIdentity(0, cim:GeneratingUnit).
  questions:
  - expected_steps:
    - - args:
          query: HELSINKIG3
        name: iri_discovery
        output: urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d79ed82224abcccb7ab77a8bb43c4832
    nl_question: List the voltage levels linked to the substation with HELSINKIG3.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17699c8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSKARSHAG3
        name: iri_discovery
        output: urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_11ac8f52f0b5fdbe7bff0414735a1a14
    nl_question: What is the voltage level of the substation associated with OSKARSHAG3?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f176988a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a01
        name: iri_discovery
        output: urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e4fb91973d3a786d6dda43c64ff125d4
    nl_question: In which voltage level is the substation of f1769a01 located?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769a01-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a0e
        name: iri_discovery
        output: urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f29b907d5afbab729f75c9bed34cc00a
    nl_question: Which voltage level contains the substation with f1769a0e?
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f1769a0e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699dd-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f> a cim:GeneratingUnit ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_220e8cedbc426329dfc63da61f2ee4e7
    nl_question: List the voltage levels linked to the substation with f17699dd-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:GeneratingUnit): urn:uuid:f17699dd-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:GeneratingUnit)}
    .

    {$ObjectIdentity(0, cim:GeneratingUnit)} a cim:GeneratingUnit ;

    .'
  template_id: template_list_c7de0e917cd8baa198cd8f2df64a3e3f
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for synchronousmachine (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters synchronousmachine and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which voltage level contains the substation that has $ObjectIdentity(0, cim:SynchronousMachine)
    as a part?
  - Identify the voltage level associated with the substation containing $ObjectIdentity(0,
    cim:SynchronousMachine).
  - What voltage level is linked to the substation that includes $ObjectIdentity(0,
    cim:SynchronousMachine)?
  - List the voltage levels associated with substations having $ObjectIdentity(0,
    cim:SynchronousMachine) as a part.
  - Which voltage level corresponds to the substation to which $ObjectIdentity(0,
    cim:SynchronousMachine) belongs?
  questions:
  - expected_steps:
    - - args:
          query: f176999f-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176999f-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176999f-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176999f-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696a4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_227b8e59b1901f7332b5656ee5fba36c
    nl_question: Which voltage level corresponds to the substation to which f176999f-9aeb-11e5-91da-b8763fd99c5f
      belongs?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f176999f-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSKARSHA420 M2
        name: iri_discovery
        output: urn:uuid:f1769886-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769886-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769886-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b8250834895d331d06ab875af3125aa9
    nl_question: List the voltage levels associated with substations having OSKARSHA420
      M2 as a part.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769886-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769876-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769876-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769876-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769876-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_60cbc41fef532388a567c1958a75b735
    nl_question: Which voltage level contains the substation that has f1769876-9aeb-11e5-91da-b8763fd99c5f
      as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769876-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769861-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769861-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769861-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769861-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_300b31c0a83d247a5f6a43106716e46e
    nl_question: Identify the voltage level associated with the substation containing
      f1769861-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769861-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769a20-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_21f3277cc5a701dcc7fc9385d2b6f78b
    nl_question: Which voltage level corresponds to the substation to which f1769a20-9aeb-11e5-91da-b8763fd99c5f
      belongs?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769a20-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:SynchronousMachine)}
    .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_4a49a987b77eafd29fd6a3e71bd30649
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for powertransformer (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters powertransformer and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which voltage level is associated with the substation containing $ObjectIdentity(0,
    cim:PowerTransformer)?
  - Identify the voltage level linked to the substation housing $ObjectIdentity(0,
    cim:PowerTransformer).
  - What voltage level is connected to the substation where $ObjectIdentity(0, cim:PowerTransformer)
    is located?
  - List the voltage level associated with the substation that includes $ObjectIdentity(0,
    cim:PowerTransformer).
  - Which voltage level is tied to the substation containing the power transformer
    $ObjectIdentity(0, cim:PowerTransformer)?
  questions:
  - expected_steps:
    - - args:
          query: AJAURE  T1
        name: iri_discovery
        output: urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_95e56b15f4bec43ecf3e79d2f34ba422
    nl_question: What voltage level is connected to the substation where AJAURE  T1
      is located?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769d8e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SIMA    T1
        name: iri_discovery
        output: urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769626-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_002cbb4c29aaf77379da555d1c31b73c
    nl_question: List the voltage level associated with the substation that includes
      SIMA    T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769dc4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HALDEN  T1
        name: iri_discovery
        output: urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_4d98145fbab400cdb753a1c8947297b1
    nl_question: What voltage level is connected to the substation where HALDEN  T1
      is located?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769db2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: OSLO    T2
        name: iri_discovery
        output: urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_4b7b4144f9ad3d1ba44f6021b3303fd8
    nl_question: Identify the voltage level linked to the substation housing OSLO    T2.
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769de8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769da0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_3041bf812a824e508949b3843e5fead5
    nl_question: Which voltage level is associated with the substation containing
      f1769da0-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769da0-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:PowerTransformer)}
    .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_ed72b15336d425767fe550dc072709ed
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for busbarsection (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters busbarsection and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which voltage level contains the busbar section $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the voltage level associated with the busbar section $ObjectIdentity(0,
    cim:BusbarSection).
  - What is the voltage level that includes the busbar section $ObjectIdentity(0,
    cim:BusbarSection)?
  - List the voltage level containing the busbar section $ObjectIdentity(0, cim:BusbarSection).
  - The busbar section $ObjectIdentity(0, cim:BusbarSection) is part of which voltage
    level?
  questions:
  - expected_steps:
    - - args:
          query: PORJUS  420 A
        name: iri_discovery
        output: urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0b55585a6b0fcfed3b1101dc142e0d99
    nl_question: Which voltage level contains the busbar section PORJUS  420 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90161-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90187
        name: iri_discovery
        output: urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c83389f1ee3120d8a0af6f83e2636576
    nl_question: The busbar section 2dd90187 is part of which voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90187-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90167
        name: iri_discovery
        output: urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695da-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_9bcfc6589fc7dea81cffa02eb998686a
    nl_question: Identify the voltage level associated with the busbar section 2dd90167.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90167-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: b8666715
        name: iri_discovery
        output: urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5>
            .

            <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_da3e98712409f5a454e24d7ddc2978ce
    nl_question: The busbar section b8666715 is part of which voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
  - expected_steps:
    - - args:
          query: NARVIK  420 A
        name: iri_discovery
        output: urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c47a62979e758ee7b2fbecbb1351defe
    nl_question: Which voltage level contains the busbar section NARVIK  420 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b1-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:BusbarSection)}
    .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_eae43333a9de2a0925ddd4fdc0dd487a
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for conformload (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters conformload and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which voltage level contains the substation that has $ObjectIdentity(0, cim:ConformLoad)
    as a part?
  - Identify the voltage level associated with the substation containing $ObjectIdentity(0,
    cim:ConformLoad).
  - What is the voltage level of the substation that includes $ObjectIdentity(0, cim:ConformLoad)?
  - List the voltage levels of substations that have $ObjectIdentity(0, cim:ConformLoad)
    as part of their structure.
  - In which voltage level can the substation containing $ObjectIdentity(0, cim:ConformLoad)
    be found?
  questions:
  - expected_steps:
    - - args:
          query: f1769734-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a11c5525fb2503fcbeef40847e989fb0
    nl_question: Identify the voltage level associated with the substation containing
      f1769734-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769734-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696e6-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f3e0ed3cbe56cdd08c9a34600241be29
    nl_question: List the voltage levels of substations that have f17696e6-9aeb-11e5-91da-b8763fd99c5f
      as part of their structure.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RINGHALS420 L3
        name: iri_discovery
        output: urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8458d5f0f13079a5df106c74b280729f
    nl_question: What is the voltage level of the substation that includes RINGHALS420
      L3?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696fe-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696fe-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17696fe-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696fe-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_77c88aad972e4c3649f211db9afc709c
    nl_question: What is the voltage level of the substation that includes f17696fe-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696fe-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176971c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_46a212ea35060f8208a7a75993ebf66c
    nl_question: Identify the voltage level associated with the substation containing
      f176971c-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176971c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:ConformLoad)}
    .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_69d16491c58632c66f42e3b9f749b4f3
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for voltagelevel (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters voltagelevel and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - What voltage levels are associated with the substation of $ObjectIdentity(0, cim:VoltageLevel)?
  - List the voltage levels connected to the substation containing $ObjectIdentity(0,
    cim:VoltageLevel).
  - Which voltage levels are part of the same substation as $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify all voltage levels within the substation including $ObjectIdentity(0,
    cim:VoltageLevel).
  - What other voltage levels are in the substation to which $ObjectIdentity(0, cim:VoltageLevel)
    belongs?
  questions:
  - expected_steps:
    - - args:
          query: f176964a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_220395afa95505ccda3595a1b5211b9c
    nl_question: Which voltage levels are part of the same substation as f176964a-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176964a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: AJAURE  300
        name: iri_discovery
        output: urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_5061d2e04321064824a2fc41df9e9f93
    nl_question: Identify all voltage levels within the substation including AJAURE  300.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695e7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_2df877ccb16e9b74f7718e214e4ceb66
    nl_question: Identify all voltage levels within the substation including f17695e7-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176969a
        name: iri_discovery
        output: urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_a739f743e97f48ee5dcb6692a2e10e69
    nl_question: List the voltage levels connected to the substation containing f176969a.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ba-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_6353af7e815b0027cf8134ceaa2eb9fe
    nl_question: Identify all voltage levels within the substation including f17696ba-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:VoltageLevel)}
    .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_13f90041817bda446453cb123e021731
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for substation (https://cim.ucaiug.io/ns#VoltageLevel.Substation, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters substation and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which voltage levels are connected through parts in $ObjectIdentity(0, cim:Substation)?
  - List the voltage levels directly connected to $ObjectIdentity(0, cim:Substation).
  - What voltage levels are associated with $ObjectIdentity(0, cim:Substation) through
    connected parts?
  - Identify all voltage levels linked to $ObjectIdentity(0, cim:Substation) via connected
    parts.
  - Which voltage levels are related to $ObjectIdentity(0, cim:Substation) through
    part connections?
  questions:
  - expected_steps:
    - - args:
          query: f17695be-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695c4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_95856acb3c69671dbb6142aa57042df0
    nl_question: List the voltage levels directly connected to f17695be-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HALDEN
        name: iri_discovery
        output: urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_6f91e1988c56f5ce405a1840f0e7bfec
    nl_question: Identify all voltage levels linked to HALDEN via connected parts.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_da256956e27d4504216375b81f39eb2d
    nl_question: Which voltage levels are connected through parts in f1769670-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769630
        name: iri_discovery
        output: urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f2b7417f45e52d8780402e8d3b3ab22f
    nl_question: Which voltage levels are related to f1769630 through part connections?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769630-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769694
        name: iri_discovery
        output: urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176969a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_84f2a1651622adb2a1c6a742c06a1a07
    nl_question: What voltage levels are associated with f1769694 through connected
      parts?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_631f4cb15c6a19d2f777541430190dec
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for voltagelevel (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#connectedThroughPart) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters voltagelevel and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which voltage levels are connected through $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the voltage levels associated with $ObjectIdentity(0, cim:VoltageLevel)
    via connection.
  - What voltage levels are linked to $ObjectIdentity(0, cim:VoltageLevel)?
  - List all voltage levels connected with $ObjectIdentity(0, cim:VoltageLevel).
  - What are the other voltage levels directly connected to $ObjectIdentity(0, cim:VoltageLevel)?
  questions:
  - expected_steps:
    - - args:
          query: f17696ba
        name: iri_discovery
        output: urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8c5afdf6f6e83cbe2bd24eabab931de2
    nl_question: What are the other voltage levels directly connected to f17696ba?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695e7
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769600-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_c68e5030143a4a5b13ba9e7662cc9af7
    nl_question: What voltage levels are linked to f17695e7?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ce
        name: iri_discovery
        output: urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_5b5e58f8a568305dfbc55fd158ab1444
    nl_question: What are the other voltage levels directly connected to f17695ce?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ce-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769656
        name: iri_discovery
        output: urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d8edc7e443a1c9ad8275cf3a2f392486
    nl_question: What are the other voltage levels directly connected to f1769656?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ba
        name: iri_discovery
        output: urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e4d7c32cb3d89b5bbceedc0c44165630
    nl_question: Which voltage levels are connected through f17695ba?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:connectedThroughPart {$ObjectIdentity(0, cim:VoltageLevel)}
    .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_5a6a4683dc033bade3468169650ffce9
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for line (https://cim.ucaiug.io/ns#VoltageLevel.Substation, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters line and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - Which voltage levels are connected through line $ObjectIdentity(0, cim:Line)?
  - Identify the voltage levels associated with the line $ObjectIdentity(0, cim:Line).
  - What voltage levels are linked to $ObjectIdentity(0, cim:Line)?
  - List the voltage levels connected via $ObjectIdentity(0, cim:Line).
  - Which voltage levels are associated with the connection through line $ObjectIdentity(0,
    cim:Line)?
  questions:
  - expected_steps:
    - - args:
          query: f62c7e4e
        name: iri_discovery
        output: urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc>
            .

            <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769620-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769632-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_9e41bc931e0fa961a533c8debee02120
    nl_question: What voltage levels are linked to f62c7e4e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
  - expected_steps:
    - - args:
          query: 60516059-6b3b-1a44-b5ee-d41d70d0ae65
        name: iri_discovery
        output: urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65>
            .

            <urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176963e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ac129b23708514d9d529aa974a74208f
    nl_question: List the voltage levels connected via 60516059-6b3b-1a44-b5ee-d41d70d0ae65.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:60516059-6b3b-1a44-b5ee-d41d70d0ae65
  - expected_steps:
    - - args:
          query: 75480d2b
        name: iri_discovery
        output: urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e>
            .

            <urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696d0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_37dc526901e7783d0fe98ee194786696
    nl_question: Identify the voltage levels associated with the line 75480d2b.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:75480d2b-ef8e-c042-94dc-7e4dfb9e6b1e
  - expected_steps:
    - - args:
          query: ad622f0d-2f8f-794f-8e31-8d4394fdd34b
        name: iri_discovery
        output: urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b>
            .

            <urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d12c84e9c22110a7a2d8907f3ef98454
    nl_question: Which voltage levels are connected through line ad622f0d-2f8f-794f-8e31-8d4394fdd34b?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:ad622f0d-2f8f-794f-8e31-8d4394fdd34b
  - expected_steps:
    - - args:
          query: LC 300KRISTIAN-ARENDAL
        name: iri_discovery
        output: urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8>
            .

            <urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_0a545cfdcf08e2157e5136062a81b1a8
    nl_question: Which voltage levels are connected through line LC 300KRISTIAN-ARENDAL?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:a17e9cb8-98d2-5544-8595-7ec533e070a8
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Line)}
    .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_27898477ddf7a2a4c64255408b548aa1
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for nonconformload (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters nonconformload and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which voltage level contains the substation with the non-conforming load $ObjectIdentity(0,
    cim:NonConformLoad)?
  - Identify the voltage level associated with the non-conforming load $ObjectIdentity(0,
    cim:NonConformLoad).
  - What is the voltage level corresponding to the non-conforming load $ObjectIdentity(0,
    cim:NonConformLoad) in the substation?
  - List the voltage level connected to the substation containing $ObjectIdentity(0,
    cim:NonConformLoad).
  - The non-conforming load $ObjectIdentity(0, cim:NonConformLoad) belongs to which
    voltage level of the substation?
  questions:
  - expected_steps:
    - - args:
          query: f17696f2
        name: iri_discovery
        output: urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_244ea5ca913318741f1471fd68311c15
    nl_question: List the voltage level connected to the substation containing f17696f2.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: NARVIK  420 L1
        name: iri_discovery
        output: urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_db9b1648c1fd9b7940c5c640674f29cd
    nl_question: Identify the voltage level associated with the non-conforming load
      NARVIK  420 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697be-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_36ad7d886313cdc43486c90c68ed0556
    nl_question: Identify the voltage level associated with the non-conforming load
      f17697be-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ESTLINK 420 L1
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d406d03a7cb836767f06dacdd262624a
    nl_question: The non-conforming load ESTLINK 420 L1 belongs to which voltage level
      of the substation?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176972e
        name: iri_discovery
        output: urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d5b5394e19a7c96df2f5a4b3f89c4f7a
    nl_question: What is the voltage level corresponding to the non-conforming load
      f176972e in the substation?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:NonConformLoad)}
    .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_7419e98b2785fa5f1f9a8930737594df
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for linearshuntcompensator (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters linearshuntcompensator and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which voltage level contains the substation that includes $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the voltage level associated with the substation containing $ObjectIdentity(0,
    cim:LinearShuntCompensator).
  - What voltage level is connected to the substation having $ObjectIdentity(0, cim:LinearShuntCompensator)
    as a part?
  - List the voltage level related to the substation where $ObjectIdentity(0, cim:LinearShuntCompensator)
    is present.
  - In which voltage level is the substation that includes $ObjectIdentity(0, cim:LinearShuntCompensator)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd903fc
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ced33a8fa114968b3da7dca6592d993d
    nl_question: In which voltage level is the substation that includes 2dd903fc?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: SKIEN   420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_4e70967b3f8f14e81498277e66d6ee9d
    nl_question: Which voltage level contains the substation that includes SKIEN   420
      LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f8c4f6183516c6f3669954767d900e22
    nl_question: Which voltage level contains the substation that includes 2dd903f9-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903f9-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d83b56085920bb650277f761787b5dbc
    nl_question: What voltage level is connected to the substation having 2dd90408-bdfb-11e5-94fa-c8f73332c8f4
      as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: ASKER   300 LSC1
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769650-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_93d688f630a29be15c999a2ceda268fd
    nl_question: What voltage level is connected to the substation having ASKER   300
      LSC1 as a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:LinearShuntCompensator)}
    .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_4212d45cbcdd2c8c42c701cf6bec0629
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for breaker (https://cim.ucaiug.io/ns#VoltageLevel.Substation, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters breaker and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - What is the voltage level that contains the substation with breaker $ObjectIdentity(0,
    cim:Breaker)?
  - Identify the voltage level that has the breaker $ObjectIdentity(0, cim:Breaker)
    as part of its substation.
  - Which voltage level is associated with the substation containing $ObjectIdentity(0,
    cim:Breaker)?
  - List the voltage level where the breaker $ObjectIdentity(0, cim:Breaker) belongs
    to its substation.
  - Find the voltage level connected to the substation that includes breaker $ObjectIdentity(0,
    cim:Breaker).
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300G2  AB_S
        name: iri_discovery
        output: urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305>
            .

            <urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8b8b028e8038c864a139f62d42d9f125
    nl_question: Which voltage level is associated with the substation containing
      KRISTIAN300G2  AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305
  - expected_steps:
    - - args:
          query: 0169b8e7-c05b-3640-b55e-22b40081ca21
        name: iri_discovery
        output: urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21>
            .

            <urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_ab41f222bc80ea52594017ea47839d62
    nl_question: Identify the voltage level that has the breaker 0169b8e7-c05b-3640-b55e-22b40081ca21
      as part of its substation.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21
  - expected_steps:
    - - args:
          query: 128ca899
        name: iri_discovery
        output: urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e>
            .

            <urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_63127c0720a59a4d5ef004304c5c14de
    nl_question: Identify the voltage level that has the breaker 128ca899 as part
      of its substation.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e
  - expected_steps:
    - - args:
          query: 3dd4a1cf-86dc-9649-8120-e519d7986be9
        name: iri_discovery
        output: urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9>
            .

            <urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_f6c0d6cd4fefea90e17e3e384e92cbd8
    nl_question: List the voltage level where the breaker 3dd4a1cf-86dc-9649-8120-e519d7986be9
      belongs to its substation.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9
  - expected_steps:
    - - args:
          query: 316f39b6
        name: iri_discovery
        output: urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2>
            .

            <urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_2c72b9275cdef730d318e2020dbfa89f
    nl_question: List the voltage level where the breaker 316f39b6 belongs to its
      substation.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Breaker)}
    .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_4f1ddfeb59d9c1480bda7b02d3ecd788
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for disconnector (https://cim.ucaiug.io/ns#VoltageLevel.Substation,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List voltagelevel by parameters disconnector and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which voltage level contains the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - Identify the voltage level associated with the disconnector $ObjectIdentity(0,
    cim:Disconnector).
  - What is the voltage level that includes the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - List the voltage level that $ObjectIdentity(0, cim:Disconnector) is part of.
  - What voltage level is connected to the disconnector $ObjectIdentity(0, cim:Disconnector)?
  questions:
  - expected_steps:
    - - args:
          query: 4b31bd38
        name: iri_discovery
        output: urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245>
            .

            <urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_b58370226c594876495dc11a4a367dbc
    nl_question: List the voltage level that 4b31bd38 is part of.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245
  - expected_steps:
    - - args:
          query: 674b85b4
        name: iri_discovery
        output: urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a>
            .

            <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_544760ea06b504fc21b14edf4bc6ad12
    nl_question: List the voltage level that 674b85b4 is part of.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
  - expected_steps:
    - - args:
          query: c9917527-be41-014a-9344-d9df590239e3
        name: iri_discovery
        output: urn:uuid:c9917527-be41-014a-9344-d9df590239e3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:c9917527-be41-014a-9344-d9df590239e3>
            .

            <urn:uuid:c9917527-be41-014a-9344-d9df590239e3> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_5d325650e723a1f896c5287841529c6e
    nl_question: List the voltage level that c9917527-be41-014a-9344-d9df590239e3
      is part of.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:c9917527-be41-014a-9344-d9df590239e3
  - expected_steps:
    - - args:
          query: KRISTIAN300L2  AD_S
        name: iri_discovery
        output: urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d>
            .

            <urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_35c4609391996e3d625cfb04669553de
    nl_question: What is the voltage level that includes the disconnector KRISTIAN300L2  AD_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:2366eea5-1051-1047-b1e4-ba6c741e076d
  - expected_steps:
    - - args:
          query: ecc63b62-ab62-9747-9744-92ba78e89971
        name: iri_discovery
        output: urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971>
            .

            <urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_bdf77389982eb81b4a8773045ca7871d
    nl_question: What voltage level is connected to the disconnector ecc63b62-ab62-9747-9744-92ba78e89971?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Disconnector)}
    .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_227f667936c2092d49518e84be21267e
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/ns#VoltageLevel.Substation, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage levels contain the substation that has $ObjectIdentity(0, cim:Bay)
    as its part?
  - Identify the voltage levels associated with the substation containing $ObjectIdentity(0,
    cim:Bay).
  - What voltage levels correspond to the substation where $ObjectIdentity(0, cim:Bay)
    is a part?
  - List the voltage levels linked to the substation that includes $ObjectIdentity(0,
    cim:Bay).
  - Find the voltage levels of the substation that contains $ObjectIdentity(0, cim:Bay).
  questions:
  - expected_steps:
    - - args:
          query: 270e76e1-9738-5942-8fd5-ebabca4dfdad
        name: iri_discovery
        output: urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad>
            .

            <urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_82af7168b5e6c2602301229834433428
    nl_question: Find the voltage levels of the substation that contains 270e76e1-9738-5942-8fd5-ebabca4dfdad.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad
  - expected_steps:
    - - args:
          query: 95f000f9
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08>
            .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_aabf588be000956c8fdc7f5d89fd1540
    nl_question: What voltage levels correspond to the substation where 95f000f9 is
      a part?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  - expected_steps:
    - - args:
          query: cf91c2cb-551a-e14c-8295-85c979c5c75e
        name: iri_discovery
        output: urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e>
            .

            <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8823c2886958a1ac3f5b5ba072415469
    nl_question: Identify the voltage levels associated with the substation containing
      cf91c2cb-551a-e14c-8295-85c979c5c75e.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
  - expected_steps:
    - - args:
          query: e789e752
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e>
            .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e8c37859aa7991d2e8dcdd5c391b2560
    nl_question: List the voltage levels linked to the substation that includes e789e752.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: 58f5a32f
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:hasPartTransitive <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_8860ed81b6a42455f471271c0549d720
    nl_question: Which voltage levels contain the substation that has 58f5a32f as
      its part?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_b0053bf17013a9d6914ab60319df0587
- description: A graph pattern which lists all values for voltagelevel limited by
    parameters for bay (https://cim.ucaiug.io/ns#VoltageLevel.Substation, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List voltagelevel by parameters bay and filters none
  outputs:
  - name: voltagelevel
    type: cim:VoltageLevel
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which voltage levels are connected through $ObjectIdentity(0, cim:Bay)?
  - Identify the voltage levels linked to $ObjectIdentity(0, cim:Bay).
  - What voltage levels are associated with the bay $ObjectIdentity(0, cim:Bay)?
  - List all voltage levels connected via $ObjectIdentity(0, cim:Bay).
  - Which voltage levels are related to the bay $ObjectIdentity(0, cim:Bay)?
  questions:
  - expected_steps:
    - - args:
          query: c356ea84
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_7aa03b3795791712eb1638f41e0f3781
    nl_question: Identify the voltage levels linked to c356ea84.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: bc25cadf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf>
            .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_e924efeaa0c929554b72ead0dbc9948d
    nl_question: Which voltage levels are related to the bay bc25cadf?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  - expected_steps:
    - - args:
          query: e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelevel": {"type": "uri", "value": "urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_67d0790ed9fabe0f594315f7d24f64af
    nl_question: List all voltage levels connected via e5943b0f-8c95-ef4c-a6f6-16b9ace48341.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  - expected_steps:
    - - args:
          query: 58f5a32f
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_5d464392b8720aa0ae10263d3a218228
    nl_question: List all voltage levels connected via 58f5a32f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  - expected_steps:
    - - args:
          query: KRISTIAN300G1
        name: iri_discovery
        output: urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelevel WHERE {

            ?voltagelevel a cim:VoltageLevel ;

            cim:VoltageLevel.Substation/cimr:connectedThroughPart <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e>
            .

            <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelevel"]}, "results": {"bindings": [{"voltagelevel":
          {"type": "uri", "value": "urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelevel
    id: question_d2db7279a44266e0ae656979d70e7858
    nl_question: Identify the voltage levels linked to KRISTIAN300G1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
  sparql_template: '?voltagelevel a cim:VoltageLevel ;

    cim:VoltageLevel.Substation/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_9cdea3e869c987656de9c59c88b32e18
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for none and by filter properties none.
  filters: []
  name: List voltagelimit by parameters none and filters none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters: []
  paraphrases:
  - What are the voltage limits in the system?
  - List all voltage limits available.
  - Can you provide the details of any voltage limits?
  - What voltage limit records exist?
  - Identify all instances of voltage limits.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e98-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ede-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f10-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_c34ae41bdd3af228613689cf113309b0
    nl_question: What voltage limit records exist?
    parameter_bindings: {}
  sparql_template: ?voltagelimit a cim:VoltageLimit .
  template_id: template_list_a0b47938d602929e178efe05bc4fb969
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for none and by filter properties voltagelimit.normalvalue.
  filters:
  - property: https://cim.ucaiug.io/ns#VoltageLimit.normalValue
    subject: cim:VoltageLimit
    type: xsd:float
  name: List voltagelimit by parameters none and filters voltagelimit.normalvalue
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters: []
  paraphrases:
  - What voltage limits have a normal value of $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue,
    xsd:float)?
  - List the voltage limits with a normal value of $ValueFilter(cim:VoltageLimit,
    cim:VoltageLimit.normalValue, xsd:float).
  - Identify voltage limits where the normal value equals $ValueFilter(cim:VoltageLimit,
    cim:VoltageLimit.normalValue, xsd:float).
  - Which voltage limits have a normal value of $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue,
    xsd:float)?
  - Provide the voltage limits having a normal value of $ValueFilter(cim:VoltageLimit,
    cim:VoltageLimit.normalValue, xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.normalValue "270"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_ceaab1e0c79d62df499a9adc3dfbe1ce
    nl_question: List the voltage limits with a normal value of 270.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue, xsd:float): '270'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.normalValue "378"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_9614d9812b3481f5a94c3e64fe8871c8
    nl_question: Provide the voltage limits having a normal value of 378.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue, xsd:float): '378'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.normalValue "148.5"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_707ec25b8ab149dbe73f007fb2a047aa
    nl_question: What voltage limits have a normal value of 148.5?
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue, xsd:float): '148.5'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.normalValue "330"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_23207b2aeb4e15e5fbd36c3d2db1508f
    nl_question: Which voltage limits have a normal value of 330?
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue, xsd:float): '330'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.normalValue "462"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e98-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ede-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f10-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb1-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_1ff987f6a6b156e731124fcb1991e9f8
    nl_question: Provide the voltage limits having a normal value of 462.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue, xsd:float): '462'
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:VoltageLimit.normalValue {$ValueFilter(cim:VoltageLimit, cim:VoltageLimit.normalValue,
    xsd:float)} .'
  template_id: template_list_9303e18bece537fbdb620f0a9737fc2a
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for none and by filter properties voltagelimit.value.
  filters:
  - property: https://cim.ucaiug.io/ns#VoltageLimit.value
    subject: cim:VoltageLimit
    type: xsd:float
  name: List voltagelimit by parameters none and filters voltagelimit.value
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters: []
  paraphrases:
  - What voltage limits have a value of $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value,
    xsd:float)?
  - List the voltage limits with a value of $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value,
    xsd:float).
  - Which voltage limits are specified with a value of $ValueFilter(cim:VoltageLimit,
    cim:VoltageLimit.value, xsd:float)?
  - Provide all voltage limits that have a value equal to $ValueFilter(cim:VoltageLimit,
    cim:VoltageLimit.value, xsd:float).
  - Identify the voltage limits associated with $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value,
    xsd:float).
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.value "378"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_f0201f4e40e98aacd2c0c838a59f7875
    nl_question: Identify the voltage limits associated with 378.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value, xsd:float): '378'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.value "270"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_f77d3b093948ac8842b98b95f4459ad7
    nl_question: Identify the voltage limits associated with 270.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value, xsd:float): '270'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.value "148.5"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_91e1aede568a8dcfed6a89664173bc52
    nl_question: List the voltage limits with a value of 148.5.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value, xsd:float): '148.5'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.value "121.5"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_ce3b1f2f12c0f6f4e6b0e9f6b3228c27
    nl_question: List the voltage limits with a value of 121.5.
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value, xsd:float): '121.5'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:VoltageLimit.value "330"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_f8e4409a43fc8469d3b9bf573ed5aefa
    nl_question: What voltage limits have a value of 330?
    parameter_bindings:
      $ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value, xsd:float): '330'
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:VoltageLimit.value {$ValueFilter(cim:VoltageLimit, cim:VoltageLimit.value,
    xsd:float)} .'
  template_id: template_list_96ce34eeaded5850de77f6352a87b984
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for operationallimit (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet,
    https://cim.ucaiug.io/ns#OperationalLimitSet.OperationalLimitValue) and by filter
    properties none.
  filters: []
  name: List voltagelimit by parameters operationallimit and filters none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    - https://cim.ucaiug.io/ns#OperationalLimitSet.OperationalLimitValue
    type: https://cim.ucaiug.io/ns#OperationalLimit
  paraphrases:
  - What voltage limits are associated with $ObjectIdentity(0, cim:OperationalLimit)?
  - Identify the voltage limits connected to $ObjectIdentity(0, cim:OperationalLimit).
  - Which voltage limits are part of the operational limit set for $ObjectIdentity(0,
    cim:OperationalLimit)?
  - List all voltage limits linked to the operational limit $ObjectIdentity(0, cim:OperationalLimit).
  - What are the voltage limits defined for $ObjectIdentity(0, cim:OperationalLimit)?
  questions:
  - expected_steps:
    - - args:
          query: EVHI
        name: iri_discovery
        output: urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_a51602e265e8a3b04af9fe69c5139844
    nl_question: What are the voltage limits defined for EVHI?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ee2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_c472915121a65c80a033aac5db305921
    nl_question: What voltage limits are associated with f1769ee2-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769eb6-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_fb73b33da33895744d468d64ac4d283f
    nl_question: What are the voltage limits defined for f1769eb6-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ed3-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_dae70ca0b4a16f1375a55ead0953865f
    nl_question: Identify the voltage limits connected to f1769ed3-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ec7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
            <urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_e2009d46806db69b201fbb67a32d077b
    nl_question: List all voltage limits linked to the operational limit f1769ec7-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.OperationalLimitValue
    {$ObjectIdentity(0, cim:OperationalLimit)} .

    {$ObjectIdentity(0, cim:OperationalLimit)} a cim:OperationalLimit ;

    .'
  template_id: template_list_9f854618cd63d13878a4fd875099c85d
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for acdcterminal (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet,
    https://cim.ucaiug.io/ns#OperationalLimitSet.Terminal) and by filter properties
    none.
  filters: []
  name: List voltagelimit by parameters acdcterminal and filters none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    - https://cim.ucaiug.io/ns#OperationalLimitSet.Terminal
    type: https://cim.ucaiug.io/ns#ACDCTerminal
  paraphrases:
  - What are the voltage limits associated with $ObjectIdentity(0, cim:ACDCTerminal)?
  - List all voltage limits for $ObjectIdentity(0, cim:ACDCTerminal).
  - Identify the voltage limits applied to $ObjectIdentity(0, cim:ACDCTerminal).
  - Provide the voltage limits pertaining to $ObjectIdentity(0, cim:ACDCTerminal).
  - Which voltage limits are linked to $ObjectIdentity(0, cim:ACDCTerminal)?
  questions:
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_d1a081ee0d2779a0a01339347180854e
    nl_question: List all voltage limits for T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd901b2-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_c9c56c0cf8afe1f7bb1644ab81eacdf6
    nl_question: Identify the voltage limits applied to T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd901ba-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90186-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_af423d5cd872ba0c510bd3bbfd99f9c0
    nl_question: Which voltage limits are linked to 2dd90186-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd90186-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9016f-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_20773e224ba6b46ce18e5a5b0caf2136
    nl_question: What are the voltage limits associated with 2dd9016f-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd9016f-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90171
        name: iri_discovery
        output: urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal
            <urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4> a cim:ACDCTerminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_fcf7ce1e4bc6d6e0c03802ba99f6029c
    nl_question: Which voltage limits are linked to 2dd90171?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACDCTerminal): urn:uuid:2dd90171-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimit.OperationalLimitSet/cim:OperationalLimitSet.Terminal {$ObjectIdentity(0,
    cim:ACDCTerminal)} .

    {$ObjectIdentity(0, cim:ACDCTerminal)} a cim:ACDCTerminal ;

    .'
  template_id: template_list_ff1d39ddc2f96e9024db65a1a4ddeef2
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for powertransfercorridor (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet,
    https://cim4.eu/ns/nc#OperationalLimitSet.PowerTransferCorridor) and by filter
    properties none.
  filters: []
  name: List voltagelimit by parameters powertransfercorridor and filters none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitSet
    - https://cim4.eu/ns/nc#OperationalLimitSet.PowerTransferCorridor
    type: https://cim4.eu/ns/nc#PowerTransferCorridor
  paraphrases:
  - What voltage limits are associated with the power transfer corridor $ObjectIdentity(0,
    nc:PowerTransferCorridor)?
  - List the voltage limits within the power transfer corridor $ObjectIdentity(0,
    nc:PowerTransferCorridor).
  - Which voltage limits are part of the power transfer corridor $ObjectIdentity(0,
    nc:PowerTransferCorridor)?
  - Identify the voltage limits related to the power transfer corridor $ObjectIdentity(0,
    nc:PowerTransferCorridor).
  - What are the voltage limits in the $ObjectIdentity(0, nc:PowerTransferCorridor)
    power transfer corridor?
  questions: []
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimit.OperationalLimitSet/nc:OperationalLimitSet.PowerTransferCorridor
    {$ObjectIdentity(0, nc:PowerTransferCorridor)} .

    {$ObjectIdentity(0, nc:PowerTransferCorridor)} a nc:PowerTransferCorridor ;

    .'
  template_id: template_list_7002def1b403d052a6efd4dddbd227e2
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for operationallimit (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType,
    https://cim.ucaiug.io/ns#OperationalLimitType.OperationalLimit) and by filter
    properties none.
  filters: []
  name: List voltagelimit by parameters operationallimit and filters none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    - https://cim.ucaiug.io/ns#OperationalLimitType.OperationalLimit
    type: https://cim.ucaiug.io/ns#OperationalLimit
  paraphrases:
  - Which voltage limits are associated with $ObjectIdentity(0, cim:OperationalLimit)?
  - Identify the voltage limits linked to $ObjectIdentity(0, cim:OperationalLimit).
  - What voltage limits correspond to the operational limit $ObjectIdentity(0, cim:OperationalLimit)?
  - List all voltage limits connected to $ObjectIdentity(0, cim:OperationalLimit).
  - Which voltage limit is related to the operational limit $ObjectIdentity(0, cim:OperationalLimit)?
  questions:
  - expected_steps:
    - - args:
          query: f1769ec2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_cd4b7905ffe01a00f4bbf6ac49c1c782
    nl_question: Identify the voltage limits linked to f1769ec2-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ea3
        name: iri_discovery
        output: urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_6ebc4ebd162754e989f0ba4003bedcfd
    nl_question: Which voltage limit is related to the operational limit f1769ea3?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: NVHI
        name: iri_discovery
        output: urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_10ac1dd4fc370d8f5f929c1874ae8425
    nl_question: Which voltage limit is related to the operational limit NVHI?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: EVLO
        name: iri_discovery
        output: urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_ac21d55375bb1665f5817595079508fb
    nl_question: Identify the voltage limits linked to EVLO.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769ef8
        name: iri_discovery
        output: urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
            <urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f> a cim:OperationalLimit
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_ee174cc3646c7baf17660b1702ecad8c
    nl_question: List all voltage limits connected to f1769ef8.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimit): urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.OperationalLimit
    {$ObjectIdentity(0, cim:OperationalLimit)} .

    {$ObjectIdentity(0, cim:OperationalLimit)} a cim:OperationalLimit ;

    .'
  template_id: template_list_d4c335c4a082395f2a91effdf0c26559
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for operationallimitdirectionkind (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType,
    https://cim.ucaiug.io/ns#OperationalLimitType.direction) and by filter properties
    none.
  filters: []
  name: List voltagelimit by parameters operationallimitdirectionkind and filters
    none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    - https://cim.ucaiug.io/ns#OperationalLimitType.direction
    type: https://cim.ucaiug.io/ns#OperationalLimitDirectionKind
  paraphrases:
  - Which voltage limits have an operational limit type with the direction $ObjectIdentity(0,
    cim:OperationalLimitDirectionKind)?
  - Identify the voltage limits associated with the operational limit direction $ObjectIdentity(0,
    cim:OperationalLimitDirectionKind).
  - List the voltage limits that are linked to the operational limit direction $ObjectIdentity(0,
    cim:OperationalLimitDirectionKind).
  - What voltage limits correspond to the operational limit type with direction $ObjectIdentity(0,
    cim:OperationalLimitDirectionKind)?
  - Provide the voltage limits related to the direction $ObjectIdentity(0, cim:OperationalLimitDirectionKind)
    of their operational limit type.
  questions:
  - expected_steps:
    - - args:
          query: low
        name: iri_discovery
        output: https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.low
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.direction
            <https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.low> .

            <https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.low> a cim:OperationalLimitDirectionKind
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_1bb658cc27ee9f4bb0c17e2e04721380
    nl_question: List the voltage limits that are linked to the operational limit
      direction low.
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitDirectionKind): https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.low
  - expected_steps:
    - - args:
          query: high
        name: iri_discovery
        output: https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.high
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.direction
            <https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.high> .

            <https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.high> a cim:OperationalLimitDirectionKind
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e98-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ede-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f10-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_807a6afd56b4638e5460cb07fcda5382
    nl_question: Which voltage limits have an operational limit type with the direction
      high?
    parameter_bindings:
      $ObjectIdentity(0, cim:OperationalLimitDirectionKind): https://cim.ucaiug.io/ns#OperationalLimitDirectionKind.high
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimit.OperationalLimitType/cim:OperationalLimitType.direction {$ObjectIdentity(0,
    cim:OperationalLimitDirectionKind)} .

    {$ObjectIdentity(0, cim:OperationalLimitDirectionKind)} a cim:OperationalLimitDirectionKind
    ;

    .'
  template_id: template_list_9c34b9f226bdb0a78274b7586a56a869
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for limitkind (https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType,
    https://cim.ucaiug.io/ns/eu#OperationalLimitType.kind) and by filter properties
    none.
  filters: []
  name: List voltagelimit by parameters limitkind and filters none
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#OperationalLimit.OperationalLimitType
    - https://cim.ucaiug.io/ns/eu#OperationalLimitType.kind
    type: https://cim.ucaiug.io/ns/eu#LimitKind
  paraphrases:
  - Which voltage limits are of the type $ObjectIdentity(0, eu:LimitKind)?
  - Identify the voltage limits associated with $ObjectIdentity(0, eu:LimitKind).
  - List all voltage limits that have limit kind $ObjectIdentity(0, eu:LimitKind).
  - What are the voltage limits categorized under $ObjectIdentity(0, eu:LimitKind)?
  - Provide the voltage limits that fall under the limit kind $ObjectIdentity(0, eu:LimitKind).
  questions:
  - expected_steps:
    - - args:
          query: lowVoltage
        name: iri_discovery
        output: https://cim.ucaiug.io/ns/eu#LimitKind.lowVoltage
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/eu:OperationalLimitType.kind
            <https://cim.ucaiug.io/ns/eu#LimitKind.lowVoltage> .

            <https://cim.ucaiug.io/ns/eu#LimitKind.lowVoltage> a eu:LimitKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f21-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e59-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e63-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f12-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f30-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efe-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e77-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f17-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:17550267-f034-c14f-8b20-15716a0fe248"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e68-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eae-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e72-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:aba829f3-f10d-3c4f-9e62-f2ed66c136c4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e86-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eea-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f03-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e90-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f26-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e95-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f08-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eef-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e81-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e76-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e58-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f25-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f02-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e71-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ead-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:14f86e9e-9fb6-a441-95d5-5b521f2c8388"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eee-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f07-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f20-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f16-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e67-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e85-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:2307b749-ee5e-de40-ab0d-85a41f5a29c2"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e80-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f11-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eda-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e99-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e94-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e62-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_34eafdf759f911fd5f67e4b5348028be
    nl_question: What are the voltage limits categorized under lowVoltage?
    parameter_bindings:
      $ObjectIdentity(0, eu:LimitKind): https://cim.ucaiug.io/ns/eu#LimitKind.lowVoltage
  - expected_steps:
    - - args:
          query: highVoltage
        name: iri_discovery
        output: https://cim.ucaiug.io/ns/eu#LimitKind.highVoltage
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?voltagelimit WHERE {

            ?voltagelimit a cim:VoltageLimit ;

            cim:OperationalLimit.OperationalLimitType/eu:OperationalLimitType.kind
            <https://cim.ucaiug.io/ns/eu#LimitKind.highVoltage> .

            <https://cim.ucaiug.io/ns/eu#LimitKind.highVoltage> a eu:LimitKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["voltagelimit"]}, "results": {"bindings": [{"voltagelimit":
          {"type": "uri", "value": "urn:uuid:f1769f15-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eca-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e98-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e75-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:7d405b89-5ac9-0249-939f-aaf916331244"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eed-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ede-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e93-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f24-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e57-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ecf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e61-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f06-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e89-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e66-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e70-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f10-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efc-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f01-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:5161e908-3675-f541-9d6d-5eb17edd009a"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f29-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e84-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eac-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed3-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ebf-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e79-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f19-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:59f748bd-9622-9546-84ff-61ca8d503299"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f05-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ed8-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f2d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ea1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e65-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f23-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e92-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ece-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:68f92d08-7760-d944-8f95-16f3bb0809d4"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e60-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e8d-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f00-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e88-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec9-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ec4-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb0-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e56-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee7-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e5b-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eec-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e9c-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f14-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef6-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e74-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e6a-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eb5-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e97-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f0f-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eab-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769edd-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769efb-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f28-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ee2-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769ef1-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e7e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769e83-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769f1e-9aeb-11e5-91da-b8763fd99c5f"}},
          {"voltagelimit": {"type": "uri", "value": "urn:uuid:f1769eba-9aeb-11e5-91da-b8763fd99c5f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - voltagelimit
    id: question_8f3433b04ce7d98c3fae81986ef8cf0f
    nl_question: What are the voltage limits categorized under highVoltage?
    parameter_bindings:
      $ObjectIdentity(0, eu:LimitKind): https://cim.ucaiug.io/ns/eu#LimitKind.highVoltage
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimit.OperationalLimitType/eu:OperationalLimitType.kind {$ObjectIdentity(0,
    eu:LimitKind)} .

    {$ObjectIdentity(0, eu:LimitKind)} a eu:LimitKind ;

    .'
  template_id: template_list_a2646da9e74b5c5d79359c5d12f4b26c
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for none and by filter properties operationallimittype.acceptableduration.
  filters:
  - property: https://cim.ucaiug.io/ns#OperationalLimitType.acceptableDuration
    subject: cim:VoltageLimit
    type: xsd:float
  name: List voltagelimit by parameters none and filters operationallimittype.acceptableduration
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters: []
  paraphrases:
  - Which voltage limits have an acceptable duration of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float)?
  - List the voltage limits with an acceptable duration of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float).
  - What are the voltage limits with an acceptable duration of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float)?
  - Identify the voltage limits where the acceptable duration equals $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float).
  - Provide the voltage limits that have an acceptable duration of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.acceptableDuration, xsd:float).
  questions: []
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimitType.acceptableDuration {$ValueFilter(cim:VoltageLimit, cim:OperationalLimitType.acceptableDuration,
    xsd:float)} .'
  template_id: template_list_e8f4193b2fbc79c2e4c57d0cae389b25
- description: A graph pattern which lists all values for voltagelimit limited by
    parameters for none and by filter properties operationallimittype.isinfiniteduration.
  filters:
  - property: https://cim.ucaiug.io/ns#OperationalLimitType.isInfiniteDuration
    subject: cim:VoltageLimit
    type: xsd:boolean
  name: List voltagelimit by parameters none and filters operationallimittype.isinfiniteduration
  outputs:
  - name: voltagelimit
    type: cim:VoltageLimit
  parameters: []
  paraphrases:
  - Which voltage limits have an infinite duration value of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean)?
  - List all voltage limits where the infinite duration is set to $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean).
  - Identify voltage limits with an infinite duration status of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean).
  - What are the voltage limits with an infinite duration property of $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean)?
  - Provide all voltage limits that have an infinite duration defined as $ValueFilter(cim:VoltageLimit,
    cim:OperationalLimitType.isInfiniteDuration, xsd:boolean).
  questions: []
  sparql_template: '?voltagelimit a cim:VoltageLimit ;

    cim:OperationalLimitType.isInfiniteDuration {$ValueFilter(cim:VoltageLimit, cim:OperationalLimitType.isInfiniteDuration,
    xsd:boolean)} .'
  template_id: template_list_762f232cb3dbdc4429f0797d15cd7beb
- description: A graph pattern which lists all values for windingconnection limited
    by parameters for none and by filter properties none.
  filters: []
  name: List windingconnection by parameters none and filters none
  outputs:
  - name: windingconnection
    type: cim:WindingConnection
  parameters: []
  paraphrases:
  - What are the different winding connections available?
  - List all instances of winding connections.
  - Which entities are classified as winding connections?
  - Can you provide information about all winding connections?
  - What are the types of winding connections present?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?windingconnection WHERE {

            ?windingconnection a cim:WindingConnection .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["windingconnection"]}, "results": {"bindings":
          [{"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.A"}},
          {"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.D"}},
          {"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.I"}},
          {"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.Y"}},
          {"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.Yn"}},
          {"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.Z"}},
          {"windingconnection": {"type": "uri", "value": "https://cim.ucaiug.io/ns#WindingConnection.Zn"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - windingconnection
    id: question_dcb995e0c4d3d2a40769cbd6badae1bf
    nl_question: List all instances of winding connections.
    parameter_bindings: {}
  sparql_template: ?windingconnection a cim:WindingConnection .
  template_id: template_list_7324316b4865e298565dcb24c3db5db3
- description: A graph pattern which lists all values for analog limited by parameters
    for none and by filter properties none.
  filters: []
  name: List analog by parameters none and filters none
  outputs:
  - name: analog
    type: cim:Analog
  parameters: []
  paraphrases:
  - What are all the analog elements?
  - List all the analog objects.
  - Identify the entities classified as analog.
  - What items are considered analog?
  - Provide all analog components.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:5d9cc592-1b36-9740-af4d-06e3696f829e"}},
          {"analog": {"type": "uri", "value": "urn:uuid:40af803a-e127-ba4c-8366-a19451841b93"}},
          {"analog": {"type": "uri", "value": "urn:uuid:c7111857-b4fa-9945-b840-c5bab849144a"}},
          {"analog": {"type": "uri", "value": "urn:uuid:a68067c8-8456-7143-9f20-216a1a88d213"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:7e629e54-eef1-2d44-bcbe-6450c51e6603"}},
          {"analog": {"type": "uri", "value": "urn:uuid:fd33f771-db4e-1d44-bec5-e7691cf2a54b"}},
          {"analog": {"type": "uri", "value": "urn:uuid:687792ee-e9a2-5d4b-bac2-6ec451287c6d"}},
          {"analog": {"type": "uri", "value": "urn:uuid:7ae1d616-8796-ad43-95f7-f3510b413e81"}},
          {"analog": {"type": "uri", "value": "urn:uuid:8e5494f2-1d0b-8d42-9ae6-3a0d8cf8d25d"}},
          {"analog": {"type": "uri", "value": "urn:uuid:9f954584-6132-af41-8015-80fd7c0e22f8"}},
          {"analog": {"type": "uri", "value": "urn:uuid:e46afcb9-f3a4-4a4b-9c28-2d51b3708ae1"}},
          {"analog": {"type": "uri", "value": "urn:uuid:fa062dad-5adb-a945-807d-862f080f5d23"}},
          {"analog": {"type": "uri", "value": "urn:uuid:e86c1491-955c-4946-82de-b63a6192277a"}},
          {"analog": {"type": "uri", "value": "urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a"}},
          {"analog": {"type": "uri", "value": "urn:uuid:b6200d77-995a-ee46-967a-fa8bc92a582a"}},
          {"analog": {"type": "uri", "value": "urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e"}},
          {"analog": {"type": "uri", "value": "urn:uuid:1aae61d1-6b75-d84e-8b08-f8cf5ff69b78"}},
          {"analog": {"type": "uri", "value": "urn:uuid:addc4858-76ce-8240-a702-d6e96126b946"}},
          {"analog": {"type": "uri", "value": "urn:uuid:74306ce2-bf32-9e40-a14f-9303f3101274"}},
          {"analog": {"type": "uri", "value": "urn:uuid:9ad8e518-0b29-4d46-872a-105321bbcce1"}},
          {"analog": {"type": "uri", "value": "urn:uuid:7183e6f1-4ba0-854b-918f-ac180ca2aa78"}},
          {"analog": {"type": "uri", "value": "urn:uuid:58a1fd1d-c187-8143-82f9-cd57a421888e"}},
          {"analog": {"type": "uri", "value": "urn:uuid:efd83f4d-ff51-9441-b2d3-7087abb9c2ba"}},
          {"analog": {"type": "uri", "value": "urn:uuid:8b1b936a-7395-e644-8b0a-63113ed9f23c"}},
          {"analog": {"type": "uri", "value": "urn:uuid:0aa5e8dd-7ee5-e04c-a5f4-400089570f6c"}},
          {"analog": {"type": "uri", "value": "urn:uuid:ad3782e5-a8fb-e44e-9366-38a7c8827368"}},
          {"analog": {"type": "uri", "value": "urn:uuid:ede27694-434e-5a42-9bdc-272dd750a9c0"}},
          {"analog": {"type": "uri", "value": "urn:uuid:22c86021-5e62-824d-9965-38826dc07a4c"}},
          {"analog": {"type": "uri", "value": "urn:uuid:b07d2149-2fca-9c4b-a4ab-909fe501e1b6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_39a03995e72f7353553e1b49b463c2a6
    nl_question: Provide all analog components.
    parameter_bindings: {}
  sparql_template: ?analog a cim:Analog .
  template_id: template_list_8526db9ce5fab618dd22a9a9fb0d573a
- description: A graph pattern which lists all values for analog limited by parameters
    for analogvalue (https://cim.ucaiug.io/ns#Analog.AnalogValues) and by filter properties
    none.
  filters: []
  name: List analog by parameters analogvalue and filters none
  outputs:
  - name: analog
    type: cim:Analog
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Analog.AnalogValues
    type: https://cim.ucaiug.io/ns#AnalogValue
  paraphrases:
  - What analogs contain the analog value $ObjectIdentity(0, cim:AnalogValue)?
  - Which analogs are associated with the analog value $ObjectIdentity(0, cim:AnalogValue)?
  - Identify the analogs that have the analog value $ObjectIdentity(0, cim:AnalogValue).
  - List all analogs connected to the analog value $ObjectIdentity(0, cim:AnalogValue).
  - What analogs are linked to $ObjectIdentity(0, cim:AnalogValue) as an analog value?
  questions:
  - expected_steps:
    - - args:
          query: 05a07c31
        name: iri_discovery
        output: urn:uuid:05a07c31-d13d-1747-af09-473145ad84ed
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues <urn:uuid:05a07c31-d13d-1747-af09-473145ad84ed>
            .

            <urn:uuid:05a07c31-d13d-1747-af09-473145ad84ed> a cim:AnalogValue ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:40af803a-e127-ba4c-8366-a19451841b93"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_c8a6810836ca4531312890616e8742f4
    nl_question: What analogs are linked to 05a07c31 as an analog value?
    parameter_bindings:
      $ObjectIdentity(0, cim:AnalogValue): urn:uuid:05a07c31-d13d-1747-af09-473145ad84ed
  - expected_steps:
    - - args:
          query: 6e8ad8a4
        name: iri_discovery
        output: urn:uuid:6e8ad8a4-1342-7941-901f-73dec3086118
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues <urn:uuid:6e8ad8a4-1342-7941-901f-73dec3086118>
            .

            <urn:uuid:6e8ad8a4-1342-7941-901f-73dec3086118> a cim:AnalogValue ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:7e629e54-eef1-2d44-bcbe-6450c51e6603"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_83e1e5ba71258191a1dc299ee239dbca
    nl_question: What analogs are linked to 6e8ad8a4 as an analog value?
    parameter_bindings:
      $ObjectIdentity(0, cim:AnalogValue): urn:uuid:6e8ad8a4-1342-7941-901f-73dec3086118
  - expected_steps:
    - - args:
          query: NO-BZ-1 LF ID P_V
        name: iri_discovery
        output: urn:uuid:105384df-9b48-3848-8fd2-97cf37575885
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues <urn:uuid:105384df-9b48-3848-8fd2-97cf37575885>
            .

            <urn:uuid:105384df-9b48-3848-8fd2-97cf37575885> a cim:AnalogValue ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:687792ee-e9a2-5d4b-bac2-6ec451287c6d"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_3073585200b08eba39d81b0c24836ded
    nl_question: What analogs are linked to NO-BZ-1 LF ID P_V as an analog value?
    parameter_bindings:
      $ObjectIdentity(0, cim:AnalogValue): urn:uuid:105384df-9b48-3848-8fd2-97cf37575885
  - expected_steps:
    - - args:
          query: cde8988f-4a06-1348-b17a-f80d4141c52b
        name: iri_discovery
        output: urn:uuid:cde8988f-4a06-1348-b17a-f80d4141c52b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues <urn:uuid:cde8988f-4a06-1348-b17a-f80d4141c52b>
            .

            <urn:uuid:cde8988f-4a06-1348-b17a-f80d4141c52b> a cim:AnalogValue ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:687792ee-e9a2-5d4b-bac2-6ec451287c6d"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_5edf54ca501e90fe4b34dfbd2aeed054
    nl_question: Which analogs are associated with the analog value cde8988f-4a06-1348-b17a-f80d4141c52b?
    parameter_bindings:
      $ObjectIdentity(0, cim:AnalogValue): urn:uuid:cde8988f-4a06-1348-b17a-f80d4141c52b
  - expected_steps:
    - - args:
          query: NO-BZ-1 HYP 5D P_V
        name: iri_discovery
        output: urn:uuid:0c064e09-1338-c642-bd41-28c2d6853188
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues <urn:uuid:0c064e09-1338-c642-bd41-28c2d6853188>
            .

            <urn:uuid:0c064e09-1338-c642-bd41-28c2d6853188> a cim:AnalogValue ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:e46afcb9-f3a4-4a4b-9c28-2d51b3708ae1"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_84844fd73e01441f2b109637a0f27796
    nl_question: What analogs contain the analog value NO-BZ-1 HYP 5D P_V?
    parameter_bindings:
      $ObjectIdentity(0, cim:AnalogValue): urn:uuid:0c064e09-1338-c642-bd41-28c2d6853188
  sparql_template: '?analog a cim:Analog ;

    cim:Analog.AnalogValues {$ObjectIdentity(0, cim:AnalogValue)} .

    {$ObjectIdentity(0, cim:AnalogValue)} a cim:AnalogValue ;

    .'
  template_id: template_list_030d2e11f0b720030fdbfb0792ed13ce
- description: A graph pattern which lists all values for analog limited by parameters
    for analog (https://cim.ucaiug.io/ns#Analog.AnalogValues, https://cim.ucaiug.io/ns#AnalogValue.Analog)
    and by filter properties none.
  filters: []
  name: List analog by parameters analog and filters none
  outputs:
  - name: analog
    type: cim:Analog
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#Analog.AnalogValues
    - https://cim.ucaiug.io/ns#AnalogValue.Analog
    type: https://cim.ucaiug.io/ns#Analog
  paraphrases:
  - Which analog values are associated with $ObjectIdentity(0, cim:Analog)?
  - What are the analog values linked to $ObjectIdentity(0, cim:Analog)?
  - List the analog values that belong to $ObjectIdentity(0, cim:Analog).
  - Identify the analog values tied to $ObjectIdentity(0, cim:Analog).
  - What analog values are connected to $ObjectIdentity(0, cim:Analog)?
  questions:
  - expected_steps:
    - - args:
          query: 0aa5e8dd-7ee5-e04c-a5f4-400089570f6c
        name: iri_discovery
        output: urn:uuid:0aa5e8dd-7ee5-e04c-a5f4-400089570f6c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues/cim:AnalogValue.Analog <urn:uuid:0aa5e8dd-7ee5-e04c-a5f4-400089570f6c>
            .

            <urn:uuid:0aa5e8dd-7ee5-e04c-a5f4-400089570f6c> a cim:Analog ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:0aa5e8dd-7ee5-e04c-a5f4-400089570f6c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_a6a500df59d869c6de0e78b2e380eb14
    nl_question: List the analog values that belong to 0aa5e8dd-7ee5-e04c-a5f4-400089570f6c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Analog): urn:uuid:0aa5e8dd-7ee5-e04c-a5f4-400089570f6c
  - expected_steps:
    - - args:
          query: NO-BZ-3 LA P
        name: iri_discovery
        output: urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues/cim:AnalogValue.Analog <urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a>
            .

            <urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a> a cim:Analog ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a"}},
          {"analog": {"type": "uri", "value": "urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_ef41097b6ca1e5ffaf71ca81acdd6baf
    nl_question: Which analog values are associated with NO-BZ-3 LA P?
    parameter_bindings:
      $ObjectIdentity(0, cim:Analog): urn:uuid:35ef9ce3-5fc6-9546-a056-067807c3b30a
  - expected_steps:
    - - args:
          query: cedb649b
        name: iri_discovery
        output: urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues/cim:AnalogValue.Analog <urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e>
            .

            <urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e> a cim:Analog ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e"}},
          {"analog": {"type": "uri", "value": "urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_d7f3571a39bfbbffe9c1079b6313a135
    nl_question: What are the analog values linked to cedb649b?
    parameter_bindings:
      $ObjectIdentity(0, cim:Analog): urn:uuid:cedb649b-78f5-d042-b399-1efeb080029e
  - expected_steps:
    - - args:
          query: 4b4f37c6
        name: iri_discovery
        output: urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues/cim:AnalogValue.Analog <urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7>
            .

            <urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7> a cim:Analog ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}},
          {"analog": {"type": "uri", "value": "urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_a14a15ea007f2191d477b63f4b183400
    nl_question: List the analog values that belong to 4b4f37c6.
    parameter_bindings:
      $ObjectIdentity(0, cim:Analog): urn:uuid:4b4f37c6-c90d-2749-b77f-d53ece79c4e7
  - expected_steps:
    - - args:
          query: addc4858
        name: iri_discovery
        output: urn:uuid:addc4858-76ce-8240-a702-d6e96126b946
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?analog WHERE {

            ?analog a cim:Analog ;

            cim:Analog.AnalogValues/cim:AnalogValue.Analog <urn:uuid:addc4858-76ce-8240-a702-d6e96126b946>
            .

            <urn:uuid:addc4858-76ce-8240-a702-d6e96126b946> a cim:Analog ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["analog"]}, "results": {"bindings": [{"analog":
          {"type": "uri", "value": "urn:uuid:addc4858-76ce-8240-a702-d6e96126b946"}},
          {"analog": {"type": "uri", "value": "urn:uuid:addc4858-76ce-8240-a702-d6e96126b946"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - analog
    id: question_8c380e0a438772b5012a0ba23eb89224
    nl_question: Which analog values are associated with addc4858?
    parameter_bindings:
      $ObjectIdentity(0, cim:Analog): urn:uuid:addc4858-76ce-8240-a702-d6e96126b946
  sparql_template: '?analog a cim:Analog ;

    cim:Analog.AnalogValues/cim:AnalogValue.Analog {$ObjectIdentity(0, cim:Analog)}
    .

    {$ObjectIdentity(0, cim:Analog)} a cim:Analog ;

    .'
  template_id: template_list_ff33ad8dedb9957101a0b42e696da757
- description: A graph pattern which lists all values for asynchronousmachinekind
    limited by parameters for none and by filter properties none.
  filters: []
  name: List asynchronousmachinekind by parameters none and filters none
  outputs:
  - name: asynchronousmachinekind
    type: cim:AsynchronousMachineKind
  parameters: []
  paraphrases:
  - What are the types of asynchronous machines available?
  - List all kinds of asynchronous machines.
  - What kinds of asynchronous machines exist?
  - Identify the different types of asynchronous machines.
  - Provide a list of asynchronous machine kinds.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?asynchronousmachinekind WHERE {

            ?asynchronousmachinekind a cim:AsynchronousMachineKind .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["asynchronousmachinekind"]}, "results": {"bindings":
          [{"asynchronousmachinekind": {"type": "uri", "value": "https://cim.ucaiug.io/ns#AsynchronousMachineKind.generator"}},
          {"asynchronousmachinekind": {"type": "uri", "value": "https://cim.ucaiug.io/ns#AsynchronousMachineKind.motor"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - asynchronousmachinekind
    id: question_6b5a1ccea24cdf52af61b9b8843b17fb
    nl_question: List all kinds of asynchronous machines.
    parameter_bindings: {}
  sparql_template: ?asynchronousmachinekind a cim:AsynchronousMachineKind .
  template_id: template_list_cce998c9f6b058de08731db9700f2118
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for none and by filter properties none.
  filters: []
  name: List basevoltage by parameters none and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters: []
  paraphrases:
  - What are the base voltages in the dataset?
  - List all base voltages available.
  - Identify the base voltages in the system.
  - What base voltages are present in the data?
  - Can you provide a list of base voltages?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fa440243b3289802c5dd6d3c0ccd90fa
    nl_question: Identify the base voltages in the system.
    parameter_bindings: {}
  sparql_template: ?basevoltage a cim:BaseVoltage .
  template_id: template_list_efbcb4236aa06a56d20f0ff5515e5ee6
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode) and
    by filter properties none.
  filters: []
  name: List basevoltage by parameters topologicalnode and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:TopologicalNode)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:TopologicalNode).
  - Which base voltage is connected to $ObjectIdentity(0, cim:TopologicalNode)?
  - Provide the base voltage for the topological node $ObjectIdentity(0, cim:TopologicalNode).
  - What base voltage is related to $ObjectIdentity(0, cim:TopologicalNode)?
  questions:
  - expected_steps:
    - - args:
          query: f17695ec-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_75e9e21e68ab718e0493567edd021536
    nl_question: Provide the base voltage for the topological node f17695ec-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 47eb7c35-d0f6-11e7-9f7b-b46d83638f70
        name: iri_discovery
        output: urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70>
            .

            <urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9c50ed0e02e2b331e126080264477a99
    nl_question: What base voltage is related to 47eb7c35-d0f6-11e7-9f7b-b46d83638f70?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c35-d0f6-11e7-9f7b-b46d83638f70
  - expected_steps:
    - - args:
          query: f1769605-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d1660ab082618101071d614c83985aa9
    nl_question: What base voltage is related to f1769605-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769605-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: DAGALI
        name: iri_discovery
        output: urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d85fc5e2817834e017bb8349e21909d9
    nl_question: What is the base voltage associated with DAGALI?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769615-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769689-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_94bbf38cb2745172f7599bed16959728
    nl_question: Which base voltage is connected to f1769689-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769689-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode {$ObjectIdentity(0, cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_4ace300913e671547271a240f834fe6e
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for transformerend (https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds) and
    by filter properties none.
  filters: []
  name: List basevoltage by parameters transformerend and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - Which transformer ends are associated with the base voltage of $ObjectIdentity(0,
    cim:TransformerEnd)?
  - List transformer ends connected to the base voltage of $ObjectIdentity(0, cim:TransformerEnd).
  - What are the transformer ends linked to the base voltage for $ObjectIdentity(0,
    cim:TransformerEnd)?
  - Identify the transformer ends associated with the base voltage in $ObjectIdentity(0,
    cim:TransformerEnd).
  - What transformer ends are connected through the base voltage of $ObjectIdentity(0,
    cim:TransformerEnd)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd9043e-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9043e-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9043e-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9043e-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_1d80acdcd465d68f9d5ee74f3f6fbc62
    nl_question: Which transformer ends are associated with the base voltage of 2dd9043e-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9043e-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90479-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90479-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90479-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90479-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ea1f1b7b626f5bf668980c43c6b75bc5
    nl_question: What transformer ends are connected through the base voltage of 2dd90479-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90479-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9046b
        name: iri_discovery
        output: urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3ad28708223d3f4fe92ab12a8e7fbc19
    nl_question: Identify the transformer ends associated with the base voltage in
      2dd9046b.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9046b-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_a6db539d56b6af3bd2ebab7e9a17b52b
    nl_question: What are the transformer ends linked to the base voltage for 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: KVILLDALT1 P
        name: iri_discovery
        output: urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_39984630107ef14f39d17d9a7cb02280
    nl_question: List transformer ends connected to the base voltage of KVILLDALT1
      P.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90480-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TransformerEnds {$ObjectIdentity(0, cim:TransformerEnd)} .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_a267ebb48e13dac9364c4730d7fce3be
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for voltagelevel (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel) and by filter
    properties none.
  filters: []
  name: List basevoltage by parameters voltagelevel and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the base voltage level of $ObjectIdentity(0, cim:VoltageLevel).
  - Which base voltage is linked to $ObjectIdentity(0, cim:VoltageLevel)?
  - What base voltage does $ObjectIdentity(0, cim:VoltageLevel) have?
  - List the base voltage information for $ObjectIdentity(0, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: NARVIK  420
        name: iri_discovery
        output: urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5a732d5e7893e9fa31a4b246f86555da
    nl_question: List the base voltage information for NARVIK  420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696aa-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769656-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_63253fc35fa2fd2721b7094e94da885e
    nl_question: What is the base voltage associated with f1769656-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769656-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f3-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_21fa136abe0872a4dcda18c526bef3e6
    nl_question: Which base voltage is linked to f17695f3-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176960a
        name: iri_discovery
        output: urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_8c02b64a261377a36b99d618cff94d2d
    nl_question: What base voltage does f176960a have?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f176960a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696d6-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fe03c694cd8dc67beb8cbed8bfc56ec9
    nl_question: What is the base voltage associated with f17696d6-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696d6-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_58596b3b8506136da992cf46d24955db
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for none and by filter properties basevoltage.nominalvoltage.
  filters:
  - property: https://cim.ucaiug.io/ns#BaseVoltage.nominalVoltage
    subject: cim:BaseVoltage
    type: xsd:float
  name: List basevoltage by parameters none and filters basevoltage.nominalvoltage
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters: []
  paraphrases:
  - Which base voltages have a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float) kilovolts?
  - Identify the base voltages with a nominal voltage of $ValueFilter(cim:BaseVoltage,
    cim:BaseVoltage.nominalVoltage, xsd:float) KV.
  - List the base voltages where the nominal voltage is $ValueFilter(cim:BaseVoltage,
    cim:BaseVoltage.nominalVoltage, xsd:float) kilovolts.
  - What base voltages have a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float) KV?
  - Provide the base voltages with $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float) kilovolts nominal voltage.
  questions:
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c701ceb16b918f3dc4b388bd714d8dd6
    nl_question: Provide the base voltages with 420 kilovolts nominal voltage.
    parameter_bindings:
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.nominalVoltage "300"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_244f8f103851674b59015585fb0cf662
    nl_question: Which base voltages have a nominal voltage of 300 kilovolts?
    parameter_bindings:
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '300'
  - expected_steps:
    - []
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.nominalVoltage "135"^^xsd:float .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9e4fee13ec3b707fffe73af964899262
    nl_question: What base voltages have a nominal voltage of 135 KV?
    parameter_bindings:
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '135'
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.nominalVoltage {$ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)} .'
  template_id: template_list_0d8c7caf41fef8d49cb5d5b04b42ef79
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode) and
    by filter properties basevoltage.nominalvoltage.
  filters:
  - property: https://cim.ucaiug.io/ns#BaseVoltage.nominalVoltage
    subject: cim:BaseVoltage
    type: xsd:float
  name: List basevoltage by parameters topologicalnode and filters basevoltage.nominalvoltage
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which base voltage associated with $ObjectIdentity(0, cim:TopologicalNode) has
    a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)?
  - Identify the base voltage connected to $ObjectIdentity(0, cim:TopologicalNode)
    with $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float)
    nominal voltage.
  - What is the base voltage linked to $ObjectIdentity(0, cim:TopologicalNode) with
    a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)?
  - List the base voltage for $ObjectIdentity(0, cim:TopologicalNode) having a nominal
    voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float).
  - What base voltage corresponds to $ObjectIdentity(0, cim:TopologicalNode) with
    a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)?
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL
        name: iri_discovery
        output: urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70>
            ;

            cim:BaseVoltage.nominalVoltage "300"^^xsd:float .

            <urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7ddf2aad250be7d00525a216ac7bc335
    nl_question: Which base voltage associated with ARENDAL has a nominal voltage
      of 300?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:47eb7c29-d0f6-11e7-9f7b-b46d83638f70
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '300'
  - expected_steps:
    - - args:
          query: f17696cb
        name: iri_discovery
        output: urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7cc43586d925d643e5f54fb9395b17b3
    nl_question: What base voltage corresponds to f17696cb with a nominal voltage
      of 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: STAVANGER
        name: iri_discovery
        output: urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "300"^^xsd:float .

            <urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5424ad3f7aff993843b66f4aa8606cd4
    nl_question: What base voltage corresponds to STAVANGER with a nominal voltage
      of 300?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769665-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '300'
  - expected_steps:
    - - args:
          query: PORJUS
        name: iri_discovery
        output: urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_164fb1710a4e1d7ea5e2a6a4a4016475
    nl_question: What is the base voltage linked to PORJUS with a nominal voltage
      of 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695c9-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: HJALTA
        name: iri_discovery
        output: urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_01e526141a3a0c6246ab0395dcf712ef
    nl_question: List the base voltage for HJALTA having a nominal voltage of 420.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695bf-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode {$ObjectIdentity(0, cim:TopologicalNode)} ;

    cim:BaseVoltage.nominalVoltage {$ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_34ce465f696e8b0db4ff24da01a424be
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for transformerend (https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds) and
    by filter properties basevoltage.nominalvoltage.
  filters:
  - property: https://cim.ucaiug.io/ns#BaseVoltage.nominalVoltage
    subject: cim:BaseVoltage
    type: xsd:float
  name: List basevoltage by parameters transformerend and filters basevoltage.nominalvoltage
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - What is the base voltage for $ObjectIdentity(0, cim:TransformerEnd) with a nominal
    voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float)?
  - Identify the base voltage connected to transformer end $ObjectIdentity(0, cim:TransformerEnd)
    with a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float).
  - Which base voltage corresponds to transformer end $ObjectIdentity(0, cim:TransformerEnd)
    and has nominal voltage $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)?
  - List the base voltage of transformer end $ObjectIdentity(0, cim:TransformerEnd)
    with a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float).
  - What is the base voltage associated with $ObjectIdentity(0, cim:TransformerEnd)
    and nominal voltage $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)?
  questions:
  - expected_steps:
    - - args:
          query: SIMA    T1 P
        name: iri_discovery
        output: urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.nominalVoltage "300"^^xsd:float .

            <urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5626cee9023566bf8ca88424cb162b18
    nl_question: List the base voltage of transformer end SIMA    T1 P with a nominal
      voltage of 300.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90456-bdfb-11e5-94fa-c8f73332c8f4
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '300'
  - expected_steps:
    - - args:
          query: KVILLDALT1 S
        name: iri_discovery
        output: urn:uuid:2dd90484-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90484-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:2dd90484-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_4e8f4e8f565b11f07f5cc5d1921b87a8
    nl_question: List the base voltage of transformer end KVILLDALT1 S with a nominal
      voltage of 420.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90484-bdfb-11e5-94fa-c8f73332c8f4
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: 2dd9048b
        name: iri_discovery
        output: urn:uuid:2dd9048b-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9048b-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:2dd9048b-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3ee3c69627ed84e9f6dbedaf1d27c4b6
    nl_question: Which base voltage corresponds to transformer end 2dd9048b and has
      nominal voltage 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9048b-bdfb-11e5-94fa-c8f73332c8f4
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: 2dd9044c-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9044c-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9044c-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.nominalVoltage "135"^^xsd:float .

            <urn:uuid:2dd9044c-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d8de0205b8f406608ff077f6f007dc68
    nl_question: Which base voltage corresponds to transformer end 2dd9044c-bdfb-11e5-94fa-c8f73332c8f4
      and has nominal voltage 135?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9044c-bdfb-11e5-94fa-c8f73332c8f4
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '135'
  - expected_steps:
    - - args:
          query: 2dd9047d-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9047d-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9047d-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:2dd9047d-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b81ec6bbda3c41798d53addfcdba5126
    nl_question: List the base voltage of transformer end 2dd9047d-bdfb-11e5-94fa-c8f73332c8f4
      with a nominal voltage of 420.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9047d-bdfb-11e5-94fa-c8f73332c8f4
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TransformerEnds {$ObjectIdentity(0, cim:TransformerEnd)} ;

    cim:BaseVoltage.nominalVoltage {$ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)} .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_d0aca4941846987c307031ca401a3087
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for voltagelevel (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel) and by filter
    properties basevoltage.nominalvoltage.
  filters:
  - property: https://cim.ucaiug.io/ns#BaseVoltage.nominalVoltage
    subject: cim:BaseVoltage
    type: xsd:float
  name: List basevoltage by parameters voltagelevel and filters basevoltage.nominalvoltage
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which base voltage has a nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float) and is associated with $ObjectIdentity(0, cim:VoltageLevel)?
  - What is the base voltage with nominal voltage $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float) related to $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the base voltage with a nominal voltage of $ValueFilter(cim:BaseVoltage,
    cim:BaseVoltage.nominalVoltage, xsd:float) for $ObjectIdentity(0, cim:VoltageLevel).
  - List the base voltage with nominal voltage $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float) that corresponds to $ObjectIdentity(0, cim:VoltageLevel).
  - What is the base voltage linked to $ObjectIdentity(0, cim:VoltageLevel) with a
    nominal voltage of $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)?
  questions:
  - expected_steps:
    - - args:
          query: KARLSH  420
        name: iri_discovery
        output: urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b09454141253926c79e9c61df7a82993
    nl_question: List the base voltage with nominal voltage 420 that corresponds to
      KARLSH  420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: 1f4fabd4-8c57-c245-b107-4e64c9007ae3
        name: iri_discovery
        output: urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d03597168d8783948c3c304193f09981
    nl_question: List the base voltage with nominal voltage 420 that corresponds to
      1f4fabd4-8c57-c245-b107-4e64c9007ae3.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: f1769610-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ab72ef6619755b18bcfbc251ae4aea9a
    nl_question: What is the base voltage linked to f1769610-9aeb-11e5-91da-b8763fd99c5f
      with a nominal voltage of 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: RINGHALS420
        name: iri_discovery
        output: urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c3364d5255ab8911c67d2fdc8b164589
    nl_question: What is the base voltage linked to RINGHALS420 with a nominal voltage
      of 420?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  - expected_steps:
    - - args:
          query: f17695ed-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.nominalVoltage "420"^^xsd:float .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_253f13365ba669c7fccde207af711f34
    nl_question: List the base voltage with nominal voltage 420 that corresponds to
      f17695ed-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
      $ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage, xsd:float): '420'
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel {$ObjectIdentity(0, cim:VoltageLevel)} ;

    cim:BaseVoltage.nominalVoltage {$ValueFilter(cim:BaseVoltage, cim:BaseVoltage.nominalVoltage,
    xsd:float)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_2f55e865559647e20d2c090171cebf1f
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode), transformerend
    (https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds) and by filter properties
    none.
  filters: []
  name: List basevoltage by parameters topologicalnode, transformerend and filters
    none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - Which base voltage is associated with $ObjectIdentity(0, cim:TopologicalNode)
    and $ObjectIdentity(1, cim:TransformerEnd)?
  - Identify the base voltage linked to both $ObjectIdentity(0, cim:TopologicalNode)
    and $ObjectIdentity(1, cim:TransformerEnd).
  - What is the base voltage connected to the topological node $ObjectIdentity(0,
    cim:TopologicalNode) and the transformer end $ObjectIdentity(1, cim:TransformerEnd)?
  - Provide the base voltage associated with $ObjectIdentity(0, cim:TopologicalNode)
    and $ObjectIdentity(1, cim:TransformerEnd).
  - Which base voltage has connections to $ObjectIdentity(0, cim:TopologicalNode)
    and $ObjectIdentity(1, cim:TransformerEnd)?
  questions:
  - expected_steps:
    - - args:
          query: f17696b9
        name: iri_discovery
        output: urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e167cdf51d8f2c051cabc02ea19992e5
    nl_question: What is the base voltage connected to the topological node f17696b9
      and the transformer end 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696b9-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: f1769637-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: OSLO    T2 S
        name: iri_discovery
        output: urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_007db95c0879f113f3699fd13450c586
    nl_question: Which base voltage has connections to f1769637-9aeb-11e5-91da-b8763fd99c5f
      and OSLO    T2 S?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f1769637-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:TransformerEnd): urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: f17696cb
        name: iri_discovery
        output: urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd9046f-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e98ca2d0bd047c03c771986c97e64b56
    nl_question: Identify the base voltage linked to both f17696cb and 2dd9046f-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696cb-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:TransformerEnd): urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: f17695b9
        name: iri_discovery
        output: urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2dd9046f
        name: iri_discovery
        output: urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_467069118a00634cc719345ce7bbd1c9
    nl_question: Which base voltage has connections to f17695b9 and 2dd9046f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:TransformerEnd): urn:uuid:2dd9046f-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: f17695ec-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: OSLO    T2 S
        name: iri_discovery
        output: urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_6c0a7e08d19c3bf771eabecb9671dbf4
    nl_question: Provide the base voltage associated with f17695ec-9aeb-11e5-91da-b8763fd99c5f
      and OSLO    T2 S.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695ec-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:TransformerEnd): urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode {$ObjectIdentity(0, cim:TopologicalNode)} ;

    cim:BaseVoltage.TransformerEnds {$ObjectIdentity(1, cim:TransformerEnd)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .

    {$ObjectIdentity(1, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_1db3fd13cc54b16895867eaf2b1c42b6
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode), voltagelevel
    (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel) and by filter properties none.
  filters: []
  name: List basevoltage by parameters topologicalnode, voltagelevel and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:TopologicalNode)
    and $ObjectIdentity(1, cim:VoltageLevel)?
  - Identify the base voltage connected to $ObjectIdentity(0, cim:TopologicalNode)
    and within $ObjectIdentity(1, cim:VoltageLevel).
  - Which base voltage corresponds to the topological node $ObjectIdentity(0, cim:TopologicalNode)
    in the voltage level $ObjectIdentity(1, cim:VoltageLevel)?
  - Provide the base voltage connected with $ObjectIdentity(0, cim:TopologicalNode)
    and the voltage level $ObjectIdentity(1, cim:VoltageLevel).
  - List the base voltage linked to $ObjectIdentity(0, cim:TopologicalNode) and present
    in $ObjectIdentity(1, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: f176966b
        name: iri_discovery
        output: urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17696dc-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f579709c10e8ca58f7de7876f91d11b6
    nl_question: List the base voltage linked to f176966b and present in f17696dc-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f176966b-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17696dc-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ab-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769644-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_cd3c16d866986d09fca06b7dc1070278
    nl_question: Which base voltage corresponds to the topological node f17695ab-9aeb-11e5-91da-b8763fd99c5f
      in the voltage level f1769644-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: FORSMARK
        name: iri_discovery
        output: urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: GRUNDFOR420
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f9f67e381db45455f2aff301adc78c0b
    nl_question: What is the base voltage associated with FORSMARK and GRUNDFOR420?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695ab-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ESTLINK_HVDC
        name: iri_discovery
        output: urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769644
        name: iri_discovery
        output: urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_8c9292f45e76f4aa07c240737355f4c0
    nl_question: What is the base voltage associated with ESTLINK_HVDC and f1769644?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17696bf-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769644-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695b9
        name: iri_discovery
        output: urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f176966c-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode <urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f> a cim:TopologicalNode
            ;

            .

            <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d1b42f68534e390dfac4f7dc96a7b0f3
    nl_question: What is the base voltage associated with f17695b9 and f176966c-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalNode): urn:uuid:f17695b9-9aeb-11e5-91da-b8763fd99c5f
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode {$ObjectIdentity(0, cim:TopologicalNode)} ;

    cim:BaseVoltage.VoltageLevel {$ObjectIdentity(1, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .

    {$ObjectIdentity(1, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_821f88d46c409f7b7a9881de7e4b0f8e
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for transformerend (https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds), voltagelevel
    (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel) and by filter properties none.
  filters: []
  name: List basevoltage by parameters transformerend, voltagelevel and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TransformerEnds
    type: https://cim.ucaiug.io/ns#TransformerEnd
  - name: param_1
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:TransformerEnd)
    and $ObjectIdentity(1, cim:VoltageLevel)?
  - Identify the base voltage linked to transformer end $ObjectIdentity(0, cim:TransformerEnd)
    and voltage level $ObjectIdentity(1, cim:VoltageLevel).
  - Which base voltage is connected to $ObjectIdentity(0, cim:TransformerEnd) and
    $ObjectIdentity(1, cim:VoltageLevel)?
  - Provide the base voltage for transformer end $ObjectIdentity(0, cim:TransformerEnd)
    and voltage level $ObjectIdentity(1, cim:VoltageLevel).
  - List the base voltage associated with $ObjectIdentity(0, cim:TransformerEnd) and
    $ObjectIdentity(1, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: OSLO    T2 S
        name: iri_discovery
        output: urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SANDEFJO420
        name: iri_discovery
        output: urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            <urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_86264298cc52c8e628d5f8dcf9002b29
    nl_question: Which base voltage is connected to OSLO    T2 S and SANDEFJO420?
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd90468-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176966c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: HAGAFOSS420
        name: iri_discovery
        output: urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            <urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b41115f3fedcb078096535bb67759945
    nl_question: Provide the base voltage for transformer end 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
      and voltage level HAGAFOSS420.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f176968a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SIMA    T1 S
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769610
        name: iri_discovery
        output: urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_a6db7f38b04314ddbfff2aa999222597
    nl_question: Identify the base voltage linked to transformer end SIMA    T1 S
      and voltage level f1769610.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17695ba
        name: iri_discovery
        output: urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            <urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b21dc02dd48ec7b82a0a6c6892486e16
    nl_question: List the base voltage associated with 2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
      and f17695ba.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17695ba-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: SIMA    T1 S
        name: iri_discovery
        output: urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f17696c0
        name: iri_discovery
        output: urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TransformerEnds <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4>
            ;

            cim:BaseVoltage.VoltageLevel <urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4> a cim:TransformerEnd ;

            .

            <urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_708f0da4a487106d3eb803c04d199324
    nl_question: Provide the base voltage for transformer end SIMA    T1 S and voltage
      level f17696c0.
    parameter_bindings:
      $ObjectIdentity(0, cim:TransformerEnd): urn:uuid:2dd9045a-bdfb-11e5-94fa-c8f73332c8f4
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f17696c0-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TransformerEnds {$ObjectIdentity(0, cim:TransformerEnd)} ;

    cim:BaseVoltage.VoltageLevel {$ObjectIdentity(1, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .

    {$ObjectIdentity(1, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_e964ce4c259f1ff9653cf63c4f11fc31
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for topologicalisland (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters topologicalisland and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.AngleRefTopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which base voltages are associated with the topological island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  - List all base voltages related to the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  - What are the base voltages connected to $ObjectIdentity(0, cim:TopologicalIsland)?
  - Identify the base voltages linked with the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - Provide the base voltages that are part of the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  questions:
  - expected_steps:
    - - args:
          query: b04002c8-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.AngleRefTopologicalIsland
            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_1ad69d8c64245b33b16fa5ded124f635
    nl_question: List all base voltages related to the topological island b04002c8-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.AngleRefTopologicalIsland
    {$ObjectIdentity(0, cim:TopologicalIsland)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_44869fa4f266ceab064b133bac2746b0
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for basevoltage (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters basevoltage and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which topological nodes are associated with the base voltage $ObjectIdentity(0,
    cim:BaseVoltage)?
  - Identify the topological nodes linked to base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - What topological nodes are connected to the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - List all topological nodes related to the base voltage $ObjectIdentity(0, cim:BaseVoltage).
  - The base voltage $ObjectIdentity(0, cim:BaseVoltage) is connected to which topological
    nodes?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_042a911df97caad810e227de359631f2
    nl_question: List all topological nodes related to the base voltage 2dd90169.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90159
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b34a68d2d6e4e150ba9f97f5ccc45753
    nl_question: Identify the topological nodes linked to base voltage 2dd90159.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.BaseVoltage <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_8bca41d22ba30fabf5f4231426151a4d
    nl_question: List all topological nodes related to the base voltage 2dd90174-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.BaseVoltage {$ObjectIdentity(0,
    cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_8985135e8ea0890fb437b239280e9404
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for connectivitynodecontainer (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode,
    https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer) and by filter
    properties none.
  filters: []
  name: List basevoltage by parameters connectivitynodecontainer and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodeContainer
    type: https://cim.ucaiug.io/ns#ConnectivityNodeContainer
  paraphrases:
  - Which base voltages are associated with $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  - What are the base voltages connected to $ObjectIdentity(0, cim:ConnectivityNodeContainer)?
  - List all base voltages linked to $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - Identify the base voltages for $ObjectIdentity(0, cim:ConnectivityNodeContainer).
  - What base voltage is related to the connectivity node container $ObjectIdentity(0,
    cim:ConnectivityNodeContainer)?
  questions:
  - expected_steps:
    - - args:
          query: f176967e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_53add4825d31b495f12c2094e7d36a15
    nl_question: Identify the base voltages for f176967e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f176967e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695b0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9e4d6262ecb86855d349a168a798bfb7
    nl_question: What are the base voltages connected to f17695b0-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695e7-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_a0289d47a551d8ca92cace6128b5bcec
    nl_question: What are the base voltages connected to f17695e7-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17695e7-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769610-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_6f872e982f0a951b88c0be3fe759fcd7
    nl_question: What are the base voltages connected to f1769610-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f1769610-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696b4-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
            <urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNodeContainer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f3a1c0d8fbb947c92f6d5e9ac98248cf
    nl_question: What base voltage is related to the connectivity node container f17696b4-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNodeContainer): urn:uuid:f17696b4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodeContainer
    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} .

    {$ObjectIdentity(0, cim:ConnectivityNodeContainer)} a cim:ConnectivityNodeContainer
    ;

    .'
  template_id: template_list_da53e20fabdd64ad9967880c35a04cec
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for connectivitynode (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters connectivitynode and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.ConnectivityNodes
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:ConnectivityNode)?
  - List the base voltage connected to $ObjectIdentity(0, cim:ConnectivityNode).
  - Which base voltage is linked with the connectivity node $ObjectIdentity(0, cim:ConnectivityNode)?
  - Identify the base voltage corresponding to $ObjectIdentity(0, cim:ConnectivityNode).
  - What is the base voltage of the topological node that contains $ObjectIdentity(0,
    cim:ConnectivityNode)?
  questions:
  - expected_steps:
    - - args:
          query: 70075010-ec3b-4f48-aa6f-a8b0b0a68c8c
        name: iri_discovery
        output: urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c> .

            <urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_4060ac247e82ecfa3e5a27516fa17430
    nl_question: Identify the base voltage corresponding to 70075010-ec3b-4f48-aa6f-a8b0b0a68c8c.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:70075010-ec3b-4f48-aa6f-a8b0b0a68c8c
  - expected_steps:
    - - args:
          query: f1769659-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769659-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:f1769659-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769659-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_854fd86816c58fc745da875b39c3e697
    nl_question: List the base voltage connected to f1769659-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769659-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769693
        name: iri_discovery
        output: urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_bc576b663d786d11e00cb10b29445238
    nl_question: Which base voltage is linked with the connectivity node f1769693?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769693-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769603-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_a59f2abd9f6b052c4fbc98242f7f4a2a
    nl_question: List the base voltage connected to f1769603-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769603-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 'DAGALI      '
        name: iri_discovery
        output: urn:uuid:f1769613-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodes
            <urn:uuid:f1769613-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769613-9aeb-11e5-91da-b8763fd99c5f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b926ff2d3a0296da8b061fb0ead39036
    nl_question: Which base voltage is linked with the connectivity node DAGALI      ?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:f1769613-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.ConnectivityNodes {$ObjectIdentity(0,
    cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_ed6b07d8a67837906e7248b3c5d74fd0
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for svvoltage (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters svvoltage and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.SvVoltage
    type: https://cim.ucaiug.io/ns#SvVoltage
  paraphrases:
  - Which base voltage is associated with $ObjectIdentity(0, cim:SvVoltage)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:SvVoltage).
  - What is the base voltage connected with $ObjectIdentity(0, cim:SvVoltage)?
  - List the base voltage corresponding to $ObjectIdentity(0, cim:SvVoltage).
  - Provide the base voltage that is related to $ObjectIdentity(0, cim:SvVoltage).
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_550fef989a409086c52e102b4899eac5
    nl_question: Identify the base voltage linked to urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002ed-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002eb-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002eb-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002eb-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002eb-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_908b0951aa2b623ecd22d17728f21de7
    nl_question: What is the base voltage connected with urn:uuid:b04002eb-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002eb-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_4ec85e01bb39512d8f8013d10b074528
    nl_question: List the base voltage corresponding to urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191.
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002cb-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002ce-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002ce-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002ce-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002ce-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_89eb993912f9d4a6589ff27da33ef7d9
    nl_question: Which base voltage is associated with urn:uuid:b04002ce-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002ce-53a3-11e8-a5aa-74e5f963e191
  - expected_steps:
    - - args:
          query: urn:uuid:b04002d9-53a3-11e8-a5aa-74e5f963e191
        name: iri_discovery
        output: urn:uuid:b04002d9-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.SvVoltage <urn:uuid:b04002d9-53a3-11e8-a5aa-74e5f963e191>
            .

            <urn:uuid:b04002d9-53a3-11e8-a5aa-74e5f963e191> a cim:SvVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_574fb5e3d09e2dbdc3585d093cca5f2f
    nl_question: What is the base voltage connected with urn:uuid:b04002d9-53a3-11e8-a5aa-74e5f963e191?
    parameter_bindings:
      $ObjectIdentity(0, cim:SvVoltage): urn:uuid:b04002d9-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.SvVoltage {$ObjectIdentity(0,
    cim:SvVoltage)} .

    {$ObjectIdentity(0, cim:SvVoltage)} a cim:SvVoltage ;

    .'
  template_id: template_list_840ada40c57e653d6d92a7a2b6a30f9f
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for terminal (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.Terminal)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters terminal and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.Terminal
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which base voltage is associated with the terminal $ObjectIdentity(0, cim:Terminal)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:Terminal).
  - What is the base voltage connected to terminal $ObjectIdentity(0, cim:Terminal)?
  - List the base voltage associated with $ObjectIdentity(0, cim:Terminal).
  - What base voltage corresponds to the terminal $ObjectIdentity(0, cim:Terminal)?
  questions:
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7d713aa2410798255ac592043bbadc0e
    nl_question: Identify the base voltage linked to T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd901e4-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90372-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_21955a85b62c94ca2c890d2de6e494ed
    nl_question: What is the base voltage connected to terminal 2dd90372-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90372-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd902ab
        name: iri_discovery
        output: urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_508c37ea3a44b222568f9a14a111fbac
    nl_question: What base voltage corresponds to the terminal 2dd902ab?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd902ab-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903a2-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3eede672c26d8043effd07d5334c00e3
    nl_question: What base voltage corresponds to the terminal 2dd903a2-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd903a2-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: T1
        name: iri_discovery
        output: urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.Terminal <urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_43c197c73cba26d5010191c0f545d87e
    nl_question: List the base voltage associated with T1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:2dd90190-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.Terminal {$ObjectIdentity(0,
    cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_eff077c4b12e283d92ab5ed1c7c0c458
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for topologicalisland (https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode, https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters topologicalisland and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.TopologicalNode
    - https://cim.ucaiug.io/ns#TopologicalNode.TopologicalIsland
    type: https://cim.ucaiug.io/ns#TopologicalIsland
  paraphrases:
  - Which base voltages are part of the topological island $ObjectIdentity(0, cim:TopologicalIsland)?
  - List all base voltages that belong to the topological island $ObjectIdentity(0,
    cim:TopologicalIsland).
  - What base voltages can be found in the topological island $ObjectIdentity(0, cim:TopologicalIsland)?
  - Can you identify the base voltages associated with the topological island $ObjectIdentity(0,
    cim:TopologicalIsland)?
  - Provide the base voltages within the topological island $ObjectIdentity(0, cim:TopologicalIsland).
  questions:
  - expected_steps:
    - - args:
          query: OSKARSHAMN
        name: iri_discovery
        output: urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.TopologicalIsland
            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> .

            <urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191> a cim:TopologicalIsland
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e590119d94fc703e0918b85a20d3a7ad
    nl_question: Provide the base voltages within the topological island OSKARSHAMN.
    parameter_bindings:
      $ObjectIdentity(0, cim:TopologicalIsland): urn:uuid:b04002c8-53a3-11e8-a5aa-74e5f963e191
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.TopologicalNode/cim:TopologicalNode.TopologicalIsland {$ObjectIdentity(0,
    cim:TopologicalIsland)} .

    {$ObjectIdentity(0, cim:TopologicalIsland)} a cim:TopologicalIsland ;

    .'
  template_id: template_list_f8d8eb893799d02de63d8ead87853d3e
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for basevoltage (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters basevoltage and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/ns#VoltageLevel.BaseVoltage
    type: https://cim.ucaiug.io/ns#BaseVoltage
  paraphrases:
  - Which voltage levels are associated with $ObjectIdentity(0, cim:BaseVoltage)?
  - Identify the voltage levels that include $ObjectIdentity(0, cim:BaseVoltage).
  - What voltage levels are linked to the base voltage $ObjectIdentity(0, cim:BaseVoltage)?
  - List all voltage levels connected to $ObjectIdentity(0, cim:BaseVoltage).
  - The base voltage $ObjectIdentity(0, cim:BaseVoltage) is part of which voltage
    levels?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90159
        name: iri_discovery
        output: urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fe938e7740e2f8ae4369aac00ad8f33a
    nl_question: What voltage levels are linked to the base voltage 2dd90159?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90169
        name: iri_discovery
        output: urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_bc6207a425537195fddd2d65ac296c9c
    nl_question: Which voltage levels are associated with 2dd90169?
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.BaseVoltage <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4> a cim:BaseVoltage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_40927d49106ccc24709a2a4798fedfb8
    nl_question: List all voltage levels connected to 2dd90174-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BaseVoltage): urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.BaseVoltage {$ObjectIdentity(0,
    cim:BaseVoltage)} .

    {$ObjectIdentity(0, cim:BaseVoltage)} a cim:BaseVoltage ;

    .'
  template_id: template_list_079c6d4782c185a1fa0e14bb73a89582
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for bay (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/ns#VoltageLevel.Bays)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters bay and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/ns#VoltageLevel.Bays
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which base voltage is associated with the bay $ObjectIdentity(0, cim:Bay)?
  - Identify the base voltage linked to the bay $ObjectIdentity(0, cim:Bay).
  - What is the base voltage connected to $ObjectIdentity(0, cim:Bay)?
  - List the base voltage associated with the bay $ObjectIdentity(0, cim:Bay).
  - What base voltage is connected through the bay $ObjectIdentity(0, cim:Bay)?
  questions:
  - expected_steps:
    - - args:
          query: e789e752
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Bays <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e>
            .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e4bda2e306688715b36a3a67aee7c615
    nl_question: Identify the base voltage linked to the bay e789e752.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: 82c28dce-c78e-974c-b392-0dd15c10e67a
        name: iri_discovery
        output: urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Bays <urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a>
            .

            <urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_801a300b9b20a913dd6a60ba3a8f3279
    nl_question: Which base voltage is associated with the bay 82c28dce-c78e-974c-b392-0dd15c10e67a?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:82c28dce-c78e-974c-b392-0dd15c10e67a
  - expected_steps:
    - - args:
          query: KRISTIAN300G1
        name: iri_discovery
        output: urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Bays <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e>
            .

            <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fc577f3041ff4c7c6919ffcb01ba87cc
    nl_question: Which base voltage is associated with the bay KRISTIAN300G1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
  - expected_steps:
    - - args:
          query: 270e76e1-9738-5942-8fd5-ebabca4dfdad
        name: iri_discovery
        output: urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Bays <urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad>
            .

            <urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_bb3eab3979f76409355830136a683813
    nl_question: Identify the base voltage linked to the bay 270e76e1-9738-5942-8fd5-ebabca4dfdad.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:270e76e1-9738-5942-8fd5-ebabca4dfdad
  - expected_steps:
    - - args:
          query: 95f000f9
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Bays <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08>
            .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_cc663e4f6f4b73b1eaff927fe54d8ef9
    nl_question: What base voltage is connected through the bay 95f000f9?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Bays {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_13c22f816427555e12620d6272569701
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for substation (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/ns#VoltageLevel.Substation)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters substation and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/ns#VoltageLevel.Substation
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What are the base voltages associated with $ObjectIdentity(0, cim:Substation)?
  - List the base voltages of $ObjectIdentity(0, cim:Substation).
  - Identify the base voltage levels in $ObjectIdentity(0, cim:Substation).
  - Which base voltages belong to $ObjectIdentity(0, cim:Substation)?
  - Provide all base voltages for the $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f17696a8
        name: iri_discovery
        output: urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Substation <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_2ca024b9065511686c320ed09302fefd
    nl_question: Provide all base voltages for the f17696a8.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176964e
        name: iri_discovery
        output: urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Substation <urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_672f656df4292e664e9e08b2693914d0
    nl_question: Provide all base voltages for the f176964e.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176964e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: TENHULT
        name: iri_discovery
        output: urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Substation <urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_bc0446db80040e537857985c3da24795
    nl_question: Identify the base voltage levels in TENHULT.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695d2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HJALTA
        name: iri_discovery
        output: urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Substation <urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f67975616e91755cd805a97c544118ce
    nl_question: Identify the base voltage levels in HJALTA.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695be-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176967c
        name: iri_discovery
        output: urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Substation <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_8e7f73930d993ecd92002565c914d540
    nl_question: Provide all base voltages for the f176967c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176967c-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cim:VoltageLevel.Substation {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_df95eabeec2538df2a5ca319dc7ce11f
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for busbarsection (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters busbarsection and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - What is the base voltage of $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the base voltage related to $ObjectIdentity(0, cim:BusbarSection).
  - Which base voltage is associated with busbar section $ObjectIdentity(0, cim:BusbarSection)?
  - Provide the base voltage for $ObjectIdentity(0, cim:BusbarSection).
  - What is the base voltage connected to $ObjectIdentity(0, cim:BusbarSection)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_0605c49848fe70954154e7dc4a1031dc
    nl_question: Identify the base voltage related to 2dd901c1-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901c1-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: HAGAFOSS420 A
        name: iri_discovery
        output: urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e57493811aef5d4e958226979c74c833
    nl_question: What is the base voltage of HAGAFOSS420 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a5-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901bd
        name: iri_discovery
        output: urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_27860c90970535b901a69b2308894fff
    nl_question: Which base voltage is associated with busbar section 2dd901bd?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901bd-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90175-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_088305bd3b519730baa7d77dee3be200
    nl_question: Provide the base voltage for 2dd90175-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90175-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd9019d-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fec128d8c85a4a2ad0ae52895f550227
    nl_question: Provide the base voltage for 2dd9019d-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPart {$ObjectIdentity(0, cim:BusbarSection)}
    .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_e3bdce44d43eb3e46c93bdfa089608bb
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for substation (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#isPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters substation and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What are the base voltages associated with $ObjectIdentity(0, cim:Substation)?
  - List all base voltages present in $ObjectIdentity(0, cim:Substation).
  - Which base voltages are connected to $ObjectIdentity(0, cim:Substation)?
  - Can you find the base voltages linked to $ObjectIdentity(0, cim:Substation)?
  - Identify the base voltages that are part of $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f17696a8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPart <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ab869c8eb1547eaafec0d6d9d24c62a7
    nl_question: Can you find the base voltages linked to f17696a8-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176961e
        name: iri_discovery
        output: urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPart <urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_8465145b7549b31408aa11d16c0898a8
    nl_question: Identify the base voltages that are part of f176961e.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695d8
        name: iri_discovery
        output: urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPart <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7b7c524c8a88ed82520dbe934848cee7
    nl_question: Can you find the base voltages linked to f17695d8?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695d8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HAGAFOSS
        name: iri_discovery
        output: urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPart <urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_704e7be133ae3f5ba36e32e9717eeb73
    nl_question: What are the base voltages associated with HAGAFOSS?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769688-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: HALDEN
        name: iri_discovery
        output: urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPart <urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_0228f1b0a05b7c78f56fa9d25c71b29b
    nl_question: List all base voltages present in HALDEN.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176960e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:isPart {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_bfb3735122a6c86576a5cb26848a85c0
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for busbarsection (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters busbarsection and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - What base voltage is associated with $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the base voltage level connected to $ObjectIdentity(0, cim:BusbarSection).
  - Which base voltage is linked to $ObjectIdentity(0, cim:BusbarSection)?
  - Provide the base voltage that corresponds to $ObjectIdentity(0, cim:BusbarSection).
  - What is the base voltage of $ObjectIdentity(0, cim:BusbarSection)?
  questions:
  - expected_steps:
    - - args:
          query: KVILLDAL300 A
        name: iri_discovery
        output: urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3192279b6ae18147bd7a53119ad55f9d
    nl_question: What base voltage is associated with KVILLDAL300 A?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a3-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90193
        name: iri_discovery
        output: urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_88919dc40dd0a0989bc631c629c86d93
    nl_question: Provide the base voltage that corresponds to 2dd90193.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90193-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901a1-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5465da3dbb6f05445d19f44d9b8059b2
    nl_question: Which base voltage is linked to 2dd901a1-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901a1-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd901b7
        name: iri_discovery
        output: urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_08a19e7b9de90a62e4b76692a2884a71
    nl_question: Which base voltage is linked to 2dd901b7?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901b7-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: KARLSH  420 A
        name: iri_discovery
        output: urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d091795dfbbc52c09199afd1a3d387f0
    nl_question: Provide the base voltage that corresponds to KARLSH  420 A.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd901c3-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:BusbarSection)}
    .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_221a1272cead6fdaf47fcaa67baf43ea
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for substation (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#isPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters substation and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What is the base voltage connected to $ObjectIdentity(0, cim:Substation)?
  - Identify the base voltage levels associated with $ObjectIdentity(0, cim:Substation).
  - Which base voltage is part of the substation $ObjectIdentity(0, cim:Substation)?
  - List the base voltage levels within $ObjectIdentity(0, cim:Substation).
  - What are the base voltage levels present in $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: f176961e
        name: iri_discovery
        output: urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPartTransitive <urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f3f3573b640cdc99ec140f312731f677
    nl_question: What are the base voltage levels present in f176961e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176961e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769604-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPartTransitive <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_1d15b40ea0b49121b18c2fd156d979bd
    nl_question: What are the base voltage levels present in f1769604-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769604-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696a8-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPartTransitive <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fcd0b2cd4bb5e05f29e7c05c46acc94f
    nl_question: List the base voltage levels within f17696a8-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17696a8-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769694-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPartTransitive <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_592bd61dc8b6ba54b597b18f1329e3be
    nl_question: List the base voltage levels within f1769694-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769694-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: DANNEBO_HVDC
        name: iri_discovery
        output: urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:isPartTransitive <urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f4359de727627a4d4adf279f1475d14b
    nl_question: What is the base voltage connected to DANNEBO_HVDC?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695b8-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:isPartTransitive {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_3c826c6f4b5ff9ba319a4abd5d755a5b
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for substation (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters substation and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - What is the base voltage connected through part of $ObjectIdentity(0, cim:Substation)?
  - Identify the base voltage associated with $ObjectIdentity(0, cim:Substation) through
    a connected part.
  - Which base voltage is linked to $ObjectIdentity(0, cim:Substation) via connectivity?
  - List the base voltage connected to $ObjectIdentity(0, cim:Substation).
  - Give me the base voltage connected through a part of $ObjectIdentity(0, cim:Substation).
  questions:
  - expected_steps:
    - - args:
          query: f176968e-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_77a789f97efc25016e375b5f39acbba0
    nl_question: List the base voltage connected to f176968e-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176968e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695fe-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_330ea7c010ab5bf26223c9df6937ca99
    nl_question: List the base voltage connected to f17695fe-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695fe-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f1
        name: iri_discovery
        output: urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_2c3d11434dd8fadd355a57020b8d56b8
    nl_question: Give me the base voltage connected through a part of f17695f1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f17695f1-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: MO
        name: iri_discovery
        output: urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c1ae608f133ac2553e76c563215ce4b2
    nl_question: Give me the base voltage connected through a part of MO.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176969e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769614
        name: iri_discovery
        output: urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b6974ff6e084019ad3b75cff9ab4c2d2
    nl_question: List the base voltage connected to f1769614.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769614-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Substation)}
    .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_b96ab1040fbc044bfe8fc29f80b28f67
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for voltagelevel (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters voltagelevel and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which base voltage is connected to $ObjectIdentity(0, cim:VoltageLevel)?
  - Identify the base voltage associated with $ObjectIdentity(0, cim:VoltageLevel).
  - What is the base voltage linked with $ObjectIdentity(0, cim:VoltageLevel)?
  - Find the base voltage connected through $ObjectIdentity(0, cim:VoltageLevel).
  - List the base voltage associated with the voltage level $ObjectIdentity(0, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: f17695b0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_bab6b5c584b63d8f6f834308fee5ad5c
    nl_question: Find the base voltage connected through f17695b0-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695b0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f3-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_19e1baeed42154f080732489c89bcb03
    nl_question: Find the base voltage connected through f17695f3-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695f3-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ed-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c9af36af057a53114c5db6589c35f44e
    nl_question: Which base voltage is connected to f17695ed-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695ed-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695f9-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3f94d299436b05a646238f05b2d014a3
    nl_question: Identify the base voltage associated with f17695f9-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17695f9-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696ba-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_608927877c8014cbfc655a0d8189870c
    nl_question: Find the base voltage connected through f17696ba-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f17696ba-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart {$ObjectIdentity(0, cim:VoltageLevel)}
    .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_95dda54f630cbd2f2f59547952fd3e62
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for line (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters line and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Line
  paraphrases:
  - What is the base voltage of the line $ObjectIdentity(0, cim:Line)?
  - Identify the base voltage level for $ObjectIdentity(0, cim:Line).
  - What base voltage is associated with the line $ObjectIdentity(0, cim:Line)?
  - List the base voltage level connected through $ObjectIdentity(0, cim:Line).
  - Which base voltage is connected to the line $ObjectIdentity(0, cim:Line)?
  questions:
  - expected_steps:
    - - args:
          query: LC 420RINGHALS-MALMO 1
        name: iri_discovery
        output: urn:uuid:fd79db98-7494-8348-8442-0400e115ef44
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:fd79db98-7494-8348-8442-0400e115ef44>
            .

            <urn:uuid:fd79db98-7494-8348-8442-0400e115ef44> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5cbc176afad2035f5addae1521104d60
    nl_question: Identify the base voltage level for LC 420RINGHALS-MALMO 1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:fd79db98-7494-8348-8442-0400e115ef44
  - expected_steps:
    - - args:
          query: 5e7d0b4c
        name: iri_discovery
        output: urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e>
            .

            <urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9952c5156b021de0ed1b63a12477fcce
    nl_question: Identify the base voltage level for 5e7d0b4c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:5e7d0b4c-fa65-1d40-aef6-779298018c7e
  - expected_steps:
    - - args:
          query: 31f0b5c6-80e7-f14b-b231-a7fa2f129468
        name: iri_discovery
        output: urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468>
            .

            <urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_81ec127eee8c581ae401b6ad2568465d
    nl_question: Identify the base voltage level for 31f0b5c6-80e7-f14b-b231-a7fa2f129468.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:31f0b5c6-80e7-f14b-b231-a7fa2f129468
  - expected_steps:
    - - args:
          query: LC 420GRUNDFOR-OULU
        name: iri_discovery
        output: urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b>
            .

            <urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d7508acd48eb2a4c4deece9df51cd052
    nl_question: What is the base voltage of the line LC 420GRUNDFOR-OULU?
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:aefa2609-4e5c-c746-9d92-79204a635c4b
  - expected_steps:
    - - args:
          query: f62c7e4e
        name: iri_discovery
        output: urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc>
            .

            <urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc> a cim:Line ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}},
          {"basevoltage": {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_20bd116db8afeb738c3382a558e561d9
    nl_question: Identify the base voltage level for f62c7e4e.
    parameter_bindings:
      $ObjectIdentity(0, cim:Line): urn:uuid:f62c7e4e-374c-284f-896e-9b212731a8fc
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Line)}
    .

    {$ObjectIdentity(0, cim:Line)} a cim:Line ;

    .'
  template_id: template_list_29cb575ef689a4c010fa204ed1ba6e8f
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters synchronousmachine and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the base voltage level for $ObjectIdentity(0, cim:SynchronousMachine).
  - Which base voltage corresponds to $ObjectIdentity(0, cim:SynchronousMachine)?
  - Find the base voltage of $ObjectIdentity(0, cim:SynchronousMachine).
  - What base voltage is linked to $ObjectIdentity(0, cim:SynchronousMachine)?
  questions:
  - expected_steps:
    - - args:
          query: f17698a2-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17698a2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f17698a2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698a2-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d1b6707acd3a83b97923fd1fac571a0b
    nl_question: What base voltage is linked to f17698a2-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698a2-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   300 M2
        name: iri_discovery
        output: urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_fa638e6dfdf9bca4e9e59e2bbebe789f
    nl_question: Which base voltage corresponds to ASKER   300 M2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769920-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769919
        name: iri_discovery
        output: urn:uuid:f1769919-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769919-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769919-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5c0e37955a68f59f7758b9c759e295c0
    nl_question: Find the base voltage of f1769919.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769919-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KVILLDAL300 M4
        name: iri_discovery
        output: urn:uuid:f1769959-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769959-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769959-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b32ad8a7b694787526e6a5aedc508a4f
    nl_question: Which base voltage corresponds to KVILLDAL300 M4?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769959-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176980a
        name: iri_discovery
        output: urn:uuid:f176980a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f176980a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176980a-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e0cae985d749fdd6fe509f880a884079
    nl_question: What is the base voltage associated with f176980a?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f176980a-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPart {$ObjectIdentity(0, cim:SynchronousMachine)}
    .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_0e6302c814316f3423ce3a14c2af971c
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for conformload (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters conformload and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - What is the base voltage of the voltage level that contains $ObjectIdentity(0,
    cim:ConformLoad)?
  - Identify the base voltage associated with the voltage level of $ObjectIdentity(0,
    cim:ConformLoad).
  - Which base voltage is linked to the voltage level housing $ObjectIdentity(0, cim:ConformLoad)?
  - List the base voltage of the voltage level where $ObjectIdentity(0, cim:ConformLoad)
    is present.
  - What is the base voltage in the voltage level that includes $ObjectIdentity(0,
    cim:ConformLoad)?
  questions:
  - expected_steps:
    - - args:
          query: BLAFALLI300 L2
        name: iri_discovery
        output: urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c9b4ca74578361fc666cb726fb7e689d
    nl_question: What is the base voltage in the voltage level that includes BLAFALLI300
      L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769770-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ASKER   300 L2
        name: iri_discovery
        output: urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_97b726ad8c9b410b7af648cef41d6798
    nl_question: What is the base voltage of the voltage level that contains ASKER   300
      L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f176974c-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769704
        name: iri_discovery
        output: urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ac33bd88a5cedab7ace702fe367a5180
    nl_question: What is the base voltage in the voltage level that includes f1769704?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769752-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769752-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769752-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769752-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ee5c048e4bca113eaab41ee1e83804f7
    nl_question: List the base voltage of the voltage level where f1769752-9aeb-11e5-91da-b8763fd99c5f
      is present.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769752-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIAN300 L2
        name: iri_discovery
        output: urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_0b1675ffa87a1d7cfc1328a661525864
    nl_question: What is the base voltage in the voltage level that includes KRISTIAN300
      L2?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769758-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPart {$ObjectIdentity(0, cim:ConformLoad)}
    .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_015eab10277c32b2a08b551310ce187e
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for bay (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters bay and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:Bay)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:Bay).
  - Which base voltage is connected to $ObjectIdentity(0, cim:Bay)?
  - Provide the base voltage for $ObjectIdentity(0, cim:Bay).
  - List the base voltage related to $ObjectIdentity(0, cim:Bay).
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300G3
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_47a2b6d82865e512ef421ec9f8ad78c6
    nl_question: List the base voltage related to KRISTIAN300G3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: d965c17e
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c9b9bedcfddc75eeb97f439c3eaf824f
    nl_question: What is the base voltage associated with d965c17e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: KRISTIAN300AR1
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e>
            .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f47659cfc29c03e01f69d4cfbd408e7f
    nl_question: List the base voltage related to KRISTIAN300AR1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: 58f5a32f
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f22c33e05256480257f6f092039c734c
    nl_question: Identify the base voltage linked to 58f5a32f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  - expected_steps:
    - - args:
          query: 95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08>
            .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f8d01f99587634b16b8c669a064d1cc6
    nl_question: List the base voltage related to 95f000f9-9c2b-4c4d-9ce5-6ced7a695b08.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_05f60404f2d1e1966b6673831becad83
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for breaker (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters breaker and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which base voltage is associated with $ObjectIdentity(0, cim:Breaker)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:Breaker).
  - What is the base voltage for $ObjectIdentity(0, cim:Breaker)?
  - Provide the base voltage associated with breaker $ObjectIdentity(0, cim:Breaker).
  - What base voltage can be traced to $ObjectIdentity(0, cim:Breaker) through its
    voltage level?
  questions:
  - expected_steps:
    - - args:
          query: 373c4779
        name: iri_discovery
        output: urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9>
            .

            <urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_88ecf8b03317c4727e9369eceb6a123d
    nl_question: What base voltage can be traced to 373c4779 through its voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9
  - expected_steps:
    - - args:
          query: 316f39b6
        name: iri_discovery
        output: urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2>
            .

            <urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_555bc0c45a5f1820941b509f85b9a372
    nl_question: Identify the base voltage linked to 316f39b6.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2
  - expected_steps:
    - - args:
          query: ARENDAL 300SC1 AB_S
        name: iri_discovery
        output: urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9>
            .

            <urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7b504e34e4e989a6ba5e7d78156fda2e
    nl_question: What base voltage can be traced to ARENDAL 300SC1 AB_S through its
      voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9
  - expected_steps:
    - - args:
          query: 7cc994ab
        name: iri_discovery
        output: urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9>
            .

            <urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7a9fd45e58ee5858652dbec94eb64c61
    nl_question: What is the base voltage for 7cc994ab?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9
  - expected_steps:
    - - args:
          query: f56758a8-12a0-7648-b04b-f32ec3247e3b
        name: iri_discovery
        output: urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b>
            .

            <urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_af0139fd96c56aac8d75cdd4d3c8e337
    nl_question: Which base voltage is associated with f56758a8-12a0-7648-b04b-f32ec3247e3b?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Breaker)}
    .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_0da067c84246cc420ad16b09b2c9d9d4
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for disconnector (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters disconnector and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - What is the base voltage that includes $ObjectIdentity(0, cim:Disconnector) in
    its voltage level?
  - Identify the base voltage associated with $ObjectIdentity(0, cim:Disconnector)
    via its voltage level.
  - What base voltage is linked to the voltage level containing $ObjectIdentity(0,
    cim:Disconnector)?
  - List the base voltage related to the voltage level of $ObjectIdentity(0, cim:Disconnector).
  - Which base voltage corresponds to the voltage level encompassing $ObjectIdentity(0,
    cim:Disconnector)?
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300L1  AD_S
        name: iri_discovery
        output: urn:uuid:c986d524-47e9-9e4d-b635-64386c9be9a1
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:c986d524-47e9-9e4d-b635-64386c9be9a1>
            .

            <urn:uuid:c986d524-47e9-9e4d-b635-64386c9be9a1> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_57fd1e8533f9f66496604277474ebc85
    nl_question: What is the base voltage that includes KRISTIAN300L1  AD_S in its
      voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:c986d524-47e9-9e4d-b635-64386c9be9a1
  - expected_steps:
    - - args:
          query: KRISTIAN300FE1 AD_S
        name: iri_discovery
        output: urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa>
            .

            <urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5b51c3fc9af8c48f0e3a1e833c5b6fcc
    nl_question: List the base voltage related to the voltage level of KRISTIAN300FE1
      AD_S.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:ff413319-b126-e444-9e46-3e2268fc19aa
  - expected_steps:
    - - args:
          query: 4b31bd38
        name: iri_discovery
        output: urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245>
            .

            <urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_c7080e041bfe1092057a0631c976e9ec
    nl_question: Which base voltage corresponds to the voltage level encompassing
      4b31bd38?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:4b31bd38-15c9-104a-bbb8-4570207cc245
  - expected_steps:
    - - args:
          query: KRISTIAN300G2  AD_S
        name: iri_discovery
        output: urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd>
            .

            <urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_78f8c7cf56b2e630f73d957951c7e5bd
    nl_question: What is the base voltage that includes KRISTIAN300G2  AD_S in its
      voltage level?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:bdc35ecf-da90-de41-9345-b8c4228f63bd
  - expected_steps:
    - - args:
          query: KRISTIAN300G3  BD_S
        name: iri_discovery
        output: urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90>
            .

            <urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_18e78bf73677c5bde22faca5acbd5fb8
    nl_question: Identify the base voltage associated with KRISTIAN300G3  BD_S via
      its voltage level.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:3993c419-d9d7-bb4c-8319-6671df77ec90
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Disconnector)}
    .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_dd0fc5f994e6b4cfbdd0b4674c6b9d8e
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters synchronousmachine and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the base voltage connected to $ObjectIdentity(0, cim:SynchronousMachine).
  - Which base voltage level is linked with $ObjectIdentity(0, cim:SynchronousMachine)?
  - List the base voltage for $ObjectIdentity(0, cim:SynchronousMachine).
  - What is the base voltage level tied to $ObjectIdentity(0, cim:SynchronousMachine)?
  questions:
  - expected_steps:
    - - args:
          query: BLAFALLI300 M4
        name: iri_discovery
        output: urn:uuid:f1769973-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f1769973-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769973-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_d3a6b5cc4082f6398fc9b7a6aff8dc97
    nl_question: List the base voltage for BLAFALLI300 M4.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769973-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17699e0
        name: iri_discovery
        output: urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_df74ea0c321b8f25a47a930da809be60
    nl_question: What is the base voltage level tied to f17699e0?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17699e0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: RINGHALS420 M6
        name: iri_discovery
        output: urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_042f1c90a218effbbd377fa5f38b7065
    nl_question: List the base voltage for RINGHALS420 M6.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f17698c9-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIAN300 M2
        name: iri_discovery
        output: urn:uuid:f1769930-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f1769930-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769930-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3116c957201c7b9d866014706747bb4a
    nl_question: Which base voltage level is linked with KRISTIAN300 M2?
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769930-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KVILLDAL300 M1
        name: iri_discovery
        output: urn:uuid:f1769947-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f1769947-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769947-9aeb-11e5-91da-b8763fd99c5f> a cim:SynchronousMachine
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f4950e7158a63bbc754aa07a76cfcaca
    nl_question: Identify the base voltage connected to KVILLDAL300 M1.
    parameter_bindings:
      $ObjectIdentity(0, cim:SynchronousMachine): urn:uuid:f1769947-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:SynchronousMachine)}
    .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_29ffea5d1924f9729fca1f5536afbd22
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for conformload (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters conformload and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which base voltage is associated with $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the base voltage connected to $ObjectIdentity(0, cim:ConformLoad).
  - What is the base voltage for $ObjectIdentity(0, cim:ConformLoad)?
  - List the base voltage level related to $ObjectIdentity(0, cim:ConformLoad).
  - What base voltage does $ObjectIdentity(0, cim:ConformLoad) belong to?
  questions:
  - expected_steps:
    - - args:
          query: f1769704-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e3799e1169f6fc14911ec4d03cb11e1e
    nl_question: List the base voltage level related to f1769704-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769704-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697a0-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_1352af5974cd23ded836ea2d3a71f238
    nl_question: List the base voltage level related to f17697a0-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17697a0-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769776
        name: iri_discovery
        output: urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9904c8ff8b38e1a0ebb16461c6e07bbb
    nl_question: Identify the base voltage connected to f1769776.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769776-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696e6
        name: iri_discovery
        output: urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3d0b1b6ef0590d3dd635c169eeab79f0
    nl_question: Identify the base voltage connected to f17696e6.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f17696e6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769722-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f> a cim:ConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_40e1e09c482508afd7e1ae6ce86d6d21
    nl_question: Identify the base voltage connected to f1769722-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConformLoad): urn:uuid:f1769722-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:ConformLoad)}
    .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_a248e5d049097b8e7153f883a99a4d91
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for bay (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters bay and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which base voltage is associated with $ObjectIdentity(0, cim:Bay)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:Bay).
  - What is the base voltage connected to $ObjectIdentity(0, cim:Bay)?
  - List the base voltage related to $ObjectIdentity(0, cim:Bay).
  - What base voltage corresponds to $ObjectIdentity(0, cim:Bay)?
  questions:
  - expected_steps:
    - - args:
          query: bc25cadf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf>
            .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_95e94e83b7505122393cd7c71e266cb4
    nl_question: List the base voltage related to bc25cadf.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  - expected_steps:
    - - args:
          query: KRISTIAN300G3
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_8ce5862deafe0cc9fb588ddc7df49e71
    nl_question: Identify the base voltage linked to KRISTIAN300G3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
  - expected_steps:
    - - args:
          query: e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_97244830dc37c849183a7f32d286c764
    nl_question: Which base voltage is associated with e5943b0f-8c95-ef4c-a6f6-16b9ace48341?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
  - expected_steps:
    - - args:
          query: ARENDAL 300KR2
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_07523674f61926743c803f2bda784a77
    nl_question: Identify the base voltage linked to ARENDAL 300KR2.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  - expected_steps:
    - - args:
          query: e3a27e90-4941-8146-86c4-932c8016b8d3
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3>
            .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_075b6025d4593f42a131ebc9ee76de32
    nl_question: Which base voltage is associated with e3a27e90-4941-8146-86c4-932c8016b8d3?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_308e86f8714f5307ffb05eb28ba5f2e9
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for bay (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#connectedThroughPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters bay and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#connectedThroughPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - What is the base voltage connected to $ObjectIdentity(0, cim:Bay)?
  - Identify the base voltage associated with $ObjectIdentity(0, cim:Bay).
  - Which base voltage is linked to $ObjectIdentity(0, cim:Bay) through a voltage
    level and connection?
  - List the base voltage connected through the voltage level of $ObjectIdentity(0,
    cim:Bay).
  - What base voltage is related to $ObjectIdentity(0, cim:Bay)?
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300ST1
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_672c737b58779caa5577b51b5f08d713
    nl_question: List the base voltage connected through the voltage level of KRISTIAN300ST1.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
  - expected_steps:
    - - args:
          query: 95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        name: iri_discovery
        output: urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08>
            .

            <urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5cc2f697af0d6da2edeb32dcbea4e5fc
    nl_question: What base voltage is related to 95f000f9-9c2b-4c4d-9ce5-6ced7a695b08?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:95f000f9-9c2b-4c4d-9ce5-6ced7a695b08
  - expected_steps:
    - - args:
          query: 9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        name: iri_discovery
        output: urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d>
            .

            <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9af59a732a9841abe08267775f506f07
    nl_question: What base voltage is related to 9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
  - expected_steps:
    - - args:
          query: e3a27e90
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3>
            .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b09a20d40f1d32ccd0a05fe83818e6e7
    nl_question: What is the base voltage connected to e3a27e90?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
  - expected_steps:
    - - args:
          query: ARENDAL 300T1
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a>
            .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ce6e107fa3d4b6c5eafc80fa327c545e
    nl_question: What is the base voltage connected to ARENDAL 300T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:connectedThroughPart {$ObjectIdentity(0, cim:Bay)}
    .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_8d9b79e01940c01a41714b312168748c
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel,
    https://cim.ucaiug.io/rules#hasPart) and by filter properties none.
  filters: []
  name: List basevoltage by parameters linearshuntcompensator and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - What is the base voltage of $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the base voltage level associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - Which base voltage is connected to the linear shunt compensator $ObjectIdentity(0,
    cim:LinearShuntCompensator)?
  - List the base voltage level for $ObjectIdentity(0, cim:LinearShuntCompensator).
  - Provide the base voltage related to $ObjectIdentity(0, cim:LinearShuntCompensator).
  questions:
  - expected_steps:
    - - args:
          query: 2dd903bd
        name: iri_discovery
        output: urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_9e0c7c502915eb3b540d19b7d95799ea
    nl_question: List the base voltage level for 2dd903bd.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903bd-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e4186526ead16add5aef7fc95ea2e1ef
    nl_question: What is the base voltage of 2dd903cf-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd90408
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_86dcb90b3f845c047c1f9d5925d098f7
    nl_question: Identify the base voltage level associated with 2dd90408.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_edc4f39811f033d1c1153b7c353d3d1b
    nl_question: List the base voltage level for 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: ASKER   300 LSC1
        name: iri_discovery
        output: urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_3fb589783ca2b1cbfbd28463dee2a240
    nl_question: What is the base voltage of ASKER   300 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90405-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPart {$ObjectIdentity(0, cim:LinearShuntCompensator)}
    .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_dffd7cf3b1e0a254b5081a3933f1f0ba
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel,
    https://cim.ucaiug.io/rules#hasPartTransitive) and by filter properties none.
  filters: []
  name: List basevoltage by parameters linearshuntcompensator and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Identify the base voltage of $ObjectIdentity(0, cim:LinearShuntCompensator).
  - Which base voltage is connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - List the base voltage corresponding to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What is the base voltage linked to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  questions:
  - expected_steps:
    - - args:
          query: HAGAFOSS420 LSC1
        name: iri_discovery
        output: urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_e2302b538f78d518d3edf525281ae882
    nl_question: What is the base voltage linked to HAGAFOSS420 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903fc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: ARENDAL 300 LSC1
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_21bb96eec6ef3235e02319ca9999d55e
    nl_question: What is the base voltage associated with ARENDAL 300 LSC1?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_74a9b99a45bdbabe988caa1691b3ae07
    nl_question: What is the base voltage associated with 2dd903cf-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cf-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_cdb712ad5d8a06d6a66c3e2612167770
    nl_question: Identify the base voltage of 2dd903cc-bdfb-11e5-94fa-c8f73332c8f4.
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903cc-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4>
            .

            <urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_98f95b35cad08fe619e61bd353b54224
    nl_question: What is the base voltage linked to 2dd903c0-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd903c0-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:LinearShuntCompensator)}
    .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_b93327a796c5712bc4977085dc6ca478
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for nonconformload (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPart)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters nonconformload and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPart
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which base voltage is connected to $ObjectIdentity(0, cim:NonConformLoad)?
  - What is the base voltage associated with $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the base voltage linked to $ObjectIdentity(0, cim:NonConformLoad).
  - What base voltage does $ObjectIdentity(0, cim:NonConformLoad) belong to?
  - List the base voltage connected to $ObjectIdentity(0, cim:NonConformLoad).
  questions:
  - expected_steps:
    - - args:
          query: f176975e
        name: iri_discovery
        output: urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90169-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_ef7f9f4538dbee71e0428eb6b7b6aeb0
    nl_question: What base voltage does f176975e belong to?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176975e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697d6
        name: iri_discovery
        output: urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b954151df4b1610e2cfb40951a54236a
    nl_question: List the base voltage connected to f17697d6.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176978e
        name: iri_discovery
        output: urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_f7aac9e8d422cb4f5140b2c1f145350d
    nl_question: List the base voltage connected to f176978e.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176978e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ESTLINK 420 L1
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_7c312494a70694fcc303143acf7d3539
    nl_question: List the base voltage connected to ESTLINK 420 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: DANNEBO 420 L1
        name: iri_discovery
        output: urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPart <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_24bc877622b238b4205e59367f0fceca
    nl_question: Which base voltage is connected to DANNEBO 420 L1?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17696f2-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPart {$ObjectIdentity(0, cim:NonConformLoad)}
    .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_92c7b79b1029b9e5e5504d716f8af55a
- description: A graph pattern which lists all values for basevoltage limited by parameters
    for nonconformload (https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel, https://cim.ucaiug.io/rules#hasPartTransitive)
    and by filter properties none.
  filters: []
  name: List basevoltage by parameters nonconformload and filters none
  outputs:
  - name: basevoltage
    type: cim:BaseVoltage
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#BaseVoltage.VoltageLevel
    - https://cim.ucaiug.io/rules#hasPartTransitive
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - What is the base voltage associated with $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the base voltage of $ObjectIdentity(0, cim:NonConformLoad).
  - Which base voltage is linked to $ObjectIdentity(0, cim:NonConformLoad)?
  - List the base voltage for $ObjectIdentity(0, cim:NonConformLoad).
  - What base voltage is $ObjectIdentity(0, cim:NonConformLoad) connected to?
  questions:
  - expected_steps:
    - - args:
          query: f17697ee
        name: iri_discovery
        output: urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_19a4736486f92247d4ccc69bf859e02b
    nl_question: Which base voltage is linked to f17697ee?
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697ee-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176972e
        name: iri_discovery
        output: urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90174-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_bf645b9c2723d040dddaa2b2c0b7cac3
    nl_question: List the base voltage for f176972e.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f176972e-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697be-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_5521a8d8dff26cbb90d127c20b85df6e
    nl_question: Identify the base voltage of f17697be-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697be-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17697d6
        name: iri_discovery
        output: urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_b12777c1ff5b745b0db0f358d9ea9a54
    nl_question: List the base voltage for f17697d6.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697d6-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ESTLINK 420 L1
        name: iri_discovery
        output: urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?basevoltage WHERE {

            ?basevoltage a cim:BaseVoltage ;

            cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f> a cim:NonConformLoad ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basevoltage"]}, "results": {"bindings": [{"basevoltage":
          {"type": "uri", "value": "urn:uuid:2dd90159-bdfb-11e5-94fa-c8f73332c8f4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basevoltage
    id: question_95b0a2fdf735f7444d90d2dd22f82daa
    nl_question: List the base voltage for ESTLINK 420 L1.
    parameter_bindings:
      $ObjectIdentity(0, cim:NonConformLoad): urn:uuid:f17697c4-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?basevoltage a cim:BaseVoltage ;

    cim:BaseVoltage.VoltageLevel/cimr:hasPartTransitive {$ObjectIdentity(0, cim:NonConformLoad)}
    .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_911ed27176571f5f86c6918778138928
- description: A graph pattern which lists all values for breaker limited by parameters
    for none and by filter properties none.
  filters: []
  name: List breaker by parameters none and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters: []
  paraphrases:
  - What are all the breakers?
  - List all breakers in the system.
  - Identify every breaker in the dataset.
  - Which entities are classified as breakers?
  - Provide a list of all available breakers.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_d19fd97ec49284830ccd14cb3aebf380
    nl_question: What are all the breakers?
    parameter_bindings: {}
  sparql_template: ?breaker a cim:Breaker .
  template_id: template_list_12258d33c3453393e6a78deb321f10d7
- description: A graph pattern which lists all values for breaker limited by parameters
    for bay (https://cim.ucaiug.io/rules#isPart) and by filter properties none.
  filters: []
  name: List breaker by parameters bay and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which breakers are part of $ObjectIdentity(0, cim:Bay)?
  - List all breakers contained within $ObjectIdentity(0, cim:Bay).
  - What breakers belong to $ObjectIdentity(0, cim:Bay)?
  - Can you identify the breakers that are associated with $ObjectIdentity(0, cim:Bay)?
  - Provide the breakers that are part of $ObjectIdentity(0, cim:Bay).
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 300T1
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_645a81f5b4899ea6003cab5b6b96e775
    nl_question: Can you identify the breakers that are associated with ARENDAL 300T1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
  - expected_steps:
    - - args:
          query: bc25cadf-543e-8442-a72a-6c11a851d3cf
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_a5aa09e92c09f6928ecd3ee8f07c74f6
    nl_question: What breakers belong to bc25cadf-543e-8442-a72a-6c11a851d3cf?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
  - expected_steps:
    - - args:
          query: KRISTIAN300KV1
        name: iri_discovery
        output: urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d> .

            <urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_caca32b6a8a98a12644e16a423d20836
    nl_question: Can you identify the breakers that are associated with KRISTIAN300KV1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:9ba118a2-7cb0-a54b-ac6e-277cf55bfd4d
  - expected_steps:
    - - args:
          query: KRISTIAN300AR1
        name: iri_discovery
        output: urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> .

            <urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_fcb74f2f79c8e32ac74daebb8d77d49b
    nl_question: Which breakers are part of KRISTIAN300AR1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e789e752-840f-6244-aca3-735295ad7b1e
  - expected_steps:
    - - args:
          query: KRISTIAN300G4
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_ed700bef2fcb6790d16e22ce5e61bfc7
    nl_question: Can you identify the breakers that are associated with KRISTIAN300G4?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
  sparql_template: '?breaker a cim:Breaker ;

    cimr:isPart {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_8712d2adc6cde4f841d5553b6b20dde7
- description: A graph pattern which lists all values for breaker limited by parameters
    for substation (https://cim.ucaiug.io/rules#isPartTransitive) and by filter properties
    none.
  filters: []
  name: List breaker by parameters substation and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which breakers are part of $ObjectIdentity(0, cim:Substation)?
  - List all breakers contained within $ObjectIdentity(0, cim:Substation).
  - What breakers are associated with $ObjectIdentity(0, cim:Substation)?
  - Identify the breakers that belong to $ObjectIdentity(0, cim:Substation).
  - What are the breakers in $ObjectIdentity(0, cim:Substation)?
  questions:
  - expected_steps:
    - - args:
          query: f176965a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_492ca46d8738aa9310999a06f9a391c9
    nl_question: Which breakers are part of f176965a-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARENDAL
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_bd17109dcae519ce732a9b8bc90f5111
    nl_question: Identify the breakers that belong to ARENDAL.
    parameter_bindings:
      $ObjectIdentity(0, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?breaker a cim:Breaker ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:Substation)} .

    {$ObjectIdentity(0, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_f9d044e071d57cf720cce80101660d76
- description: A graph pattern which lists all values for breaker limited by parameters
    for voltagelevel (https://cim.ucaiug.io/rules#isPartTransitive) and by filter
    properties none.
  filters: []
  name: List breaker by parameters voltagelevel and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which breakers are part of $ObjectIdentity(0, cim:VoltageLevel) transitive hierarchy?
  - List all breakers associated transitively with $ObjectIdentity(0, cim:VoltageLevel).
  - Identify the breakers that belong to the transitive part structure of $ObjectIdentity(0,
    cim:VoltageLevel).
  - What breakers are located within the transitive structure of $ObjectIdentity(0,
    cim:VoltageLevel)?
  - Provide the breakers that are part of the transitive hierarchy of $ObjectIdentity(0,
    cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: f1769660-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_adb1b9ab67073c81689eb4d0fee325bb
    nl_question: Which breakers are part of f1769660-9aeb-11e5-91da-b8763fd99c5f transitive
      hierarchy?
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769672
        name: iri_discovery
        output: urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_93ced66150d103af633fad9dec525adb
    nl_question: Identify the breakers that belong to the transitive part structure
      of f1769672.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARENDAL 420
        name: iri_discovery
        output: urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3>
            .

            <urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_b1a9ba9572931fe643e17e506446d3ab
    nl_question: Identify the breakers that belong to the transitive part structure
      of ARENDAL 420.
    parameter_bindings:
      $ObjectIdentity(0, cim:VoltageLevel): urn:uuid:1f4fabd4-8c57-c245-b107-4e64c9007ae3
  sparql_template: '?breaker a cim:Breaker ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_f2339d0f390f199a114a42ce815193c6
- description: A graph pattern which lists all values for breaker limited by parameters
    for bay (https://cim.ucaiug.io/rules#isPartTransitive) and by filter properties
    none.
  filters: []
  name: List breaker by parameters bay and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Bay
  paraphrases:
  - Which breakers are part of $ObjectIdentity(0, cim:Bay)?
  - List all breakers that are transitive parts of $ObjectIdentity(0, cim:Bay).
  - What breakers belong to the bay $ObjectIdentity(0, cim:Bay)?
  - Identify the breakers contained within $ObjectIdentity(0, cim:Bay).
  - Show me all breakers associated with $ObjectIdentity(0, cim:Bay).
  questions:
  - expected_steps:
    - - args:
          query: cf91c2cb
        name: iri_discovery
        output: urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e>
            .

            <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_3061a2c06f638880899b9baa0cf24f0b
    nl_question: What breakers belong to the bay cf91c2cb?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
  - expected_steps:
    - - args:
          query: d965c17e
        name: iri_discovery
        output: urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3>
            .

            <urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_24bb0c011a803bf9f9e45ff175f06130
    nl_question: Which breakers are part of d965c17e?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:d965c17e-a3fe-c447-8139-b55a1201b3b3
  - expected_steps:
    - - args:
          query: b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_02869a591e7461d71aae6fd2762a2edf
    nl_question: Identify the breakers contained within b61b6279-c21e-8241-aeb7-8d9bd3ead57c.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
  - expected_steps:
    - - args:
          query: e3a27e90-4941-8146-86c4-932c8016b8d3
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3>
            .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_cc749de3cee612089095985d52a661a7
    nl_question: List all breakers that are transitive parts of e3a27e90-4941-8146-86c4-932c8016b8d3.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
  - expected_steps:
    - - args:
          query: f72994d8
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPartTransitive <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_c5049efadc08f1acfe93bdcdd18248a8
    nl_question: List all breakers that are transitive parts of f72994d8.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
  sparql_template: '?breaker a cim:Breaker ;

    cimr:isPartTransitive {$ObjectIdentity(0, cim:Bay)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .'
  template_id: template_list_ac4fccfbaebf701f07e644f5c9607ed1
- description: A graph pattern which lists all values for breaker limited by parameters
    for terminal (https://cim.ucaiug.io/rules#Equipment.Terminals) and by filter properties
    none.
  filters: []
  name: List breaker by parameters terminal and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#Equipment.Terminals
    type: https://cim.ucaiug.io/ns#Terminal
  paraphrases:
  - Which breaker is connected to terminal $ObjectIdentity(0, cim:Terminal)?
  - Identify the breaker associated with terminal $ObjectIdentity(0, cim:Terminal).
  - What breaker has a connection to terminal $ObjectIdentity(0, cim:Terminal)?
  - List the breaker linked to terminal $ObjectIdentity(0, cim:Terminal).
  - Find the breaker connected via terminal $ObjectIdentity(0, cim:Terminal).
  questions:
  - expected_steps:
    - - args:
          query: dae3bb4b-0a86-9243-99c1-a1d5b163774d
        name: iri_discovery
        output: urn:uuid:dae3bb4b-0a86-9243-99c1-a1d5b163774d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:Equipment.Terminals <urn:uuid:dae3bb4b-0a86-9243-99c1-a1d5b163774d>
            .

            <urn:uuid:dae3bb4b-0a86-9243-99c1-a1d5b163774d> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_8a28cc3f46ecd55b00836ed75ab14304
    nl_question: What breaker has a connection to terminal dae3bb4b-0a86-9243-99c1-a1d5b163774d?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:dae3bb4b-0a86-9243-99c1-a1d5b163774d
  - expected_steps:
    - - args:
          query: ARENDAL 300AS1 BB_S T2
        name: iri_discovery
        output: urn:uuid:ee4223ab-0538-dc4a-9b79-d463c048bb08
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:Equipment.Terminals <urn:uuid:ee4223ab-0538-dc4a-9b79-d463c048bb08>
            .

            <urn:uuid:ee4223ab-0538-dc4a-9b79-d463c048bb08> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_675dfb4537e10a67a8b14900662427e0
    nl_question: What breaker has a connection to terminal ARENDAL 300AS1 BB_S T2?
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:ee4223ab-0538-dc4a-9b79-d463c048bb08
  - expected_steps:
    - - args:
          query: c95039b2-aea2-ad4d-b444-c6efc77461e5
        name: iri_discovery
        output: urn:uuid:c95039b2-aea2-ad4d-b444-c6efc77461e5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:Equipment.Terminals <urn:uuid:c95039b2-aea2-ad4d-b444-c6efc77461e5>
            .

            <urn:uuid:c95039b2-aea2-ad4d-b444-c6efc77461e5> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_26b104645c2a62621f4ea162608dfc52
    nl_question: Identify the breaker associated with terminal c95039b2-aea2-ad4d-b444-c6efc77461e5.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:c95039b2-aea2-ad4d-b444-c6efc77461e5
  - expected_steps:
    - - args:
          query: a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5
        name: iri_discovery
        output: urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:Equipment.Terminals <urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5>
            .

            <urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_a230001079253bf35cb77bac95738b2d
    nl_question: List the breaker linked to terminal a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:a4bc44aa-25e4-684a-ab2c-c7fc3378d9e5
  - expected_steps:
    - - args:
          query: c1aa295d-e817-db46-b14e-bee2739fcd9d
        name: iri_discovery
        output: urn:uuid:c1aa295d-e817-db46-b14e-bee2739fcd9d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:Equipment.Terminals <urn:uuid:c1aa295d-e817-db46-b14e-bee2739fcd9d>
            .

            <urn:uuid:c1aa295d-e817-db46-b14e-bee2739fcd9d> a cim:Terminal ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_99c361287f2331cd04dce0a0a67d4f01
    nl_question: Find the breaker connected via terminal c1aa295d-e817-db46-b14e-bee2739fcd9d.
    parameter_bindings:
      $ObjectIdentity(0, cim:Terminal): urn:uuid:c1aa295d-e817-db46-b14e-bee2739fcd9d
  sparql_template: '?breaker a cim:Breaker ;

    cimr:Equipment.Terminals {$ObjectIdentity(0, cim:Terminal)} .

    {$ObjectIdentity(0, cim:Terminal)} a cim:Terminal ;

    .'
  template_id: template_list_6bbcd3883274005c06f084900710145a
- description: A graph pattern which lists all values for breaker limited by parameters
    for breaker (https://cim.ucaiug.io/rules#connectedTo) and by filter properties
    none.
  filters: []
  name: List breaker by parameters breaker and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:Breaker)?
  - Identify the breakers that are linked to $ObjectIdentity(0, cim:Breaker).
  - What breakers are directly connected with $ObjectIdentity(0, cim:Breaker)?
  - List all breakers connected to $ObjectIdentity(0, cim:Breaker).
  - Provide the breakers that are associated with $ObjectIdentity(0, cim:Breaker).
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL 300KR2 BB_S
        name: iri_discovery
        output: urn:uuid:cbd34307-2d45-ae47-872a-516888952750
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:cbd34307-2d45-ae47-872a-516888952750> .

            <urn:uuid:cbd34307-2d45-ae47-872a-516888952750> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_19536e9706f529fb3ec1c986e38c5c02
    nl_question: Which breakers are connected to ARENDAL 300KR2 BB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:cbd34307-2d45-ae47-872a-516888952750
  - expected_steps:
    - - args:
          query: e399c43f
        name: iri_discovery
        output: urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac> .

            <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_c09d6033f8dc8b415526a2120fd472c5
    nl_question: List all breakers connected to e399c43f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
  - expected_steps:
    - - args:
          query: 373c4779
        name: iri_discovery
        output: urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9> .

            <urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_be3ff7f1c4f9102ba66ba53529198768
    nl_question: Provide the breakers that are associated with 373c4779.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9
  - expected_steps:
    - - args:
          query: 0d415b1b
        name: iri_discovery
        output: urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e> .

            <urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_0d4f26b0be3d9dd51bbd659c1888316b
    nl_question: List all breakers connected to 0d415b1b.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e
  - expected_steps:
    - - args:
          query: ARENDAL 420T1  AB_S
        name: iri_discovery
        output: urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72> .

            <urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_34e93272d2d1659e4d615c382ff8df8f
    nl_question: Provide the breakers that are associated with ARENDAL 420T1  AB_S.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72
  sparql_template: '?breaker a cim:Breaker ;

    cimr:connectedTo {$ObjectIdentity(0, cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_d55820f63ba5dfc8e1ccd9d85711df32
- description: A graph pattern which lists all values for breaker limited by parameters
    for busbarsection (https://cim.ucaiug.io/rules#connectedTo) and by filter properties
    none.
  filters: []
  name: List breaker by parameters busbarsection and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - What breakers are connected to $ObjectIdentity(0, cim:BusbarSection)?
  - List the breakers that are connected to $ObjectIdentity(0, cim:BusbarSection).
  - Which breaker is associated with $ObjectIdentity(0, cim:BusbarSection)?
  - Identify the breakers connected to the busbar section $ObjectIdentity(0, cim:BusbarSection).
  - Find the breakers linked to $ObjectIdentity(0, cim:BusbarSection).
  questions:
  - expected_steps:
    - - args:
          query: 2dd90195-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_1d85eee1c51093c9c2b51096a1d27a59
    nl_question: Which breaker is associated with 2dd90195-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd90195-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: KRISTIAN300 B
        name: iri_discovery
        output: urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b> .

            <urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_ba1abfe7ee225d904242c9cc247d9bde
    nl_question: Find the breakers linked to KRISTIAN300 B.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:84573786-1ecd-614d-b343-72f255c26a3b
  - expected_steps:
    - - args:
          query: ARENDAL 300 A
        name: iri_discovery
        output: urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_0964bacf300d7f954cc8df4900ebdcca
    nl_question: List the breakers that are connected to ARENDAL 300 A.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:2dd9019d-bdfb-11e5-94fa-c8f73332c8f4
  - expected_steps:
    - - args:
          query: b8666715-5047-5d4d-a882-85fcf5c727b5
        name: iri_discovery
        output: urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> .

            <urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5> a cim:BusbarSection ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_e2d2e73ab70ab1eb5ddb8e107de7b597
    nl_question: Identify the breakers connected to the busbar section b8666715-5047-5d4d-a882-85fcf5c727b5.
    parameter_bindings:
      $ObjectIdentity(0, cim:BusbarSection): urn:uuid:b8666715-5047-5d4d-a882-85fcf5c727b5
  sparql_template: '?breaker a cim:Breaker ;

    cimr:connectedTo {$ObjectIdentity(0, cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_2e56cc2600ce8f58fad8e8bcb86fc565
- description: A graph pattern which lists all values for breaker limited by parameters
    for disconnector (https://cim.ucaiug.io/rules#connectedTo) and by filter properties
    none.
  filters: []
  name: List breaker by parameters disconnector and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:Disconnector)?
  - Identify the breakers associated with $ObjectIdentity(0, cim:Disconnector).
  - What breakers are linked to $ObjectIdentity(0, cim:Disconnector)?
  - List the breakers that are connected to $ObjectIdentity(0, cim:Disconnector).
  - Which breakers have a connection to the disconnector $ObjectIdentity(0, cim:Disconnector)?
  questions:
  - expected_steps:
    - - args:
          query: b36c1e1d
        name: iri_discovery
        output: urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f> .

            <urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_b75de400e153c5cb3f9ff8615ce7edf7
    nl_question: List the breakers that are connected to b36c1e1d.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:b36c1e1d-ec67-7b48-9a2f-ecbf617ae59f
  - expected_steps:
    - - args:
          query: 674b85b4
        name: iri_discovery
        output: urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a> .

            <urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_634677a723a6a6c668276cff26d2525d
    nl_question: List the breakers that are connected to 674b85b4.
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:674b85b4-1a1f-2341-94bf-7e8f93392a7a
  - expected_steps:
    - - args:
          query: ecc63b62
        name: iri_discovery
        output: urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971> .

            <urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_4e5273e615b9427e5f8d6a26354358ee
    nl_question: Which breakers are connected to ecc63b62?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:ecc63b62-ab62-9747-9744-92ba78e89971
  - expected_steps:
    - - args:
          query: KRISTIAN300FE1 BD_S
        name: iri_discovery
        output: urn:uuid:6589185b-1ac4-df4e-830b-30ea50c3d15d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:6589185b-1ac4-df4e-830b-30ea50c3d15d> .

            <urn:uuid:6589185b-1ac4-df4e-830b-30ea50c3d15d> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_4d12deedd6e5ca8ca072ae9784689560
    nl_question: What breakers are linked to KRISTIAN300FE1 BD_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:6589185b-1ac4-df4e-830b-30ea50c3d15d
  - expected_steps:
    - - args:
          query: ARENDAL 300AS1 BD_S
        name: iri_discovery
        output: urn:uuid:6d9f92ea-354f-9f40-9fc2-33367292f12c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:6d9f92ea-354f-9f40-9fc2-33367292f12c> .

            <urn:uuid:6d9f92ea-354f-9f40-9fc2-33367292f12c> a cim:Disconnector ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_31f072713033e05b7a3ef4b966015ed7
    nl_question: Which breakers have a connection to the disconnector ARENDAL 300AS1
      BD_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Disconnector): urn:uuid:6d9f92ea-354f-9f40-9fc2-33367292f12c
  sparql_template: '?breaker a cim:Breaker ;

    cimr:connectedTo {$ObjectIdentity(0, cim:Disconnector)} .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_dd01a08436304cf8f791a99df08b9032
- description: A graph pattern which lists all values for breaker limited by parameters
    for powertransformer (https://cim.ucaiug.io/rules#connectedTo) and by filter properties
    none.
  filters: []
  name: List breaker by parameters powertransformer and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the breakers associated with $ObjectIdentity(0, cim:PowerTransformer).
  - What breakers are linked to $ObjectIdentity(0, cim:PowerTransformer)?
  - List all breakers connected to $ObjectIdentity(0, cim:PowerTransformer).
  - What are the breakers that have a connection with $ObjectIdentity(0, cim:PowerTransformer)?
  questions:
  - expected_steps:
    - - args:
          query: f1769e1e
        name: iri_discovery
        output: urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f> .

            <urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f> a cim:PowerTransformer
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_ad7b9c6d27428f4d3067def401b5005d
    nl_question: Which breakers are connected to f1769e1e?
    parameter_bindings:
      $ObjectIdentity(0, cim:PowerTransformer): urn:uuid:f1769e1e-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?breaker a cim:Breaker ;

    cimr:connectedTo {$ObjectIdentity(0, cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_61a7a044f68645ae5300b95a8cbc58ec
- description: A graph pattern which lists all values for breaker limited by parameters
    for aclinesegment (https://cim.ucaiug.io/rules#connectedTo) and by filter properties
    none.
  filters: []
  name: List breaker by parameters aclinesegment and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:ACLineSegment)?
  - Identify the breakers linked to $ObjectIdentity(0, cim:ACLineSegment).
  - What breakers are connected to the line segment $ObjectIdentity(0, cim:ACLineSegment)?
  - List all breakers connected to $ObjectIdentity(0, cim:ACLineSegment).
  - What are the breakers associated with $ObjectIdentity(0, cim:ACLineSegment)?
  questions:
  - expected_steps:
    - - args:
          query: 4d89c650-5698-2e43-849b-ff65a7251f9c
        name: iri_discovery
        output: urn:uuid:4d89c650-5698-2e43-849b-ff65a7251f9c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:4d89c650-5698-2e43-849b-ff65a7251f9c> .

            <urn:uuid:4d89c650-5698-2e43-849b-ff65a7251f9c> a cim:ACLineSegment ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_6c02631838e53aaebd717c71f1cbbd54
    nl_question: Which breakers are connected to 4d89c650-5698-2e43-849b-ff65a7251f9c?
    parameter_bindings:
      $ObjectIdentity(0, cim:ACLineSegment): urn:uuid:4d89c650-5698-2e43-849b-ff65a7251f9c
  sparql_template: '?breaker a cim:Breaker ;

    cimr:connectedTo {$ObjectIdentity(0, cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_31302026fdaa422d88a5c0fd86393e83
- description: A graph pattern which lists all values for breaker limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/rules#connectedTo) and by filter
    properties none.
  filters: []
  name: List breaker by parameters linearshuntcompensator and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#connectedTo
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - List all breakers connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - Identify the breaker that is connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What breakers are linked to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Can you provide breakers connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  questions:
  - expected_steps:
    - - args:
          query: 2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        name: iri_discovery
        output: urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:connectedTo <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> .

            <urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4> a cim:LinearShuntCompensator
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_c28730d43a7422362d4872443c5ce07d
    nl_question: What breakers are linked to 2dd90408-bdfb-11e5-94fa-c8f73332c8f4?
    parameter_bindings:
      $ObjectIdentity(0, cim:LinearShuntCompensator): urn:uuid:2dd90408-bdfb-11e5-94fa-c8f73332c8f4
  sparql_template: '?breaker a cim:Breaker ;

    cimr:connectedTo {$ObjectIdentity(0, cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_eb7067f8db2d860440a436e23ba3f295
- description: A graph pattern which lists all values for breaker limited by parameters
    for bay (https://cim.ucaiug.io/rules#isPart), substation (https://cim.ucaiug.io/rules#isPartTransitive)
    and by filter properties none.
  filters: []
  name: List breaker by parameters bay, substation and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Bay
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#Substation
  paraphrases:
  - Which breakers are part of $ObjectIdentity(0, cim:Bay) and indirectly belong to
    $ObjectIdentity(1, cim:Substation)?
  - List all breakers contained in $ObjectIdentity(0, cim:Bay) that are transitively
    part of $ObjectIdentity(1, cim:Substation).
  - What breakers are associated with $ObjectIdentity(0, cim:Bay) and also belong
    to $ObjectIdentity(1, cim:Substation) transitively?
  - Identify the breakers within $ObjectIdentity(0, cim:Bay) that are part of the
    substation $ObjectIdentity(1, cim:Substation) through transitive relationships.
  - Find breakers that are part of $ObjectIdentity(0, cim:Bay) and connected to $ObjectIdentity(1,
    cim:Substation) transitively.
  questions:
  - expected_steps:
    - - args:
          query: ARENDAL
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: ARENDAL 300KR2
        name: iri_discovery
        output: urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> ;

            cimr:isPartTransitive <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c> a cim:Bay ;

            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_262c6d77e1e6526c26b70a55572078b0
    nl_question: Identify the breakers within ARENDAL 300KR2 that are part of the
      substation ARENDAL through transitive relationships.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:b61b6279-c21e-8241-aeb7-8d9bd3ead57c
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f72994d8
        name: iri_discovery
        output: urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> ;

            cimr:isPartTransitive <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc> a cim:Bay ;

            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_9b8eca343304dc2c8a9c0392f9521440
    nl_question: Identify the breakers within f72994d8 that are part of the substation
      f1769670 through transitive relationships.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:f72994d8-9857-b349-a4ae-2e3c9652d5bc
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIANSAND
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: KRISTIAN300G3
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> ;

            cimr:isPartTransitive <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_2fa488cdb637d6028629ce4b1424bcf2
    nl_question: Identify the breakers within KRISTIAN300G3 that are part of the substation
      KRISTIANSAND through transitive relationships.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
      $ObjectIdentity(1, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f176965a-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: KRISTIAN300L1
        name: iri_discovery
        output: urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> ;

            cimr:isPartTransitive <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf> a cim:Bay ;

            .

            <urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_924abc2b63ad10d0eed634c6afb0a918
    nl_question: Which breakers are part of KRISTIAN300L1 and indirectly belong to
      f176965a-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:bc25cadf-543e-8442-a72a-6c11a851d3cf
      $ObjectIdentity(1, cim:Substation): urn:uuid:f176965a-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f1769670-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: ARENDAL 300T1
        name: iri_discovery
        output: urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> ;

            cimr:isPartTransitive <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a> a cim:Bay ;

            .

            <urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f> a cim:Substation ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_2e76bb7f569e41aa26408ee9f4de9e28
    nl_question: List all breakers contained in ARENDAL 300T1 that are transitively
      part of f1769670-9aeb-11e5-91da-b8763fd99c5f.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:07a43fc4-0dca-554d-9d57-b1b721912b5a
      $ObjectIdentity(1, cim:Substation): urn:uuid:f1769670-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?breaker a cim:Breaker ;

    cimr:isPart {$ObjectIdentity(0, cim:Bay)} ;

    cimr:isPartTransitive {$ObjectIdentity(1, cim:Substation)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .

    {$ObjectIdentity(1, cim:Substation)} a cim:Substation ;

    .'
  template_id: template_list_c4f9a4b146818776ebbbd8e5cdac1dab
- description: A graph pattern which lists all values for breaker limited by parameters
    for bay (https://cim.ucaiug.io/rules#isPart), voltagelevel (https://cim.ucaiug.io/rules#isPartTransitive)
    and by filter properties none.
  filters: []
  name: List breaker by parameters bay, voltagelevel and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/rules#isPart
    type: https://cim.ucaiug.io/ns#Bay
  - name: param_1
    path:
    - https://cim.ucaiug.io/rules#isPartTransitive
    type: https://cim.ucaiug.io/ns#VoltageLevel
  paraphrases:
  - Which breakers are part of $ObjectIdentity(0, cim:Bay) and belong to $ObjectIdentity(1,
    cim:VoltageLevel)?
  - List all breakers that are part of bay $ObjectIdentity(0, cim:Bay) and transitive
    to voltage level $ObjectIdentity(1, cim:VoltageLevel).
  - What breakers are associated with both $ObjectIdentity(0, cim:Bay) and $ObjectIdentity(1,
    cim:VoltageLevel)?
  - Provide breakers that are components of $ObjectIdentity(0, cim:Bay) and transitively
    part of $ObjectIdentity(1, cim:VoltageLevel).
  - Identify the breakers located in bay $ObjectIdentity(0, cim:Bay) and connected
    to voltage level $ObjectIdentity(1, cim:VoltageLevel).
  questions:
  - expected_steps:
    - - args:
          query: c356ea84
        name: iri_discovery
        output: urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769660-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> ;

            cimr:isPartTransitive <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e> a cim:Bay ;

            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_3539709d401b33efa4c91e5a4837f4ed
    nl_question: Which breakers are part of c356ea84 and belong to f1769660-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:c356ea84-abae-cb43-895f-7118f2f82b3e
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIAN300G4
        name: iri_discovery
        output: urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769660
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> ;

            cimr:isPartTransitive <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3> a cim:Bay ;

            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_f5dc6845b8ffd08e5565043917af90d0
    nl_question: What breakers are associated with both KRISTIAN300G4 and f1769660?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e3a27e90-4941-8146-86c4-932c8016b8d3
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: KRISTIAN300G1
        name: iri_discovery
        output: urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: KRISTIAN300
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> ;

            cimr:isPartTransitive <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e> a cim:Bay ;

            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_ad9c442ce8f2523e3c646750825aacdd
    nl_question: Provide breakers that are components of KRISTIAN300G1 and transitively
      part of KRISTIAN300.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:cf91c2cb-551a-e14c-8295-85c979c5c75e
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: ARENDAL 300KR1
        name: iri_discovery
        output: urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: ARENDAL 300
        name: iri_discovery
        output: urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> ;

            cimr:isPartTransitive <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341> a cim:Bay ;

            .

            <urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_db18967dcfd5bb06464f9c7502ba1ec3
    nl_question: Identify the breakers located in bay ARENDAL 300KR1 and connected
      to voltage level ARENDAL 300.
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:e5943b0f-8c95-ef4c-a6f6-16b9ace48341
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769672-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: 58f5a32f-aec4-d647-9119-a1b6c15fa01a
        name: iri_discovery
        output: urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: f1769660-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cimr:isPart <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> ;

            cimr:isPartTransitive <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a> a cim:Bay ;

            .

            <urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f> a cim:VoltageLevel ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_98c827a54db8782631b67222e029c651
    nl_question: What breakers are associated with both 58f5a32f-aec4-d647-9119-a1b6c15fa01a
      and f1769660-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:Bay): urn:uuid:58f5a32f-aec4-d647-9119-a1b6c15fa01a
      $ObjectIdentity(1, cim:VoltageLevel): urn:uuid:f1769660-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?breaker a cim:Breaker ;

    cimr:isPart {$ObjectIdentity(0, cim:Bay)} ;

    cimr:isPartTransitive {$ObjectIdentity(1, cim:VoltageLevel)} .

    {$ObjectIdentity(0, cim:Bay)} a cim:Bay ;

    .

    {$ObjectIdentity(1, cim:VoltageLevel)} a cim:VoltageLevel ;

    .'
  template_id: template_list_14f8e0281e695ef0ab09203a7814ba6a
- description: A graph pattern which lists all values for breaker limited by parameters
    for connectivitynode (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.ConnectivityNode) and by filter properties none.
  filters: []
  name: List breaker by parameters connectivitynode and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.ConnectivityNode
    type: https://cim.ucaiug.io/ns#ConnectivityNode
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:ConnectivityNode)?
  - Identify the breakers linked to $ObjectIdentity(0, cim:ConnectivityNode).
  - List all breakers associated with $ObjectIdentity(0, cim:ConnectivityNode).
  - What are the breakers connected through $ObjectIdentity(0, cim:ConnectivityNode)?
  - Provide the breakers that are linked to connectivity node $ObjectIdentity(0, cim:ConnectivityNode).
  questions:
  - expected_steps:
    - - args:
          query: 2751922a
        name: iri_discovery
        output: urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e>
            .

            <urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_45351ea161c497933afd9a005c35c854
    nl_question: Which breakers are connected to 2751922a?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:2751922a-47e7-714b-a611-b90281f72c7e
  - expected_steps:
    - - args:
          query: 0954de0b
        name: iri_discovery
        output: urn:uuid:0954de0b-536f-7b45-b83a-f3ebaf34db13
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:0954de0b-536f-7b45-b83a-f3ebaf34db13>
            .

            <urn:uuid:0954de0b-536f-7b45-b83a-f3ebaf34db13> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_fc3726e6ef04f5d60d5b6077692db7a7
    nl_question: What are the breakers connected through 0954de0b?
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:0954de0b-536f-7b45-b83a-f3ebaf34db13
  - expected_steps:
    - - args:
          query: KRISTIAN CN 009
        name: iri_discovery
        output: urn:uuid:3b3cf49f-d92c-0d4f-86c9-062292ba9dcb
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:3b3cf49f-d92c-0d4f-86c9-062292ba9dcb>
            .

            <urn:uuid:3b3cf49f-d92c-0d4f-86c9-062292ba9dcb> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_48430aae56112a0e6ab59096f4b741ba
    nl_question: Provide the breakers that are linked to connectivity node KRISTIAN
      CN 009.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:3b3cf49f-d92c-0d4f-86c9-062292ba9dcb
  - expected_steps:
    - - args:
          query: 60d2f810
        name: iri_discovery
        output: urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f>
            .

            <urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_9cc7a0791f7b8715b07b4957ef6bcd32
    nl_question: Identify the breakers linked to 60d2f810.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:60d2f810-3070-7c42-845e-563b79e3d17f
  - expected_steps:
    - - args:
          query: 6b8e0ffe-1129-e541-9ba1-65e69ebff7a4
        name: iri_discovery
        output: urn:uuid:6b8e0ffe-1129-e541-9ba1-65e69ebff7a4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode <urn:uuid:6b8e0ffe-1129-e541-9ba1-65e69ebff7a4>
            .

            <urn:uuid:6b8e0ffe-1129-e541-9ba1-65e69ebff7a4> a cim:ConnectivityNode
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_4e77016509ab98329382c5bc360e958c
    nl_question: Identify the breakers linked to 6b8e0ffe-1129-e541-9ba1-65e69ebff7a4.
    parameter_bindings:
      $ObjectIdentity(0, cim:ConnectivityNode): urn:uuid:6b8e0ffe-1129-e541-9ba1-65e69ebff7a4
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cim:Terminal.ConnectivityNode {$ObjectIdentity(0,
    cim:ConnectivityNode)} .

    {$ObjectIdentity(0, cim:ConnectivityNode)} a cim:ConnectivityNode ;

    .'
  template_id: template_list_99af2f9e26de75105ecd13b22335ce97
- description: A graph pattern which lists all values for breaker limited by parameters
    for regulatingcontrol (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/ns#Terminal.RegulatingControl) and by filter properties
    none.
  filters: []
  name: List breaker by parameters regulatingcontrol and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.RegulatingControl
    type: https://cim.ucaiug.io/ns#RegulatingControl
  paraphrases:
  - What breakers are associated with $ObjectIdentity(0, cim:RegulatingControl)?
  - List the breakers linked to the regulating control $ObjectIdentity(0, cim:RegulatingControl).
  - Which breakers are connected through terminals to $ObjectIdentity(0, cim:RegulatingControl)?
  - Identify breakers that are controlled by $ObjectIdentity(0, cim:RegulatingControl).
  - What are the breakers related to the control $ObjectIdentity(0, cim:RegulatingControl)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cim:Terminal.RegulatingControl {$ObjectIdentity(0,
    cim:RegulatingControl)} .

    {$ObjectIdentity(0, cim:RegulatingControl)} a cim:RegulatingControl ;

    .'
  template_id: template_list_19202f76600efa3481774bf4f78a1a9e
- description: A graph pattern which lists all values for breaker limited by parameters
    for svpowerflow (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/ns#Terminal.SvPowerFlow)
    and by filter properties none.
  filters: []
  name: List breaker by parameters svpowerflow and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.SvPowerFlow
    type: https://cim.ucaiug.io/ns#SvPowerFlow
  paraphrases:
  - Which breaker is associated with $ObjectIdentity(0, cim:SvPowerFlow)?
  - Identify the breaker linked to $ObjectIdentity(0, cim:SvPowerFlow).
  - What breaker is connected to the power flow $ObjectIdentity(0, cim:SvPowerFlow)?
  - List the breakers corresponding to $ObjectIdentity(0, cim:SvPowerFlow).
  - Is there a breaker related to the power flow $ObjectIdentity(0, cim:SvPowerFlow)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cim:Terminal.SvPowerFlow {$ObjectIdentity(0,
    cim:SvPowerFlow)} .

    {$ObjectIdentity(0, cim:SvPowerFlow)} a cim:SvPowerFlow ;

    .'
  template_id: template_list_48c9224a6479babbc39fae991036fa35
- description: A graph pattern which lists all values for breaker limited by parameters
    for topologicalnode (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/ns#Terminal.TopologicalNode)
    and by filter properties none.
  filters: []
  name: List breaker by parameters topologicalnode and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.TopologicalNode
    type: https://cim.ucaiug.io/ns#TopologicalNode
  paraphrases:
  - Which breakers are connected to the topological node $ObjectIdentity(0, cim:TopologicalNode)?
  - Identify the breakers associated with $ObjectIdentity(0, cim:TopologicalNode).
  - What breakers are linked to the topological node $ObjectIdentity(0, cim:TopologicalNode)?
  - List all breakers connected to $ObjectIdentity(0, cim:TopologicalNode).
  - Which breakers have a terminal connected to the topological node $ObjectIdentity(0,
    cim:TopologicalNode)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cim:Terminal.TopologicalNode {$ObjectIdentity(0,
    cim:TopologicalNode)} .

    {$ObjectIdentity(0, cim:TopologicalNode)} a cim:TopologicalNode ;

    .'
  template_id: template_list_0583f349a687cf9d4e54678dc1686a1d
- description: A graph pattern which lists all values for breaker limited by parameters
    for transformerend (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/ns#Terminal.TransformerEnd)
    and by filter properties none.
  filters: []
  name: List breaker by parameters transformerend and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/ns#Terminal.TransformerEnd
    type: https://cim.ucaiug.io/ns#TransformerEnd
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:TransformerEnd)?
  - List all breakers associated with $ObjectIdentity(0, cim:TransformerEnd).
  - What breakers are linked to the transformer end $ObjectIdentity(0, cim:TransformerEnd)?
  - Identify the breakers connected to the transformer end $ObjectIdentity(0, cim:TransformerEnd).
  - Provide a list of breakers related to $ObjectIdentity(0, cim:TransformerEnd).
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cim:Terminal.TransformerEnd {$ObjectIdentity(0,
    cim:TransformerEnd)} .

    {$ObjectIdentity(0, cim:TransformerEnd)} a cim:TransformerEnd ;

    .'
  template_id: template_list_c03d75e81f85026bbccc51aa0744b54c
- description: A graph pattern which lists all values for breaker limited by parameters
    for pinterminal (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim4.eu/ns/nc#Terminal.PinTerminal)
    and by filter properties none.
  filters: []
  name: List breaker by parameters pinterminal and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim4.eu/ns/nc#Terminal.PinTerminal
    type: https://cim4.eu/ns/nc#PinTerminal
  paraphrases:
  - Which breaker is connected to the pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  - Identify the breaker that is linked with pin terminal $ObjectIdentity(0, nc:PinTerminal).
  - What breaker has a connection to the pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  - List the breakers associated with the pin terminal $ObjectIdentity(0, nc:PinTerminal).
  - Which breaker corresponds to the pin terminal $ObjectIdentity(0, nc:PinTerminal)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/nc:Terminal.PinTerminal {$ObjectIdentity(0,
    nc:PinTerminal)} .

    {$ObjectIdentity(0, nc:PinTerminal)} a nc:PinTerminal ;

    .'
  template_id: template_list_fc2d05d2523d9072fa012ead8102fa22
- description: A graph pattern which lists all values for breaker limited by parameters
    for synchronousmachine (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List breaker by parameters synchronousmachine and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#SynchronousMachine
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:SynchronousMachine)?
  - List all breakers that have a connection to $ObjectIdentity(0, cim:SynchronousMachine).
  - What are the breakers associated with $ObjectIdentity(0, cim:SynchronousMachine)?
  - Identify the breakers connected through terminals to $ObjectIdentity(0, cim:SynchronousMachine).
  - Which breakers have a terminal connection to $ObjectIdentity(0, cim:SynchronousMachine)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:SynchronousMachine)} .

    {$ObjectIdentity(0, cim:SynchronousMachine)} a cim:SynchronousMachine ;

    .'
  template_id: template_list_37b3ead713b50398bca63bb20f14633d
- description: A graph pattern which lists all values for breaker limited by parameters
    for aclinesegment (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/rules#Terminal.Equipment)
    and by filter properties none.
  filters: []
  name: List breaker by parameters aclinesegment and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ACLineSegment
  paraphrases:
  - Which breaker is connected to $ObjectIdentity(0, cim:ACLineSegment)?
  - Identify the breaker associated with the line segment $ObjectIdentity(0, cim:ACLineSegment).
  - What is the breaker connected to $ObjectIdentity(0, cim:ACLineSegment)?
  - List all breakers connected to the AC line segment $ObjectIdentity(0, cim:ACLineSegment).
  - Provide the breaker connected to $ObjectIdentity(0, cim:ACLineSegment).
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:ACLineSegment)} .

    {$ObjectIdentity(0, cim:ACLineSegment)} a cim:ACLineSegment ;

    .'
  template_id: template_list_52c7ca4849399b4a18770f24fcc91315
- description: A graph pattern which lists all values for breaker limited by parameters
    for breaker (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/rules#Terminal.Equipment)
    and by filter properties none.
  filters: []
  name: List breaker by parameters breaker and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Breaker
  paraphrases:
  - Which breakers have terminals associated with $ObjectIdentity(0, cim:Breaker)?
  - Identify the breakers whose terminals are connected to the breaker $ObjectIdentity(0,
    cim:Breaker).
  - What breakers are linked through terminals to $ObjectIdentity(0, cim:Breaker)?
  - List all breakers with terminals connected to $ObjectIdentity(0, cim:Breaker).
  - Are there any breakers connected via terminals to $ObjectIdentity(0, cim:Breaker)?
  questions:
  - expected_steps:
    - - args:
          query: KRISTIAN300KV1 AB_S
        name: iri_discovery
        output: urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac>
            .

            <urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_efa542010986b2c07ce4fc82208a25cf
    nl_question: What breakers are linked through terminals to KRISTIAN300KV1 AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac
  - expected_steps:
    - - args:
          query: KRISTIAN300G3  BB_S
        name: iri_discovery
        output: urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22>
            .

            <urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_b9624646569951a8e118aacac996c87c
    nl_question: List all breakers with terminals connected to KRISTIAN300G3  BB_S.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22
  - expected_steps:
    - - args:
          query: 368340e1
        name: iri_discovery
        output: urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72>
            .

            <urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_ad1d3ae6f9e8d32225b9709ceac1f0a8
    nl_question: Which breakers have terminals associated with 368340e1?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72
  - expected_steps:
    - - args:
          query: KRISTIAN300L2  AB_S
        name: iri_discovery
        output: urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9>
            .

            <urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_32bf41f95fc6f0bae4ad53f53a31e9f5
    nl_question: What breakers are linked through terminals to KRISTIAN300L2  AB_S?
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9
  - expected_steps:
    - - args:
          query: f56758a8
        name: iri_discovery
        output: urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment <urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b>
            .

            <urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b> a cim:Breaker ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_4424ababb301a21b88211ef035d1c033
    nl_question: List all breakers with terminals connected to f56758a8.
    parameter_bindings:
      $ObjectIdentity(0, cim:Breaker): urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:Breaker)} .

    {$ObjectIdentity(0, cim:Breaker)} a cim:Breaker ;

    .'
  template_id: template_list_589bf642cf571e275b6525012f51d3bf
- description: A graph pattern which lists all values for breaker limited by parameters
    for disconnector (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/rules#Terminal.Equipment)
    and by filter properties none.
  filters: []
  name: List breaker by parameters disconnector and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#Disconnector
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:Disconnector)?
  - Identify the breakers that are linked to $ObjectIdentity(0, cim:Disconnector).
  - What breakers are associated with the disconnector $ObjectIdentity(0, cim:Disconnector)?
  - List all breakers connected to $ObjectIdentity(0, cim:Disconnector).
  - What breakers have connections with $ObjectIdentity(0, cim:Disconnector)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:Disconnector)} .

    {$ObjectIdentity(0, cim:Disconnector)} a cim:Disconnector ;

    .'
  template_id: template_list_ffd4234d61689b5800ba5a7282d59b4a
- description: A graph pattern which lists all values for breaker limited by parameters
    for powertransformer (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List breaker by parameters powertransformer and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#PowerTransformer
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:PowerTransformer)?
  - Identify the breakers associated with $ObjectIdentity(0, cim:PowerTransformer).
  - List all breakers that are linked to $ObjectIdentity(0, cim:PowerTransformer).
  - What breakers are connected through terminals to $ObjectIdentity(0, cim:PowerTransformer)?
  - Find the breakers connected to $ObjectIdentity(0, cim:PowerTransformer) via terminals.
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:PowerTransformer)} .

    {$ObjectIdentity(0, cim:PowerTransformer)} a cim:PowerTransformer ;

    .'
  template_id: template_list_a14d1b1eb0ca8446e7d6d452ac01a426
- description: A graph pattern which lists all values for breaker limited by parameters
    for busbarsection (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/rules#Terminal.Equipment)
    and by filter properties none.
  filters: []
  name: List breaker by parameters busbarsection and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#BusbarSection
  paraphrases:
  - Which breakers are associated with $ObjectIdentity(0, cim:BusbarSection)?
  - Identify breakers connected to $ObjectIdentity(0, cim:BusbarSection).
  - What breakers are linked to the busbar section $ObjectIdentity(0, cim:BusbarSection)?
  - List all breakers associated with $ObjectIdentity(0, cim:BusbarSection).
  - Give me the breakers connected to $ObjectIdentity(0, cim:BusbarSection).
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:BusbarSection)} .

    {$ObjectIdentity(0, cim:BusbarSection)} a cim:BusbarSection ;

    .'
  template_id: template_list_dc892dab5a3ffb33d2807f5c77d88112
- description: A graph pattern which lists all values for breaker limited by parameters
    for conformload (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/rules#Terminal.Equipment)
    and by filter properties none.
  filters: []
  name: List breaker by parameters conformload and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#ConformLoad
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:ConformLoad)?
  - List all breakers associated with $ObjectIdentity(0, cim:ConformLoad).
  - What are the breakers connected through terminals to $ObjectIdentity(0, cim:ConformLoad)?
  - Identify the breakers linked to $ObjectIdentity(0, cim:ConformLoad) via terminals.
  - Which breakers have terminal connections to $ObjectIdentity(0, cim:ConformLoad)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:ConformLoad)} .

    {$ObjectIdentity(0, cim:ConformLoad)} a cim:ConformLoad ;

    .'
  template_id: template_list_4e7ce3e0ea51aa4fdf7324048a828871
- description: A graph pattern which lists all values for breaker limited by parameters
    for linearshuntcompensator (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals,
    https://cim.ucaiug.io/rules#Terminal.Equipment) and by filter properties none.
  filters: []
  name: List breaker by parameters linearshuntcompensator and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#LinearShuntCompensator
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:LinearShuntCompensator)?
  - Find the breakers associated with $ObjectIdentity(0, cim:LinearShuntCompensator).
  - List all breakers connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  - What breakers are linked to $ObjectIdentity(0, cim:LinearShuntCompensator) through
    terminals?
  - Identify the breakers that are connected to $ObjectIdentity(0, cim:LinearShuntCompensator).
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:LinearShuntCompensator)} .

    {$ObjectIdentity(0, cim:LinearShuntCompensator)} a cim:LinearShuntCompensator
    ;

    .'
  template_id: template_list_ecd4d03b6ff8ed7984ac5023567933e9
- description: A graph pattern which lists all values for breaker limited by parameters
    for nonconformload (https://cim.ucaiug.io/ns#ConductingEquipment.Terminals, https://cim.ucaiug.io/rules#Terminal.Equipment)
    and by filter properties none.
  filters: []
  name: List breaker by parameters nonconformload and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#ConductingEquipment.Terminals
    - https://cim.ucaiug.io/rules#Terminal.Equipment
    type: https://cim.ucaiug.io/ns#NonConformLoad
  paraphrases:
  - Which breakers are connected to $ObjectIdentity(0, cim:NonConformLoad)?
  - Identify the breakers linked to $ObjectIdentity(0, cim:NonConformLoad).
  - What are the breakers associated with $ObjectIdentity(0, cim:NonConformLoad)?
  - List the breakers connected to the terminals of $ObjectIdentity(0, cim:NonConformLoad).
  - Which breakers are related to the equipment $ObjectIdentity(0, cim:NonConformLoad)?
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:ConductingEquipment.Terminals/cimr:Terminal.Equipment {$ObjectIdentity(0,
    cim:NonConformLoad)} .

    {$ObjectIdentity(0, cim:NonConformLoad)} a cim:NonConformLoad ;

    .'
  template_id: template_list_b5c581d3f12edf8713b0491b5e1471e5
- description: A graph pattern which lists all values for breaker limited by parameters
    for diagram (https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects, https://cim.ucaiug.io/ns#DiagramObject.Diagram)
    and by filter properties none.
  filters: []
  name: List breaker by parameters diagram and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects
    - https://cim.ucaiug.io/ns#DiagramObject.Diagram
    type: https://cim.ucaiug.io/ns#Diagram
  paraphrases:
  - Which breakers are associated with $ObjectIdentity(0, cim:Diagram)?
  - List the breakers linked to the diagram $ObjectIdentity(0, cim:Diagram).
  - What breakers belong to the diagram $ObjectIdentity(0, cim:Diagram)?
  - Provide a list of breakers connected to $ObjectIdentity(0, cim:Diagram).
  - Which breakers are linked to the diagram $ObjectIdentity(0, cim:Diagram)?
  questions:
  - expected_steps:
    - - args:
          query: 4711f609-dbe8-4738-83f6-be4de1ef2b7d
        name: iri_discovery
        output: urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram <urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d>
            .

            <urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d> a cim:Diagram ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:b209ada6-1835-1540-8868-1cd5e65016c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:fdf147d4-240d-2143-b01a-84fc829bc284"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:bf62264e-c8f3-8f43-95c9-570f3337479c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:a7bb9a3e-03d8-3b46-9cf6-f2bf71ab7042"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0c75da66-5f3b-7d4a-809d-5a3772999253"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:316f39b6-0fed-ea41-87a1-0f5119e136c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:56013ae5-ff4f-2949-b59a-e60c62702d3e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:30b297b4-8e19-da40-9f52-fb9175136a22"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2973c36e-3d17-284c-a950-b86b9496acca"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3c4c59b7-461d-5b40-8f0e-2064845bbfdb"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:e399c43f-0e9e-ae42-a66e-116fcccb56ac"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:05d4226b-111b-f747-84b4-cc7be03f3544"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:13588bcf-c30d-7a49-beaa-67fcce61d305"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:373c4779-0905-d34c-bbc9-d200f848cbd9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7cc994ab-ddb9-8a4a-bbda-e91af59a06d9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:128ca899-5716-9341-a823-dd4c35385f2e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_d1a2c6d354c8e7b434bcb3441eed9039
    nl_question: Which breakers are linked to the diagram 4711f609-dbe8-4738-83f6-be4de1ef2b7d?
    parameter_bindings:
      $ObjectIdentity(0, cim:Diagram): urn:uuid:4711f609-dbe8-4738-83f6-be4de1ef2b7d
  - expected_steps:
    - - args:
          query: 9577b6d2
        name: iri_discovery
        output: urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram <urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147>
            .

            <urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147> a cim:Diagram ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:22e5ddcf-ac23-b449-bc4f-83336535f7c2"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:f56758a8-12a0-7648-b04b-f32ec3247e3b"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:368340e1-464b-814b-9bac-9b70b93dde72"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:dd8be3ea-8ad3-f148-898c-5509662d5159"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:0a46da9f-1326-254e-8a3b-649a431f6625"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:3dd4a1cf-86dc-9649-8120-e519d7986be9"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:cbd34307-2d45-ae47-872a-516888952750"}},
          {"breaker": {"type": "uri", "value": "urn:uuid:7113e099-7f24-6a47-9fa2-94a2d57d6c9b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_5fc122998423c30c7f787afbcdaae05e
    nl_question: Which breakers are associated with 9577b6d2?
    parameter_bindings:
      $ObjectIdentity(0, cim:Diagram): urn:uuid:9577b6d2-3724-458a-87ee-b4a1148b1147
  sparql_template: '?breaker a cim:Breaker ;

    cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.Diagram {$ObjectIdentity(0,
    cim:Diagram)} .

    {$ObjectIdentity(0, cim:Diagram)} a cim:Diagram ;

    .'
  template_id: template_list_0f9038fdc26c61cf85070554c16d1469
- description: A graph pattern which lists all values for breaker limited by parameters
    for diagramobjectpoint (https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects,
    https://cim.ucaiug.io/ns#DiagramObject.DiagramObjectPoints) and by filter properties
    none.
  filters: []
  name: List breaker by parameters diagramobjectpoint and filters none
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters:
  - name: param_0
    path:
    - https://cim.ucaiug.io/ns#IdentifiedObject.DiagramObjects
    - https://cim.ucaiug.io/ns#DiagramObject.DiagramObjectPoints
    type: https://cim.ucaiug.io/ns#DiagramObjectPoint
  paraphrases:
  - Which breakers are associated with the diagram object point $ObjectIdentity(0,
    cim:DiagramObjectPoint)?
  - Identify breakers connected to the diagram object point $ObjectIdentity(0, cim:DiagramObjectPoint).
  - What breakers are linked to the diagram object point $ObjectIdentity(0, cim:DiagramObjectPoint)?
  - List all breakers related to the diagram object point $ObjectIdentity(0, cim:DiagramObjectPoint).
  - Which breakers have diagram objects that include the point $ObjectIdentity(0,
    cim:DiagramObjectPoint)?
  questions:
  - expected_steps:
    - - args:
          query: urn:uuid:b96c6766-e52c-4d92-8e5d-20215d756d78
        name: iri_discovery
        output: urn:uuid:b96c6766-e52c-4d92-8e5d-20215d756d78
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:b96c6766-e52c-4d92-8e5d-20215d756d78> .

            <urn:uuid:b96c6766-e52c-4d92-8e5d-20215d756d78> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:5ae8b25f-24cc-e34b-b238-2aea59d516c5"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_8631c87e917dd61fe2c3963a4f9c8a20
    nl_question: What breakers are linked to the diagram object point urn:uuid:b96c6766-e52c-4d92-8e5d-20215d756d78?
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:b96c6766-e52c-4d92-8e5d-20215d756d78
  - expected_steps:
    - - args:
          query: urn:uuid:5e3970d2-b31c-40c1-a02f-c8041b20c154
        name: iri_discovery
        output: urn:uuid:5e3970d2-b31c-40c1-a02f-c8041b20c154
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:5e3970d2-b31c-40c1-a02f-c8041b20c154> .

            <urn:uuid:5e3970d2-b31c-40c1-a02f-c8041b20c154> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0d415b1b-b4da-f34f-aafb-802c77edce8e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_b7c7285926c089e7692d1875f1dbb73b
    nl_question: Identify breakers connected to the diagram object point urn:uuid:5e3970d2-b31c-40c1-a02f-c8041b20c154.
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:5e3970d2-b31c-40c1-a02f-c8041b20c154
  - expected_steps:
    - - args:
          query: urn:uuid:5727f511-c497-4774-a696-fb0dafaa724e
        name: iri_discovery
        output: urn:uuid:5727f511-c497-4774-a696-fb0dafaa724e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:5727f511-c497-4774-a696-fb0dafaa724e> .

            <urn:uuid:5727f511-c497-4774-a696-fb0dafaa724e> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:cefef4c4-1b45-af4b-8e13-275e0c9ffe27"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_cf7912032bffd2c519e2989aa9f31e90
    nl_question: What breakers are linked to the diagram object point urn:uuid:5727f511-c497-4774-a696-fb0dafaa724e?
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:5727f511-c497-4774-a696-fb0dafaa724e
  - expected_steps:
    - - args:
          query: urn:uuid:953ce41a-29b0-46e8-abb0-c92116683876
        name: iri_discovery
        output: urn:uuid:953ce41a-29b0-46e8-abb0-c92116683876
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:953ce41a-29b0-46e8-abb0-c92116683876> .

            <urn:uuid:953ce41a-29b0-46e8-abb0-c92116683876> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:0169b8e7-c05b-3640-b55e-22b40081ca21"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_305a1e9f49f796db3cebfd84b2d99bd0
    nl_question: Identify breakers connected to the diagram object point urn:uuid:953ce41a-29b0-46e8-abb0-c92116683876.
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:953ce41a-29b0-46e8-abb0-c92116683876
  - expected_steps:
    - - args:
          query: urn:uuid:93c0c020-80ab-4655-a55f-6ec13d2bc53e
        name: iri_discovery
        output: urn:uuid:93c0c020-80ab-4655-a55f-6ec13d2bc53e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?breaker WHERE {

            ?breaker a cim:Breaker ;

            cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints
            <urn:uuid:93c0c020-80ab-4655-a55f-6ec13d2bc53e> .

            <urn:uuid:93c0c020-80ab-4655-a55f-6ec13d2bc53e> a cim:DiagramObjectPoint
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["breaker"]}, "results": {"bindings": [{"breaker":
          {"type": "uri", "value": "urn:uuid:2384f146-deb2-c046-817c-6322a5381b9c"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - breaker
    id: question_fbb70da596ec43147c88794798477fed
    nl_question: List all breakers related to the diagram object point urn:uuid:93c0c020-80ab-4655-a55f-6ec13d2bc53e.
    parameter_bindings:
      $ObjectIdentity(0, cim:DiagramObjectPoint): urn:uuid:93c0c020-80ab-4655-a55f-6ec13d2bc53e
  sparql_template: '?breaker a cim:Breaker ;

    cim:IdentifiedObject.DiagramObjects/cim:DiagramObject.DiagramObjectPoints {$ObjectIdentity(0,
    cim:DiagramObjectPoint)} .

    {$ObjectIdentity(0, cim:DiagramObjectPoint)} a cim:DiagramObjectPoint ;

    .'
  template_id: template_list_cd686cc5e7139636695886ee74f5e2bb
- description: A graph pattern which lists all values for breaker limited by parameters
    for none and by filter properties diagramobject.rotation.
  filters:
  - property: https://cim.ucaiug.io/ns#DiagramObject.rotation
    subject: cim:Breaker
    type: xsd:float
  name: List breaker by parameters none and filters diagramobject.rotation
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters: []
  paraphrases:
  - Which breakers have a rotation value of $ValueFilter(cim:Breaker, cim:DiagramObject.rotation,
    xsd:float)?
  - Provide breakers with a rotation of $ValueFilter(cim:Breaker, cim:DiagramObject.rotation,
    xsd:float).
  - List the breakers whose rotation is $ValueFilter(cim:Breaker, cim:DiagramObject.rotation,
    xsd:float).
  - What are the breakers with a rotation equal to $ValueFilter(cim:Breaker, cim:DiagramObject.rotation,
    xsd:float)?
  - Identify the breakers having a rotation of $ValueFilter(cim:Breaker, cim:DiagramObject.rotation,
    xsd:float).
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:DiagramObject.rotation {$ValueFilter(cim:Breaker, cim:DiagramObject.rotation,
    xsd:float)} .'
  template_id: template_list_3733906404f3c004b9a717556f45eafa
- description: A graph pattern which lists all values for breaker limited by parameters
    for none and by filter properties svstatus.inservice.
  filters:
  - property: https://cim.ucaiug.io/ns#SvStatus.inService
    subject: cim:Breaker
    type: xsd:boolean
  name: List breaker by parameters none and filters svstatus.inservice
  outputs:
  - name: breaker
    type: cim:Breaker
  parameters: []
  paraphrases:
  - Which breakers are in service with a status of $ValueFilter(cim:Breaker, cim:SvStatus.inService,
    xsd:boolean)?
  - List all breakers that have an in-service status of $ValueFilter(cim:Breaker,
    cim:SvStatus.inService, xsd:boolean).
  - Identify the breakers with a service status of $ValueFilter(cim:Breaker, cim:SvStatus.inService,
    xsd:boolean).
  - What breakers with an in-service status of $ValueFilter(cim:Breaker, cim:SvStatus.inService,
    xsd:boolean) are available?
  - Provide the breakers that are in-service with status $ValueFilter(cim:Breaker,
    cim:SvStatus.inService, xsd:boolean).
  questions: []
  sparql_template: '?breaker a cim:Breaker ;

    cim:SvStatus.inService {$ValueFilter(cim:Breaker, cim:SvStatus.inService, xsd:boolean)}
    .'
  template_id: template_list_f1ae1ce99575be0f261355a3692e379c
- description: A graph pattern which lists all values for basetimeserieskind limited
    by parameters for none and by filter properties none.
  filters: []
  name: List basetimeserieskind by parameters none and filters none
  outputs:
  - name: basetimeserieskind
    type: nc:BaseTimeSeriesKind
  parameters: []
  paraphrases:
  - What are the base time series kinds available?
  - List all base time series kinds.
  - Can you provide all base time series kinds?
  - What types of base time series kinds are there?
  - Identify all base time series kinds.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?basetimeserieskind WHERE {

            ?basetimeserieskind a nc:BaseTimeSeriesKind .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["basetimeserieskind"]}, "results": {"bindings":
          [{"basetimeserieskind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BaseTimeSeriesKind.actual"}},
          {"basetimeserieskind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BaseTimeSeriesKind.schedule"}},
          {"basetimeserieskind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BaseTimeSeriesKind.forecast"}},
          {"basetimeserieskind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BaseTimeSeriesKind.hindcast"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - basetimeserieskind
    id: question_15a7a41c87eba3101d7351b30675e958
    nl_question: Identify all base time series kinds.
    parameter_bindings: {}
  sparql_template: ?basetimeserieskind a nc:BaseTimeSeriesKind .
  template_id: template_list_ab4ee42727d26d2b0705b9b2d8158e78
- description: A graph pattern which lists all values for biddirectionkind limited
    by parameters for none and by filter properties none.
  filters: []
  name: List biddirectionkind by parameters none and filters none
  outputs:
  - name: biddirectionkind
    type: nc:BidDirectionKind
  parameters: []
  paraphrases:
  - What are the bid direction kinds?
  - List all available bid direction kinds.
  - Can you provide the different types of bid direction kinds?
  - What bid direction kinds exist?
  - Identify all the entities categorized as bid direction kinds.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?biddirectionkind WHERE {

            ?biddirectionkind a nc:BidDirectionKind .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddirectionkind"]}, "results": {"bindings":
          [{"biddirectionkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BidDirectionKind.down"}},
          {"biddirectionkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BidDirectionKind.stable"}},
          {"biddirectionkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BidDirectionKind.up"}},
          {"biddirectionkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#BidDirectionKind.upAndDown"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddirectionkind
    id: question_80c2f6b7c037e19467d8e7ab8452bca6
    nl_question: Identify all the entities categorized as bid direction kinds.
    parameter_bindings: {}
  sparql_template: ?biddirectionkind a nc:BidDirectionKind .
  template_id: template_list_05ba2a33cca9db18d4f416727fa6a60c
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for none and by filter properties none.
  filters: []
  name: List biddingzone by parameters none and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters: []
  paraphrases:
  - What are the different bidding zones?
  - List all the bidding zones.
  - Can you identify all the bidding zones?
  - Which areas are defined as bidding zones?
  - Provide a list of bidding zones.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b478a210-4550-4986-9e47-47912ff06d61"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:0c1bc7f4-7404-4a4d-9d6b-d9edc0944a54"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:7d612e2e-5378-42a4-9d44-c3a722561c99"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:8ad62773-067d-4de6-a818-c399459347cf"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:e7e780b2-3a74-4453-8e4d-f10a397abf5d"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:3c85143d-a2d8-4ddf-9521-27f4b634ad62"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:7216a0ff-6528-4026-80ad-d73fb45efda0"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:fd627c61-3528-4127-a5d5-be2b3dfcf1d2"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:f7bf2b22-981d-468a-88a5-895833533251"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:ebf80203-6649-42c7-901e-18382bcb3730"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:afbedf95-95b7-4192-a7a0-711fe1954363"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:a285b3dd-010c-4d79-aac8-54832d0d994c"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:239f5b94-dc6c-40ef-8413-f95f23ba701e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:e79e30a5-9cc0-4773-9909-1aab02341519"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:f0a0d421-7010-423b-805a-73a99393f1d6"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:8ec52d73-62d1-4676-a791-0f7302a04b71"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:5df846f4-0a3a-43fc-af92-1d2fa0c6d860"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:173e9d6d-77c8-44e0-805f-dc2f773c61fb"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:2bd7a8ab-18d1-42c6-8454-c2c8ff4dbebd"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:20ab92be-8650-44cc-8a7e-fdae8baf027f"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:9eab662e-dc18-41ad-883e-021cbcfede99"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:6fc38ac8-aebd-4bd9-8ffd-df9de926431b"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:513a2d2e-952f-458d-ba64-e01da098b43c"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:63120a2a-5a7e-4d6e-b5fe-7b9f31214372"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:4684fa6a-2955-4a24-b862-b6287ae8edf1"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:876cec4f-ba53-4430-b74e-db535e4c10dd"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:2cd34940-0a4f-420a-92db-b265c4bd23ea"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:e8bc1265-aed2-4455-8e01-aa98cff31cc6"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:109c6570-7b10-4855-9d2e-648818ed95e3"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:782856fe-3263-4d10-8f45-4005f5f8e477"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:2fe0c5f3-33d1-4c30-9cc9-1e7d69d2befe"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:1573e9cd-ba34-4706-8111-a20ba8f299dd"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:80022cc2-2b82-45e9-b225-a5defa8b17d6"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:4835ff24-9dfd-439c-88f0-fed992da0949"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_a6797b3104f2c7e7a16a87cda31207a8
    nl_question: What are the different bidding zones?
    parameter_bindings: {}
  sparql_template: ?biddingzone a nc:BiddingZone .
  template_id: template_list_a6374cd53cf44ade5fbd4d96cc52c1f7
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzoneborder and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  paraphrases:
  - Which bidding zones are connected by the bidding zone border $ObjectIdentity(0,
    nc:BiddingZoneBorder)?
  - Identify the bidding zones associated with $ObjectIdentity(0, nc:BiddingZoneBorder).
  - What are the bidding zones linked to the bidding zone border $ObjectIdentity(0,
    nc:BiddingZoneBorder)?
  - List all bidding zones that share the border $ObjectIdentity(0, nc:BiddingZoneBorder).
  - The bidding zone border $ObjectIdentity(0, nc:BiddingZoneBorder) is part of which
    bidding zones?
  questions:
  - expected_steps:
    - - args:
          query: f87c7026
        name: iri_discovery
        output: urn:uuid:f87c7026-ffd9-4c9e-b2ad-5311ea79e5f2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:f87c7026-ffd9-4c9e-b2ad-5311ea79e5f2>
            .

            <urn:uuid:f87c7026-ffd9-4c9e-b2ad-5311ea79e5f2> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_7e78effefbee1b9b64139131e098a3e7
    nl_question: The bidding zone border f87c7026 is part of which bidding zones?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:f87c7026-ffd9-4c9e-b2ad-5311ea79e5f2
  - expected_steps:
    - - args:
          query: becf566b
        name: iri_discovery
        output: urn:uuid:becf566b-8de1-43f3-9995-19921bbab9b0
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:becf566b-8de1-43f3-9995-19921bbab9b0>
            .

            <urn:uuid:becf566b-8de1-43f3-9995-19921bbab9b0> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_78b0127317b1123706a8aa08c80db9d5
    nl_question: List all bidding zones that share the border becf566b.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:becf566b-8de1-43f3-9995-19921bbab9b0
  - expected_steps:
    - - args:
          query: 4f1743b1
        name: iri_discovery
        output: urn:uuid:4f1743b1-da1c-4087-9055-291f7955ec8f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:4f1743b1-da1c-4087-9055-291f7955ec8f>
            .

            <urn:uuid:4f1743b1-da1c-4087-9055-291f7955ec8f> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_7dc8872737d0aa5e2a53f9f70ce7d720
    nl_question: The bidding zone border 4f1743b1 is part of which bidding zones?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:4f1743b1-da1c-4087-9055-291f7955ec8f
  - expected_steps:
    - - args:
          query: 72eb4991
        name: iri_discovery
        output: urn:uuid:72eb4991-d019-4b13-b023-74578baec192
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:72eb4991-d019-4b13-b023-74578baec192>
            .

            <urn:uuid:72eb4991-d019-4b13-b023-74578baec192> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_705287387a12bf29c83e27bf36a33619
    nl_question: The bidding zone border 72eb4991 is part of which bidding zones?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:72eb4991-d019-4b13-b023-74578baec192
  - expected_steps:
    - - args:
          query: 3f43657a-d46a-4247-85d8-55027c0adaf7
        name: iri_discovery
        output: urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7>
            .

            <urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_0624ec23b7c2a01ac4756700b200aaae
    nl_question: What are the bidding zones linked to the bidding zone border 3f43657a-d46a-4247-85d8-55027c0adaf7?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderOne {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .'
  template_id: template_list_194d99ac5769a22830bd43763826257c
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzoneborder and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  paraphrases:
  - Which bidding zones are connected by $ObjectIdentity(0, nc:BiddingZoneBorder)?
  - Identify the bidding zones associated with the border $ObjectIdentity(0, nc:BiddingZoneBorder).
  - What bidding zones are linked by the bidding zone border $ObjectIdentity(0, nc:BiddingZoneBorder)?
  - List all bidding zones that are connected via $ObjectIdentity(0, nc:BiddingZoneBorder).
  - What are the bidding zones related to $ObjectIdentity(0, nc:BiddingZoneBorder)?
  questions:
  - expected_steps:
    - - args:
          query: 085b0abe-2e81-49f7-9843-f4746c387e10
        name: iri_discovery
        output: urn:uuid:085b0abe-2e81-49f7-9843-f4746c387e10
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:085b0abe-2e81-49f7-9843-f4746c387e10>
            .

            <urn:uuid:085b0abe-2e81-49f7-9843-f4746c387e10> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_c26143c02cf7581fd0e6ea4d6f31fa2a
    nl_question: What are the bidding zones related to 085b0abe-2e81-49f7-9843-f4746c387e10?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:085b0abe-2e81-49f7-9843-f4746c387e10
  - expected_steps:
    - - args:
          query: 9ae85411
        name: iri_discovery
        output: urn:uuid:9ae85411-31a9-474d-acbd-f88da4cad240
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:9ae85411-31a9-474d-acbd-f88da4cad240>
            .

            <urn:uuid:9ae85411-31a9-474d-acbd-f88da4cad240> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:8ad62773-067d-4de6-a818-c399459347cf"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_ede7c3404ea156fa6c2fdc82e7af5918
    nl_question: What bidding zones are linked by the bidding zone border 9ae85411?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:9ae85411-31a9-474d-acbd-f88da4cad240
  - expected_steps:
    - - args:
          query: 418d9231-72f2-4b70-af6d-511cf4a60e46
        name: iri_discovery
        output: urn:uuid:418d9231-72f2-4b70-af6d-511cf4a60e46
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:418d9231-72f2-4b70-af6d-511cf4a60e46>
            .

            <urn:uuid:418d9231-72f2-4b70-af6d-511cf4a60e46> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:f0a0d421-7010-423b-805a-73a99393f1d6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_2f233e8c76a70a5345cc8b55f00127b9
    nl_question: List all bidding zones that are connected via 418d9231-72f2-4b70-af6d-511cf4a60e46.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:418d9231-72f2-4b70-af6d-511cf4a60e46
  - expected_steps:
    - - args:
          query: 7113ab1b-c48b-4977-a067-f70ae52df0b5
        name: iri_discovery
        output: urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5>
            .

            <urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_17dd02b32bc5b939a68340bc97bbaf3f
    nl_question: What are the bidding zones related to 7113ab1b-c48b-4977-a067-f70ae52df0b5?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5
  - expected_steps:
    - - args:
          query: 3f43657a
        name: iri_discovery
        output: urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7>
            .

            <urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_cca5e141a7d15bc20cca593eca50cfcf
    nl_question: What are the bidding zones related to 3f43657a?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:3f43657a-d46a-4247-85d8-55027c0adaf7
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderTwo {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .'
  template_id: template_list_510ba868a12e99d87131394a79cb8fe1
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for schedulingarea (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea) and by filter
    properties none.
  filters: []
  name: List biddingzone by parameters schedulingarea and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    type: https://cim4.eu/ns/nc#SchedulingArea
  paraphrases:
  - Which bidding zone is linked to $ObjectIdentity(0, nc:SchedulingArea)?
  - Identify the bidding zone associated with $ObjectIdentity(0, nc:SchedulingArea).
  - What is the bidding zone connected to $ObjectIdentity(0, nc:SchedulingArea)?
  - List the bidding zones related to scheduling area $ObjectIdentity(0, nc:SchedulingArea).
  - Which bidding zone corresponds to the scheduling area $ObjectIdentity(0, nc:SchedulingArea)?
  questions:
  - expected_steps:
    - - args:
          query: SA-NO4
        name: iri_discovery
        output: urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea <urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e>
            .

            <urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_e6f133f358041ae4993c9b676af8db8b
    nl_question: Which bidding zone corresponds to the scheduling area SA-NO4?
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:0b6da2c4-48c2-4a39-953a-38b365e0953e
  - expected_steps:
    - - args:
          query: SA-NO3
        name: iri_discovery
        output: urn:uuid:b08fcabb-1507-478a-8b76-081ead819b1d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea <urn:uuid:b08fcabb-1507-478a-8b76-081ead819b1d>
            .

            <urn:uuid:b08fcabb-1507-478a-8b76-081ead819b1d> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_33fe4565451a9eb3ffb5b899d90c3075
    nl_question: What is the bidding zone connected to SA-NO3?
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:b08fcabb-1507-478a-8b76-081ead819b1d
  - expected_steps:
    - - args:
          query: d8739dc3
        name: iri_discovery
        output: urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea <urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc>
            .

            <urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_c9fd822f611adda1a8972aba846ada33
    nl_question: What is the bidding zone connected to d8739dc3?
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:d8739dc3-ffab-4457-b819-a20579c4d0fc
  - expected_steps:
    - - args:
          query: 096cb162-6a74-4dcd-b9e5-9845e1f049b6
        name: iri_discovery
        output: urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea <urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6>
            .

            <urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_183eb85a0189cef6d6422d97a7ab8609
    nl_question: Which bidding zone corresponds to the scheduling area 096cb162-6a74-4dcd-b9e5-9845e1f049b6?
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6
  - expected_steps:
    - - args:
          query: d398cead
        name: iri_discovery
        output: urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b>
            .

            <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_d8f2523bbc62af57caa63412f5fafd4b
    nl_question: Identify the bidding zone associated with d398cead.
    parameter_bindings:
      $ObjectIdentity(0, nc:SchedulingArea): urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.SchedulingArea {$ObjectIdentity(0, nc:SchedulingArea)} .

    {$ObjectIdentity(0, nc:SchedulingArea)} a nc:SchedulingArea ;

    .'
  template_id: template_list_e881b4a6016495af806456ea5129388b
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for none and by filter properties biddingzone.istradeenabled.
  filters:
  - property: https://cim4.eu/ns/nc#BiddingZone.isTradeEnabled
    subject: nc:BiddingZone
    type: xsd:boolean
  name: List biddingzone by parameters none and filters biddingzone.istradeenabled
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters: []
  paraphrases:
  - Which bidding zones have trade enabled set to $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)?
  - List the bidding zones where trading is $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean).
  - What bidding zones have trading marked as $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)?
  - Identify the bidding zones with trade status of $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean).
  - Provide a list of bidding zones where trade is $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean).
  questions: []
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.isTradeEnabled {$ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)} .'
  template_id: template_list_7004130973e6d0c59be6381c3653735b
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne)
    and by filter properties biddingzone.istradeenabled.
  filters:
  - property: https://cim4.eu/ns/nc#BiddingZone.isTradeEnabled
    subject: nc:BiddingZone
    type: xsd:boolean
  name: List biddingzone by parameters biddingzoneborder and filters biddingzone.istradeenabled
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  paraphrases:
  - Is trade enabled in the bidding zone connected to $ObjectIdentity(0, nc:BiddingZoneBorder)?
  - Which bidding zone connected to $ObjectIdentity(0, nc:BiddingZoneBorder) has trade
    enabled as $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean)?
  - Identify the bidding zone associated with $ObjectIdentity(0, nc:BiddingZoneBorder)
    where trade is set to $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean).
  - List all bidding zones linked to $ObjectIdentity(0, nc:BiddingZoneBorder) with
    trade status of $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean).
  - Which bidding zone connected through $ObjectIdentity(0, nc:BiddingZoneBorder)
    has trade status as $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)?
  questions: []
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderOne {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    ;

    nc:BiddingZone.isTradeEnabled {$ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)} .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .'
  template_id: template_list_e78ba03b1611aed53b3d49ab84f25c70
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo)
    and by filter properties biddingzone.istradeenabled.
  filters:
  - property: https://cim4.eu/ns/nc#BiddingZone.isTradeEnabled
    subject: nc:BiddingZone
    type: xsd:boolean
  name: List biddingzone by parameters biddingzoneborder and filters biddingzone.istradeenabled
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  paraphrases:
  - Is trading enabled for the bidding zone at border $ObjectIdentity(0, nc:BiddingZoneBorder)?
  - Which bidding zone at border $ObjectIdentity(0, nc:BiddingZoneBorder) has trading
    enabled?
  - Provide the bidding zones where trading is $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean) at border $ObjectIdentity(0, nc:BiddingZoneBorder).
  - List the bidding zones at border $ObjectIdentity(0, nc:BiddingZoneBorder) with
    trading set to $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean).
  - For the border $ObjectIdentity(0, nc:BiddingZoneBorder), what is the trade status
    for the bidding zone?
  questions: []
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderTwo {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    ;

    nc:BiddingZone.isTradeEnabled {$ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)} .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .'
  template_id: template_list_ae307b6f2681d8ae9e0631b1a25cd16b
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for schedulingarea (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea) and by filter
    properties biddingzone.istradeenabled.
  filters:
  - property: https://cim4.eu/ns/nc#BiddingZone.isTradeEnabled
    subject: nc:BiddingZone
    type: xsd:boolean
  name: List biddingzone by parameters schedulingarea and filters biddingzone.istradeenabled
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    type: https://cim4.eu/ns/nc#SchedulingArea
  paraphrases:
  - Which bidding zones associated with $ObjectIdentity(0, nc:SchedulingArea) have
    trade enabled set to $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)?
  - 'Get the bidding zones in $ObjectIdentity(0, nc:SchedulingArea) where trading
    is enabled: $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean).'
  - List all bidding zones linked to $ObjectIdentity(0, nc:SchedulingArea) where trade
    is $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean).
  - What are the bidding zones in $ObjectIdentity(0, nc:SchedulingArea) with trade
    enabled being $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean)?
  - Identify the bidding zones under $ObjectIdentity(0, nc:SchedulingArea) with trading
    status set to $ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled, xsd:boolean).
  questions: []
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.SchedulingArea {$ObjectIdentity(0, nc:SchedulingArea)} ;

    nc:BiddingZone.isTradeEnabled {$ValueFilter(nc:BiddingZone, nc:BiddingZone.isTradeEnabled,
    xsd:boolean)} .

    {$ObjectIdentity(0, nc:SchedulingArea)} a nc:SchedulingArea ;

    .'
  template_id: template_list_ebe804fa251600b63eb8a0e49725c844
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne),
    biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo) and
    by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzoneborder, biddingzoneborder and filters
    none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  paraphrases:
  - What is the bidding zone that is associated with $ObjectIdentity(0, nc:BiddingZoneBorder)
    and $ObjectIdentity(1, nc:BiddingZoneBorder)?
  - Which bidding zone connects the borders $ObjectIdentity(0, nc:BiddingZoneBorder)
    and $ObjectIdentity(1, nc:BiddingZoneBorder)?
  - Identify the bidding zone linked to both $ObjectIdentity(0, nc:BiddingZoneBorder)
    and $ObjectIdentity(1, nc:BiddingZoneBorder).
  - List the bidding zones related to $ObjectIdentity(0, nc:BiddingZoneBorder) and
    $ObjectIdentity(1, nc:BiddingZoneBorder).
  - Which bidding zone has connections with $ObjectIdentity(0, nc:BiddingZoneBorder)
    and $ObjectIdentity(1, nc:BiddingZoneBorder)?
  questions:
  - expected_steps:
    - - args:
          query: NO5 - NO1
        name: iri_discovery
        output: urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
        name: iri_discovery
        output: urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd>
            ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb>
            .

            <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_1603b919259e26ea393d7be4f0640bf7
    nl_question: List the bidding zones related to 2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
      and NO5 - NO1.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
      $ObjectIdentity(1, nc:BiddingZoneBorder): urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb
  - expected_steps:
    - - args:
          query: 72eb4991
        name: iri_discovery
        output: urn:uuid:72eb4991-d019-4b13-b023-74578baec192
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 4f05e7b6-fd77-4913-a112-b8524b21d0b4
        name: iri_discovery
        output: urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4>
            ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:72eb4991-d019-4b13-b023-74578baec192>
            .

            <urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:72eb4991-d019-4b13-b023-74578baec192> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_03b88c894c345123e50f8349f9ab1d7a
    nl_question: Which bidding zone has connections with 4f05e7b6-fd77-4913-a112-b8524b21d0b4
      and 72eb4991?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4
      $ObjectIdentity(1, nc:BiddingZoneBorder): urn:uuid:72eb4991-d019-4b13-b023-74578baec192
  - expected_steps:
    - - args:
          query: 4607066a-7748-4c8b-acb1-3bc648bf41c2
        name: iri_discovery
        output: urn:uuid:4607066a-7748-4c8b-acb1-3bc648bf41c2
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: c6f889c7
        name: iri_discovery
        output: urn:uuid:c6f889c7-eb10-4964-a47f-765cabbb0aa3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:c6f889c7-eb10-4964-a47f-765cabbb0aa3>
            ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:4607066a-7748-4c8b-acb1-3bc648bf41c2>
            .

            <urn:uuid:c6f889c7-eb10-4964-a47f-765cabbb0aa3> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:4607066a-7748-4c8b-acb1-3bc648bf41c2> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_0cbffe43dc757a5cd4fbc82b99113397
    nl_question: List the bidding zones related to c6f889c7 and 4607066a-7748-4c8b-acb1-3bc648bf41c2.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:c6f889c7-eb10-4964-a47f-765cabbb0aa3
      $ObjectIdentity(1, nc:BiddingZoneBorder): urn:uuid:4607066a-7748-4c8b-acb1-3bc648bf41c2
  - expected_steps:
    - - args:
          query: NO5 - NO2
        name: iri_discovery
        output: urn:uuid:8a2653a0-7f76-4f64-a346-9ae318f219dc
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: a681779c-0c9a-4d1e-9b31-5e896f09b6d3
        name: iri_discovery
        output: urn:uuid:a681779c-0c9a-4d1e-9b31-5e896f09b6d3
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:a681779c-0c9a-4d1e-9b31-5e896f09b6d3>
            ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:8a2653a0-7f76-4f64-a346-9ae318f219dc>
            .

            <urn:uuid:a681779c-0c9a-4d1e-9b31-5e896f09b6d3> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:8a2653a0-7f76-4f64-a346-9ae318f219dc> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_cd798c2d06430a1b0e7d0294d64b0919
    nl_question: Which bidding zone has connections with a681779c-0c9a-4d1e-9b31-5e896f09b6d3
      and NO5 - NO2?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:a681779c-0c9a-4d1e-9b31-5e896f09b6d3
      $ObjectIdentity(1, nc:BiddingZoneBorder): urn:uuid:8a2653a0-7f76-4f64-a346-9ae318f219dc
  - expected_steps:
    - - args:
          query: PL - SE4
        name: iri_discovery
        output: urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: d2baadfc-1398-4300-bcd8-2eacd5b931aa
        name: iri_discovery
        output: urn:uuid:d2baadfc-1398-4300-bcd8-2eacd5b931aa
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:d2baadfc-1398-4300-bcd8-2eacd5b931aa>
            ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5>
            .

            <urn:uuid:d2baadfc-1398-4300-bcd8-2eacd5b931aa> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5> a nc:BiddingZoneBorder
            ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_ac23fe924966dd5a48427b3547c403d7
    nl_question: Which bidding zone connects the borders d2baadfc-1398-4300-bcd8-2eacd5b931aa
      and PL - SE4?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:d2baadfc-1398-4300-bcd8-2eacd5b931aa
      $ObjectIdentity(1, nc:BiddingZoneBorder): urn:uuid:7113ab1b-c48b-4977-a067-f70ae52df0b5
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderOne {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    ;

    nc:BiddingZone.BiddingZoneBorderTwo {$ObjectIdentity(1, nc:BiddingZoneBorder)}
    .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .

    {$ObjectIdentity(1, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .'
  template_id: template_list_d727cfff79da99a0e4d778ffccf5b1d2
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne),
    schedulingarea (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea) and by filter
    properties none.
  filters: []
  name: List biddingzone by parameters biddingzoneborder, schedulingarea and filters
    none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    type: https://cim4.eu/ns/nc#SchedulingArea
  paraphrases:
  - Which bidding zones are associated with $ObjectIdentity(0, nc:BiddingZoneBorder)
    and $ObjectIdentity(1, nc:SchedulingArea)?
  - Identify the bidding zones that are linked to the border $ObjectIdentity(0, nc:BiddingZoneBorder)
    and the scheduling area $ObjectIdentity(1, nc:SchedulingArea).
  - List the bidding zones connected to $ObjectIdentity(0, nc:BiddingZoneBorder) and
    $ObjectIdentity(1, nc:SchedulingArea).
  - What are the bidding zones that have $ObjectIdentity(0, nc:BiddingZoneBorder)
    as a border and $ObjectIdentity(1, nc:SchedulingArea) as a scheduling area?
  - Provide the bidding zones associated with the bidding zone border $ObjectIdentity(0,
    nc:BiddingZoneBorder) and the scheduling area $ObjectIdentity(1, nc:SchedulingArea).
  questions:
  - expected_steps:
    - - args:
          query: 852b95c0-4c49-4ded-85b2-a8f2b610db30
        name: iri_discovery
        output: urn:uuid:852b95c0-4c49-4ded-85b2-a8f2b610db30
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 19454eeb-cf3c-4b22-91c8-42c94a48e04e
        name: iri_discovery
        output: urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:852b95c0-4c49-4ded-85b2-a8f2b610db30>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e>
            .

            <urn:uuid:852b95c0-4c49-4ded-85b2-a8f2b610db30> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_84e9dc926e9575961b278a4427aecb71
    nl_question: Provide the bidding zones associated with the bidding zone border
      852b95c0-4c49-4ded-85b2-a8f2b610db30 and the scheduling area 19454eeb-cf3c-4b22-91c8-42c94a48e04e.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:852b95c0-4c49-4ded-85b2-a8f2b610db30
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e
  - expected_steps:
    - - args:
          query: 4f05e7b6-fd77-4913-a112-b8524b21d0b4
        name: iri_discovery
        output: urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: d398cead-6dfb-4ce3-80a0-93f23d46bd7b
        name: iri_discovery
        output: urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b>
            .

            <urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_8f91fee052a5a1ec12a3658ad8b8fba9
    nl_question: Which bidding zones are associated with 4f05e7b6-fd77-4913-a112-b8524b21d0b4
      and d398cead-6dfb-4ce3-80a0-93f23d46bd7b?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:4f05e7b6-fd77-4913-a112-b8524b21d0b4
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
  - expected_steps:
    - - args:
          query: SE2 - SE3
        name: iri_discovery
        output: urn:uuid:3d91562b-f6fa-429f-b4bf-11593f79c557
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 709001cd-13d9-4d1e-9a4e-553cd24f0724
        name: iri_discovery
        output: urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:3d91562b-f6fa-429f-b4bf-11593f79c557>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724>
            .

            <urn:uuid:3d91562b-f6fa-429f-b4bf-11593f79c557> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_84fe624fb99cc75e073444c62acf611f
    nl_question: What are the bidding zones that have SE2 - SE3 as a border and 709001cd-13d9-4d1e-9a4e-553cd24f0724
      as a scheduling area?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:3d91562b-f6fa-429f-b4bf-11593f79c557
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724
  - expected_steps:
    - - args:
          query: NO1 - NO2
        name: iri_discovery
        output: urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 19454eeb-cf3c-4b22-91c8-42c94a48e04e
        name: iri_discovery
        output: urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e>
            .

            <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_2567f9e400a0b9047c5c15359f9399ea
    nl_question: List the bidding zones connected to NO1 - NO2 and 19454eeb-cf3c-4b22-91c8-42c94a48e04e.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:19454eeb-cf3c-4b22-91c8-42c94a48e04e
  - expected_steps:
    - - args:
          query: 2e7b7ea0
        name: iri_discovery
        output: urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SA-NO6
        name: iri_discovery
        output: urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7>
            .

            <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_dfa2e8b718fab468ac213d8e3260b764
    nl_question: Provide the bidding zones associated with the bidding zone border
      2e7b7ea0 and the scheduling area SA-NO6.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderOne {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    ;

    nc:BiddingZone.SchedulingArea {$ObjectIdentity(1, nc:SchedulingArea)} .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .

    {$ObjectIdentity(1, nc:SchedulingArea)} a nc:SchedulingArea ;

    .'
  template_id: template_list_89988de6d09cbf6bd9091cf6be3a3d2a
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzoneborder (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo),
    schedulingarea (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea) and by filter
    properties none.
  filters: []
  name: List biddingzone by parameters biddingzoneborder, schedulingarea and filters
    none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo
    type: https://cim4.eu/ns/nc#BiddingZoneBorder
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    type: https://cim4.eu/ns/nc#SchedulingArea
  paraphrases:
  - Which bidding zones are associated with the bidding zone border $ObjectIdentity(0,
    nc:BiddingZoneBorder) and scheduling area $ObjectIdentity(1, nc:SchedulingArea)?
  - List the bidding zones that belong to both bidding zone border $ObjectIdentity(0,
    nc:BiddingZoneBorder) and scheduling area $ObjectIdentity(1, nc:SchedulingArea).
  - What are the bidding zones connected to the border $ObjectIdentity(0, nc:BiddingZoneBorder)
    and scheduling area $ObjectIdentity(1, nc:SchedulingArea)?
  - Find the bidding zones that are linked to $ObjectIdentity(0, nc:BiddingZoneBorder)
    and $ObjectIdentity(1, nc:SchedulingArea).
  - Identify the bidding zones associated with the boundary $ObjectIdentity(0, nc:BiddingZoneBorder)
    and the scheduling area $ObjectIdentity(1, nc:SchedulingArea).
  questions:
  - expected_steps:
    - - args:
          query: SE3 - FI
        name: iri_discovery
        output: urn:uuid:0b1fce1c-50ec-409a-a8ba-5a69a50b88ed
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 096cb162-6a74-4dcd-b9e5-9845e1f049b6
        name: iri_discovery
        output: urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:0b1fce1c-50ec-409a-a8ba-5a69a50b88ed>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6>
            .

            <urn:uuid:0b1fce1c-50ec-409a-a8ba-5a69a50b88ed> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_98ac145c47e57c575b4c66bf32a8a609
    nl_question: Which bidding zones are associated with the bidding zone border SE3
      - FI and scheduling area 096cb162-6a74-4dcd-b9e5-9845e1f049b6?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:0b1fce1c-50ec-409a-a8ba-5a69a50b88ed
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:096cb162-6a74-4dcd-b9e5-9845e1f049b6
  - expected_steps:
    - - args:
          query: c9afca0e-9c27-41be-b802-ed774a8d4856
        name: iri_discovery
        output: urn:uuid:c9afca0e-9c27-41be-b802-ed774a8d4856
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: SA-NO2
        name: iri_discovery
        output: urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:c9afca0e-9c27-41be-b802-ed774a8d4856>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b>
            .

            <urn:uuid:c9afca0e-9c27-41be-b802-ed774a8d4856> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_c35aaadbbf7ef8cf245d3933ef4858a1
    nl_question: What are the bidding zones connected to the border c9afca0e-9c27-41be-b802-ed774a8d4856
      and scheduling area SA-NO2?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:c9afca0e-9c27-41be-b802-ed774a8d4856
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
  - expected_steps:
    - - args:
          query: NO5 - NO1
        name: iri_discovery
        output: urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 553776dc
        name: iri_discovery
        output: urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7>
            .

            <urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_6b817b7a37dd4f36f8f2370b8eb873be
    nl_question: Find the bidding zones that are linked to NO5 - NO1 and 553776dc.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:fdc34686-71ab-4fc4-8975-271a1bbe0acb
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:553776dc-295d-aa4b-a36e-f563acc71bb7
  - expected_steps:
    - - args:
          query: NO4 - SE2
        name: iri_discovery
        output: urn:uuid:4308fd4e-591d-4db9-966c-417402c99601
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 709001cd-13d9-4d1e-9a4e-553cd24f0724
        name: iri_discovery
        output: urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:4308fd4e-591d-4db9-966c-417402c99601>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724>
            .

            <urn:uuid:4308fd4e-591d-4db9-966c-417402c99601> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_608d4285d72c50d049e1103a78cd0179
    nl_question: What are the bidding zones connected to the border NO4 - SE2 and
      scheduling area 709001cd-13d9-4d1e-9a4e-553cd24f0724?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:4308fd4e-591d-4db9-966c-417402c99601
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:709001cd-13d9-4d1e-9a4e-553cd24f0724
  - expected_steps:
    - - args:
          query: 2e7b7ea0
        name: iri_discovery
        output: urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: d398cead
        name: iri_discovery
        output: urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd>
            ;

            nc:BiddingZone.SchedulingArea <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b>
            .

            <urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd> a nc:BiddingZoneBorder
            ;

            .

            <urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b> a nc:SchedulingArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_62a64cc9f1fc56c7f28e49066b3206c0
    nl_question: Which bidding zones are associated with the bidding zone border 2e7b7ea0
      and scheduling area d398cead?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZoneBorder): urn:uuid:2e7b7ea0-39a6-46ed-80a1-e887ce4c45cd
      $ObjectIdentity(1, nc:SchedulingArea): urn:uuid:d398cead-6dfb-4ce3-80a0-93f23d46bd7b
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderTwo {$ObjectIdentity(0, nc:BiddingZoneBorder)}
    ;

    nc:BiddingZone.SchedulingArea {$ObjectIdentity(1, nc:SchedulingArea)} .

    {$ObjectIdentity(0, nc:BiddingZoneBorder)} a nc:BiddingZoneBorder ;

    .

    {$ObjectIdentity(1, nc:SchedulingArea)} a nc:SchedulingArea ;

    .'
  template_id: template_list_28a65eff871228ef599183ad3e1e1021
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzone (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne, https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneOne)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzone and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne
    - https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneOne
    type: https://cim4.eu/ns/nc#BiddingZone
  paraphrases:
  - Which bidding zones share a border with $ObjectIdentity(0, nc:BiddingZone)?
  - Identify the bidding zones that are connected through a border with $ObjectIdentity(0,
    nc:BiddingZone).
  - What are the bidding zones that have a border with $ObjectIdentity(0, nc:BiddingZone)?
  - List all the bidding zones bordering $ObjectIdentity(0, nc:BiddingZone).
  - Which other bidding zones are connected by a border to $ObjectIdentity(0, nc:BiddingZone)?
  questions:
  - expected_steps:
    - - args:
          query: b64efd13-92fe-4786-87ef-731d1e2cce0e
        name: iri_discovery
        output: urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e> .

            <urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_28dbc15fed2bac31e0801f5f0eb61892
    nl_question: Identify the bidding zones that are connected through a border with
      b64efd13-92fe-4786-87ef-731d1e2cce0e.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e
  - expected_steps:
    - - args:
          query: 8ec52d73-62d1-4676-a791-0f7302a04b71
        name: iri_discovery
        output: urn:uuid:8ec52d73-62d1-4676-a791-0f7302a04b71
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:8ec52d73-62d1-4676-a791-0f7302a04b71> .

            <urn:uuid:8ec52d73-62d1-4676-a791-0f7302a04b71> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:8ec52d73-62d1-4676-a791-0f7302a04b71"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_d2ced82f4cd7e9fb8822509c246ead22
    nl_question: Identify the bidding zones that are connected through a border with
      8ec52d73-62d1-4676-a791-0f7302a04b71.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:8ec52d73-62d1-4676-a791-0f7302a04b71
  - expected_steps:
    - - args:
          query: 781f385c
        name: iri_discovery
        output: urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b> .

            <urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_bdb07bbfc859788f8e7c912f5636a16c
    nl_question: Which other bidding zones are connected by a border to 781f385c?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b
  - expected_steps:
    - - args:
          query: cebd0c20-568c-4bb4-8542-1a6e90e741af
        name: iri_discovery
        output: urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af> .

            <urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_bf2564440ad711ba4548555690b0d4c6
    nl_question: List all the bidding zones bordering cebd0c20-568c-4bb4-8542-1a6e90e741af.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af
  - expected_steps:
    - - args:
          query: NO5
        name: iri_discovery
        output: urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece> .

            <urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_a399c1a2214171334230208c3b173c9e
    nl_question: What are the bidding zones that have a border with NO5?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneOne {$ObjectIdentity(0,
    nc:BiddingZone)} .

    {$ObjectIdentity(0, nc:BiddingZone)} a nc:BiddingZone ;

    .'
  template_id: template_list_b2002125eddf7d8e6541008fb6be7df5
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzone (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne, https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneTwo)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzone and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderOne
    - https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneTwo
    type: https://cim4.eu/ns/nc#BiddingZone
  paraphrases:
  - What are the bidding zones connected to $ObjectIdentity(0, nc:BiddingZone) through
    bidding zone borders?
  - Identify the bidding zones that share a border with $ObjectIdentity(0, nc:BiddingZone).
  - Which bidding zones are connected via borders to $ObjectIdentity(0, nc:BiddingZone)?
  - List all bidding zones that have a border with $ObjectIdentity(0, nc:BiddingZone).
  - What other bidding zones share a border with $ObjectIdentity(0, nc:BiddingZone)?
  questions:
  - expected_steps:
    - - args:
          query: 2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad
        name: iri_discovery
        output: urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad> .

            <urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:cebd0c20-568c-4bb4-8542-1a6e90e741af"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_a2844b940db0a32373864196d4744a00
    nl_question: Which bidding zones are connected via borders to 2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad
  - expected_steps:
    - - args:
          query: 10Y1001A1001A44P
        name: iri_discovery
        output: urn:uuid:b478a210-4550-4986-9e47-47912ff06d61
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:b478a210-4550-4986-9e47-47912ff06d61> .

            <urn:uuid:b478a210-4550-4986-9e47-47912ff06d61> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_eaa9912f1355665e05652565fcfd441a
    nl_question: List all bidding zones that have a border with 10Y1001A1001A44P.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:b478a210-4550-4986-9e47-47912ff06d61
  - expected_steps:
    - - args:
          query: 8ad62773-067d-4de6-a818-c399459347cf
        name: iri_discovery
        output: urn:uuid:8ad62773-067d-4de6-a818-c399459347cf
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:8ad62773-067d-4de6-a818-c399459347cf> .

            <urn:uuid:8ad62773-067d-4de6-a818-c399459347cf> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_676092f54fb261bc110244ddec6b71b7
    nl_question: What other bidding zones share a border with 8ad62773-067d-4de6-a818-c399459347cf?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:8ad62773-067d-4de6-a818-c399459347cf
  - expected_steps:
    - - args:
          query: NL
        name: iri_discovery
        output: urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03> .

            <urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:e7e780b2-3a74-4453-8e4d-f10a397abf5d"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_2c059f98f247a3ec7eed68ca39d0d408
    nl_question: What are the bidding zones connected to NL through bidding zone borders?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03
  - expected_steps:
    - - args:
          query: b64efd13-92fe-4786-87ef-731d1e2cce0e
        name: iri_discovery
        output: urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e> .

            <urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_0b34be6a45741e7a1342040b578f6efa
    nl_question: What are the bidding zones connected to b64efd13-92fe-4786-87ef-731d1e2cce0e
      through bidding zone borders?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderOne/nc:BiddingZoneBorder.BiddingZoneTwo {$ObjectIdentity(0,
    nc:BiddingZone)} .

    {$ObjectIdentity(0, nc:BiddingZone)} a nc:BiddingZone ;

    .'
  template_id: template_list_c37c923e3a1acc46414b0b8369daec8d
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzone (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo, https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneOne)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzone and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo
    - https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneOne
    type: https://cim4.eu/ns/nc#BiddingZone
  paraphrases:
  - Which bidding zones share a border with $ObjectIdentity(0, nc:BiddingZone)?
  - Identify the bidding zones connected to $ObjectIdentity(0, nc:BiddingZone) through
    a shared border.
  - What other bidding zones are adjacent to $ObjectIdentity(0, nc:BiddingZone)?
  - List all bidding zones that have a border with $ObjectIdentity(0, nc:BiddingZone).
  - What are the neighboring bidding zones of $ObjectIdentity(0, nc:BiddingZone)?
  questions:
  - expected_steps:
    - - args:
          query: NO1
        name: iri_discovery
        output: urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a> .

            <urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_098416bbd1d80d1d3fe6402216393fff
    nl_question: What are the neighboring bidding zones of NO1?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a
  - expected_steps:
    - - args:
          query: e7e780b2-3a74-4453-8e4d-f10a397abf5d
        name: iri_discovery
        output: urn:uuid:e7e780b2-3a74-4453-8e4d-f10a397abf5d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:e7e780b2-3a74-4453-8e4d-f10a397abf5d> .

            <urn:uuid:e7e780b2-3a74-4453-8e4d-f10a397abf5d> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:f0a0d421-7010-423b-805a-73a99393f1d6"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_fede531f1077e0d0fa182cbf6e40a267
    nl_question: What other bidding zones are adjacent to e7e780b2-3a74-4453-8e4d-f10a397abf5d?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:e7e780b2-3a74-4453-8e4d-f10a397abf5d
  - expected_steps:
    - - args:
          query: 85fea1a6-7edb-4f73-88b8-3a95ea728d03
        name: iri_discovery
        output: urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03> .

            <urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:0c1bc7f4-7404-4a4d-9d6b-d9edc0944a54"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_0cbd0d257adc6d5ea2c98dc052ada65c
    nl_question: Which bidding zones share a border with 85fea1a6-7edb-4f73-88b8-3a95ea728d03?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03
  - expected_steps:
    - - args:
          query: 63b13e2e
        name: iri_discovery
        output: urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4> .

            <urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:8ad62773-067d-4de6-a818-c399459347cf"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_f81e84460c430f9599df3773ecb2f075
    nl_question: What are the neighboring bidding zones of 63b13e2e?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4
  - expected_steps:
    - - args:
          query: 5df846f4-0a3a-43fc-af92-1d2fa0c6d860
        name: iri_discovery
        output: urn:uuid:5df846f4-0a3a-43fc-af92-1d2fa0c6d860
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneOne
            <urn:uuid:5df846f4-0a3a-43fc-af92-1d2fa0c6d860> .

            <urn:uuid:5df846f4-0a3a-43fc-af92-1d2fa0c6d860> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_ee8d8642f2880ae6a1887e121ce33d59
    nl_question: Which bidding zones share a border with 5df846f4-0a3a-43fc-af92-1d2fa0c6d860?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:5df846f4-0a3a-43fc-af92-1d2fa0c6d860
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneOne {$ObjectIdentity(0,
    nc:BiddingZone)} .

    {$ObjectIdentity(0, nc:BiddingZone)} a nc:BiddingZone ;

    .'
  template_id: template_list_694e2bd85cc70533165911f6e5ab2ceb
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzone (https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo, https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneTwo)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzone and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.BiddingZoneBorderTwo
    - https://cim4.eu/ns/nc#BiddingZoneBorder.BiddingZoneTwo
    type: https://cim4.eu/ns/nc#BiddingZone
  paraphrases:
  - Which bidding zones share a border with $ObjectIdentity(0, nc:BiddingZone)?
  - Identify the other bidding zones that border $ObjectIdentity(0, nc:BiddingZone).
  - What are the neighboring bidding zones of $ObjectIdentity(0, nc:BiddingZone)?
  - List all bidding zones connected to $ObjectIdentity(0, nc:BiddingZone) through
    a border.
  - What bidding zones have a shared border with $ObjectIdentity(0, nc:BiddingZone)?
  questions:
  - expected_steps:
    - - args:
          query: 10Y1001A1001A46L
        name: iri_discovery
        output: urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e> .

            <urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_7fe93a6c762c71bb4398ac718a7b4623
    nl_question: Identify the other bidding zones that border 10Y1001A1001A46L.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e
  - expected_steps:
    - - args:
          query: 7e0de26d-9d0e-4181-a94a-d3a50fdaf719
        name: iri_discovery
        output: urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719> .

            <urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_163b81b64bc9c0d10f73faf6c4acbfb2
    nl_question: What bidding zones have a shared border with 7e0de26d-9d0e-4181-a94a-d3a50fdaf719?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:7e0de26d-9d0e-4181-a94a-d3a50fdaf719
  - expected_steps:
    - - args:
          query: 20ab92be
        name: iri_discovery
        output: urn:uuid:20ab92be-8650-44cc-8a7e-fdae8baf027f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:20ab92be-8650-44cc-8a7e-fdae8baf027f> .

            <urn:uuid:20ab92be-8650-44cc-8a7e-fdae8baf027f> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:20ab92be-8650-44cc-8a7e-fdae8baf027f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_09f6f2b5285051430854efb17b65e258
    nl_question: List all bidding zones connected to 20ab92be through a border.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:20ab92be-8650-44cc-8a7e-fdae8baf027f
  - expected_steps:
    - - args:
          query: 090d342b-a577-4be1-880b-f97bc958ff03
        name: iri_discovery
        output: urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03> .

            <urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_770d39c4123a5d28b8a25771dcae7d37
    nl_question: List all bidding zones connected to 090d342b-a577-4be1-880b-f97bc958ff03
      through a border.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:090d342b-a577-4be1-880b-f97bc958ff03
  - expected_steps:
    - - args:
          query: 85fea1a6-7edb-4f73-88b8-3a95ea728d03
        name: iri_discovery
        output: urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneTwo
            <urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03> .

            <urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_b7d7e04cbfd376d8f85c17072a00dff5
    nl_question: List all bidding zones connected to 85fea1a6-7edb-4f73-88b8-3a95ea728d03
      through a border.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:85fea1a6-7edb-4f73-88b8-3a95ea728d03
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.BiddingZoneBorderTwo/nc:BiddingZoneBorder.BiddingZoneTwo {$ObjectIdentity(0,
    nc:BiddingZone)} .

    {$ObjectIdentity(0, nc:BiddingZone)} a nc:BiddingZone ;

    .'
  template_id: template_list_cf12f354feeece1f94b6ad26bde0b1e1
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for biddingzone (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea, https://cim4.eu/ns/nc#SchedulingArea.BiddingZone)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters biddingzone and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    - https://cim4.eu/ns/nc#SchedulingArea.BiddingZone
    type: https://cim4.eu/ns/nc#BiddingZone
  paraphrases:
  - Which bidding zones are in the same scheduling area as $ObjectIdentity(0, nc:BiddingZone)?
  - Identify the bidding zones associated with the scheduling area of $ObjectIdentity(0,
    nc:BiddingZone).
  - What other bidding zones belong to the scheduling area of $ObjectIdentity(0, nc:BiddingZone)?
  - List all bidding zones in the same scheduling area as $ObjectIdentity(0, nc:BiddingZone).
  - The scheduling area of $ObjectIdentity(0, nc:BiddingZone) contains which other
    bidding zones?
  questions:
  - expected_steps:
    - - args:
          query: b64efd13
        name: iri_discovery
        output: urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.BiddingZone <urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e>
            .

            <urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_5f6253d30731d6483f8f1c77acb5f259
    nl_question: Identify the bidding zones associated with the scheduling area of
      b64efd13.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e
  - expected_steps:
    - - args:
          query: SE1
        name: iri_discovery
        output: urn:uuid:b478a210-4550-4986-9e47-47912ff06d61
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.BiddingZone <urn:uuid:b478a210-4550-4986-9e47-47912ff06d61>
            .

            <urn:uuid:b478a210-4550-4986-9e47-47912ff06d61> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:b478a210-4550-4986-9e47-47912ff06d61"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_715ebce584d0f3628f74eed8bf636fa0
    nl_question: What other bidding zones belong to the scheduling area of SE1?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:b478a210-4550-4986-9e47-47912ff06d61
  - expected_steps:
    - - args:
          query: SE2
        name: iri_discovery
        output: urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.BiddingZone <urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b>
            .

            <urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_8f3d43949a8a99318b42b7fa07f15621
    nl_question: The scheduling area of SE2 contains which other bidding zones?
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b
  - expected_steps:
    - - args:
          query: 10YFI-1--------U
        name: iri_discovery
        output: urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.BiddingZone <urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc>
            .

            <urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_fefed27b14288929509d5491053a6c16
    nl_question: List all bidding zones in the same scheduling area as 10YFI-1--------U.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc
  - expected_steps:
    - - args:
          query: NO5
        name: iri_discovery
        output: urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.BiddingZone <urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece>
            .

            <urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece> a nc:BiddingZone ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_b2b3bb2ee2c8230a4738e3a66c848fe5
    nl_question: Identify the bidding zones associated with the scheduling area of
      NO5.
    parameter_bindings:
      $ObjectIdentity(0, nc:BiddingZone): urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.SchedulingArea/nc:SchedulingArea.BiddingZone {$ObjectIdentity(0,
    nc:BiddingZone)} .

    {$ObjectIdentity(0, nc:BiddingZone)} a nc:BiddingZone ;

    .'
  template_id: template_list_33ffeb9f07c8f1315c0943abe2c8f557
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for controlarea (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea, https://cim4.eu/ns/nc#SchedulingArea.ControlArea)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters controlarea and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    - https://cim4.eu/ns/nc#SchedulingArea.ControlArea
    type: https://cim.ucaiug.io/ns#ControlArea
  paraphrases:
  - Which bidding zones are linked to the scheduling area of $ObjectIdentity(0, cim:ControlArea)?
  - Identify the bidding zones associated with the scheduling area of $ObjectIdentity(0,
    cim:ControlArea).
  - What bidding zones correspond to the scheduling area connected to $ObjectIdentity(0,
    cim:ControlArea)?
  - List all bidding zones related to the scheduling area within the control area
    $ObjectIdentity(0, cim:ControlArea).
  - The scheduling area of $ObjectIdentity(0, cim:ControlArea) is linked to which
    bidding zones?
  questions:
  - expected_steps:
    - - args:
          query: NO CA
        name: iri_discovery
        output: urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.ControlArea <urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_6adaa4742bd535b41764f821c95eab29
    nl_question: Which bidding zones are linked to the scheduling area of NO CA?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlArea): urn:uuid:f1769606-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17695ca-9aeb-11e5-91da-b8763fd99c5f
        name: iri_discovery
        output: urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.ControlArea <urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b478a210-4550-4986-9e47-47912ff06d61"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_79dde7c340d2f3f0a066434f4f2af731
    nl_question: What bidding zones correspond to the scheduling area connected to
      f17695ca-9aeb-11e5-91da-b8763fd99c5f?
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlArea): urn:uuid:f17695ca-9aeb-11e5-91da-b8763fd99c5f
  - expected_steps:
    - - args:
          query: f17696b0
        name: iri_discovery
        output: urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.ControlArea <urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f>
            .

            <urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f> a cim:ControlArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_7e036752a442ba6728e0f57f35667d09
    nl_question: Identify the bidding zones associated with the scheduling area of
      f17696b0.
    parameter_bindings:
      $ObjectIdentity(0, cim:ControlArea): urn:uuid:f17696b0-9aeb-11e5-91da-b8763fd99c5f
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.SchedulingArea/nc:SchedulingArea.ControlArea {$ObjectIdentity(0,
    cim:ControlArea)} .

    {$ObjectIdentity(0, cim:ControlArea)} a cim:ControlArea ;

    .'
  template_id: template_list_09174ba07783863fe708a2f27ecfc91e
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for synchronousarea (https://cim4.eu/ns/nc#BiddingZone.SchedulingArea, https://cim4.eu/ns/nc#SchedulingArea.SynchronousArea)
    and by filter properties none.
  filters: []
  name: List biddingzone by parameters synchronousarea and filters none
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#BiddingZone.SchedulingArea
    - https://cim4.eu/ns/nc#SchedulingArea.SynchronousArea
    type: https://cim4.eu/ns/nc#SynchronousArea
  paraphrases:
  - Which bidding zones are within the scheduling area of $ObjectIdentity(0, nc:SynchronousArea)?
  - Identify the bidding zones associated with the synchronous area $ObjectIdentity(0,
    nc:SynchronousArea).
  - List all bidding zones connected to the scheduling area of $ObjectIdentity(0,
    nc:SynchronousArea).
  - What bidding zones belong to the scheduling area within $ObjectIdentity(0, nc:SynchronousArea)?
  - Can you provide the bidding zones linked to the synchronous area $ObjectIdentity(0,
    nc:SynchronousArea)?
  questions:
  - expected_steps:
    - - args:
          query: 10Y1001C--00146U
        name: iri_discovery
        output: urn:uuid:5829041b-1f25-4a3d-8b4c-532d9f0b6e54
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?biddingzone WHERE {

            ?biddingzone a nc:BiddingZone ;

            nc:BiddingZone.SchedulingArea/nc:SchedulingArea.SynchronousArea <urn:uuid:5829041b-1f25-4a3d-8b4c-532d9f0b6e54>
            .

            <urn:uuid:5829041b-1f25-4a3d-8b4c-532d9f0b6e54> a nc:SynchronousArea ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["biddingzone"]}, "results": {"bindings": [{"biddingzone":
          {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:83aa03e5-5fd0-431c-b8dd-acc08c21ed6a"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:63b13e2e-8d0a-47d0-8de8-fb686decbae4"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:0f094148-164b-427a-a8e8-0c5f334688ae"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:dc281688-8b45-4ce7-b2e8-6c524a5afece"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b64efd13-92fe-4786-87ef-731d1e2cce0e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:2119a5e9-fa38-4fe8-a8e9-2a2cc6f73bad"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:30e6709e-510c-49b9-92ec-e2aebdc1050e"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:6eaaae78-21f1-41c7-81a4-2b0fe15cdbfc"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:b478a210-4550-4986-9e47-47912ff06d61"}},
          {"biddingzone": {"type": "uri", "value": "urn:uuid:781f385c-f3a1-4691-843d-eab2ed919a1b"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - biddingzone
    id: question_579c2590b722b1976c48e07cc987945c
    nl_question: What bidding zones belong to the scheduling area within 10Y1001C--00146U?
    parameter_bindings:
      $ObjectIdentity(0, nc:SynchronousArea): urn:uuid:5829041b-1f25-4a3d-8b4c-532d9f0b6e54
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:BiddingZone.SchedulingArea/nc:SchedulingArea.SynchronousArea {$ObjectIdentity(0,
    nc:SynchronousArea)} .

    {$ObjectIdentity(0, nc:SynchronousArea)} a nc:SynchronousArea ;

    .'
  template_id: template_list_5e2c6c84173893338d507b8f5ff29e78
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for none and by filter properties schedulingarea.normalparticipationfactor.
  filters:
  - property: https://cim4.eu/ns/nc#SchedulingArea.normalParticipationFactor
    subject: nc:BiddingZone
    type: xsd:float
  name: List biddingzone by parameters none and filters schedulingarea.normalparticipationfactor
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters: []
  paraphrases:
  - Which bidding zones have a normal participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.normalParticipationFactor, xsd:float)?
  - List all bidding zones with a normal participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.normalParticipationFactor, xsd:float).
  - What bidding zones are associated with a normal participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.normalParticipationFactor, xsd:float)?
  - Identify the bidding zones with a normal participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.normalParticipationFactor, xsd:float).
  - Show me the bidding zones with a normal participation factor equal to $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.normalParticipationFactor, xsd:float).
  questions: []
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:SchedulingArea.normalParticipationFactor {$ValueFilter(nc:BiddingZone, nc:SchedulingArea.normalParticipationFactor,
    xsd:float)} .'
  template_id: template_list_4034e08619d8bdd9c29c7d3a92a78dae
- description: A graph pattern which lists all values for biddingzone limited by parameters
    for none and by filter properties schedulingarea.participationfactor.
  filters:
  - property: https://cim4.eu/ns/nc#SchedulingArea.participationFactor
    subject: nc:BiddingZone
    type: xsd:float
  name: List biddingzone by parameters none and filters schedulingarea.participationfactor
  outputs:
  - name: biddingzone
    type: nc:BiddingZone
  parameters: []
  paraphrases:
  - Which bidding zones have a participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.participationFactor, xsd:float)?
  - Identify the bidding zones with a participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.participationFactor, xsd:float).
  - List the bidding zones where the participation factor equals $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.participationFactor, xsd:float).
  - What are the bidding zones with a participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.participationFactor, xsd:float)?
  - Provide details of bidding zones with a participation factor of $ValueFilter(nc:BiddingZone,
    nc:SchedulingArea.participationFactor, xsd:float).
  questions: []
  sparql_template: '?biddingzone a nc:BiddingZone ;

    nc:SchedulingArea.participationFactor {$ValueFilter(nc:BiddingZone, nc:SchedulingArea.participationFactor,
    xsd:float)} .'
  template_id: template_list_72717adb6b3596e5b8a5bc3b458ae052
- description: A graph pattern which lists all values for circuit limited by parameters
    for none and by filter properties none.
  filters: []
  name: List circuit by parameters none and filters none
  outputs:
  - name: circuit
    type: nc:Circuit
  parameters: []
  paraphrases:
  - What are the circuits in the dataset?
  - List all the circuits present in the system.
  - Identify all the circuits available in the database.
  - Which circuits are defined in the dataset?
  - Provide a list of circuits that exist in the system.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?circuit WHERE {

            ?circuit a nc:Circuit .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["circuit"]}, "results": {"bindings": [{"circuit":
          {"type": "uri", "value": "urn:uuid:efe2dce7-e144-48ae-8b0e-9e48cddea658"}},
          {"circuit": {"type": "uri", "value": "urn:uuid:0b8fd844-ca69-4cc9-82b5-3225991235b6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - circuit
    id: question_f8d03c8e893284ba9276c983e2e8a235
    nl_question: Provide a list of circuits that exist in the system.
    parameter_bindings: {}
  sparql_template: ?circuit a nc:Circuit .
  template_id: template_list_3659ba500230d0bbb5aff05cfccf6af5
- description: A graph pattern which lists all values for circuit limited by parameters
    for circuitshare (https://cim4.eu/ns/nc#Circuit.CircuitShare) and by filter properties
    none.
  filters: []
  name: List circuit by parameters circuitshare and filters none
  outputs:
  - name: circuit
    type: nc:Circuit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Circuit.CircuitShare
    type: https://cim4.eu/ns/nc#CircuitShare
  paraphrases:
  - Which circuits share the circuit share $ObjectIdentity(0, nc:CircuitShare)?
  - Identify the circuits associated with the circuit share $ObjectIdentity(0, nc:CircuitShare).
  - What circuits are linked to $ObjectIdentity(0, nc:CircuitShare)?
  - List all circuits that utilize the circuit share $ObjectIdentity(0, nc:CircuitShare).
  - For circuit share $ObjectIdentity(0, nc:CircuitShare), which circuits are involved?
  questions:
  - expected_steps:
    - - args:
          query: CS 420RINGHALS-HALDEN  1
        name: iri_discovery
        output: urn:uuid:9a6018fb-ede3-4517-94e4-b54c583543ad
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?circuit WHERE {

            ?circuit a nc:Circuit ;

            nc:Circuit.CircuitShare <urn:uuid:9a6018fb-ede3-4517-94e4-b54c583543ad>
            .

            <urn:uuid:9a6018fb-ede3-4517-94e4-b54c583543ad> a nc:CircuitShare ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["circuit"]}, "results": {"bindings": [{"circuit":
          {"type": "uri", "value": "urn:uuid:efe2dce7-e144-48ae-8b0e-9e48cddea658"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - circuit
    id: question_5289cc4b072a4992aa305f63fa41bebf
    nl_question: Which circuits share the circuit share CS 420RINGHALS-HALDEN  1?
    parameter_bindings:
      $ObjectIdentity(0, nc:CircuitShare): urn:uuid:9a6018fb-ede3-4517-94e4-b54c583543ad
  - expected_steps:
    - - args:
          query: CS 420RINGHALS-HALDEN  2
        name: iri_discovery
        output: urn:uuid:e6fedcdb-8a62-4559-bd19-227de853c76a
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?circuit WHERE {

            ?circuit a nc:Circuit ;

            nc:Circuit.CircuitShare <urn:uuid:e6fedcdb-8a62-4559-bd19-227de853c76a>
            .

            <urn:uuid:e6fedcdb-8a62-4559-bd19-227de853c76a> a nc:CircuitShare ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["circuit"]}, "results": {"bindings": [{"circuit":
          {"type": "uri", "value": "urn:uuid:0b8fd844-ca69-4cc9-82b5-3225991235b6"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - circuit
    id: question_d2fd76e656c16275a196a24e1e3e42f5
    nl_question: For circuit share CS 420RINGHALS-HALDEN  2, which circuits are involved?
    parameter_bindings:
      $ObjectIdentity(0, nc:CircuitShare): urn:uuid:e6fedcdb-8a62-4559-bd19-227de853c76a
  sparql_template: '?circuit a nc:Circuit ;

    nc:Circuit.CircuitShare {$ObjectIdentity(0, nc:CircuitShare)} .

    {$ObjectIdentity(0, nc:CircuitShare)} a nc:CircuitShare ;

    .'
  template_id: template_list_f545a5bee52562c70038c1fd3a224663
- description: A graph pattern which lists all values for circuit limited by parameters
    for none and by filter properties circuit.positiveflowin.
  filters:
  - property: https://cim4.eu/ns/nc#Circuit.positiveFlowIn
    subject: nc:Circuit
    type: xsd:boolean
  name: List circuit by parameters none and filters circuit.positiveflowin
  outputs:
  - name: circuit
    type: nc:Circuit
  parameters: []
  paraphrases:
  - Which circuits have a positive flow in $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean)?
  - List the circuits where the positive flow is $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean).
  - Identify the circuits with a positive flow value of $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean).
  - What circuits exhibit positive flow as $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean)?
  - Provide the circuits with positive flow indicating $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean).
  questions: []
  sparql_template: '?circuit a nc:Circuit ;

    nc:Circuit.positiveFlowIn {$ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean)} .'
  template_id: template_list_f473afaf84bc16323caa4888b09e835b
- description: A graph pattern which lists all values for circuit limited by parameters
    for circuitshare (https://cim4.eu/ns/nc#Circuit.CircuitShare) and by filter properties
    circuit.positiveflowin.
  filters:
  - property: https://cim4.eu/ns/nc#Circuit.positiveFlowIn
    subject: nc:Circuit
    type: xsd:boolean
  name: List circuit by parameters circuitshare and filters circuit.positiveflowin
  outputs:
  - name: circuit
    type: nc:Circuit
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Circuit.CircuitShare
    type: https://cim4.eu/ns/nc#CircuitShare
  paraphrases:
  - Which circuits belong to the circuit share $ObjectIdentity(0, nc:CircuitShare)
    with a positive flow condition of $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean)?
  - Identify the circuits associated with $ObjectIdentity(0, nc:CircuitShare) that
    have a positive flow in $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn, xsd:boolean).
  - What circuits in $ObjectIdentity(0, nc:CircuitShare) have a positive flow status
    of $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn, xsd:boolean)?
  - 'List the circuits in $ObjectIdentity(0, nc:CircuitShare) that exhibit a positive
    flow condition: $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn, xsd:boolean).'
  - Which circuits associated with $ObjectIdentity(0, nc:CircuitShare) have a positive
    flow as $ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn, xsd:boolean)?
  questions: []
  sparql_template: '?circuit a nc:Circuit ;

    nc:Circuit.CircuitShare {$ObjectIdentity(0, nc:CircuitShare)} ;

    nc:Circuit.positiveFlowIn {$ValueFilter(nc:Circuit, nc:Circuit.positiveFlowIn,
    xsd:boolean)} .

    {$ObjectIdentity(0, nc:CircuitShare)} a nc:CircuitShare ;

    .'
  template_id: template_list_2a72ce668a56e9491c8573e1a1a337a1
- description: A graph pattern which lists all values for energykind limited by parameters
    for none and by filter properties none.
  filters: []
  name: List energykind by parameters none and filters none
  outputs:
  - name: energykind
    type: nc:EnergyKind
  parameters: []
  paraphrases:
  - What are the energy kinds available?
  - List all types of energy kinds.
  - Can you provide me with all the energy kinds?
  - Identify the different energy kinds.
  - What energy kinds exist?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?energykind WHERE {

            ?energykind a nc:EnergyKind .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["energykind"]}, "results": {"bindings": [{"energykind":
          {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.battery"}}, {"energykind":
          {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.biomass"}}, {"energykind":
          {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.bufferConsumption"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.fossil"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.geothermal"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.hydroPump"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.hydroRunOfRiver"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.hydroWaterReservoir"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.marine"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.nuclear"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.other"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.solar"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.timeShiftConsumption"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.unconstrainedConsumption"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.uncontrollableConsumption"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.waste"}},
          {"energykind": {"type": "uri", "value": "https://cim4.eu/ns/nc#EnergyKind.wind"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - energykind
    id: question_cb06bd73566972294b4541bfc834b3dd
    nl_question: What are the energy kinds available?
    parameter_bindings: {}
  sparql_template: ?energykind a nc:EnergyKind .
  template_id: template_list_1e4b9770142eaa78b63620dd28340f34
- description: A graph pattern which lists all values for faultkind limited by parameters
    for none and by filter properties none.
  filters: []
  name: List faultkind by parameters none and filters none
  outputs:
  - name: faultkind
    type: nc:FaultKind
  parameters: []
  paraphrases:
  - What are the types of fault kinds available?
  - List all fault kinds.
  - What fault kinds are defined in the data?
  - Can you provide the different fault kinds?
  - Which fault kinds are available in the system?
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?faultkind WHERE {

            ?faultkind a nc:FaultKind .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["faultkind"]}, "results": {"bindings": [{"faultkind":
          {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.functional"}},
          {"faultkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.lineOpen"}},
          {"faultkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.lineToGround"}},
          {"faultkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.lineToLine"}},
          {"faultkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.lineToLineToGround"}},
          {"faultkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.other"}},
          {"faultkind": {"type": "uri", "value": "https://cim4.eu/ns/nc#FaultKind.undesiredFunction"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - faultkind
    id: question_99665e75204bc5fd013c0b4ea8e7e054
    nl_question: What are the types of fault kinds available?
    parameter_bindings: {}
  sparql_template: ?faultkind a nc:FaultKind .
  template_id: template_list_eff610681d2edf0717567f5dad65cdc8
- description: A graph pattern which lists all values for gate limited by parameters
    for none and by filter properties none.
  filters: []
  name: List gate by parameters none and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters: []
  paraphrases:
  - What gates are available?
  - List all the gates.
  - Which entities are classified as gates?
  - Provide the names of all gates.
  - Identify all gates in the dataset.
  questions:
  - expected_steps:
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}, {"gate":
          {"type": "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}},
          {"gate": {"type": "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}},
          {"gate": {"type": "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}},
          {"gate": {"type": "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_38c10b2413523d7a1ab7ff44898d59bc
    nl_question: Which entities are classified as gates?
    parameter_bindings: {}
  sparql_template: ?gate a nc:Gate .
  template_id: template_list_ddb5265d862b94860409990e71c918d8
- description: A graph pattern which lists all values for gate limited by parameters
    for gateinputpin (https://cim4.eu/ns/nc#Gate.GateInputPin) and by filter properties
    none.
  filters: []
  name: List gate by parameters gateinputpin and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.GateInputPin
    type: https://cim4.eu/ns/nc#GateInputPin
  paraphrases:
  - Which gate has an input pin $ObjectIdentity(0, nc:GateInputPin)?
  - Identify the gate associated with the input pin $ObjectIdentity(0, nc:GateInputPin).
  - What is the gate connected to the input pin $ObjectIdentity(0, nc:GateInputPin)?
  - List the gate with input pin $ObjectIdentity(0, nc:GateInputPin).
  - Which gate is linked to input pin $ObjectIdentity(0, nc:GateInputPin)?
  questions:
  - expected_steps:
    - - args:
          query: e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e
        name: iri_discovery
        output: urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e> .

            <urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e> a nc:GateInputPin ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_7c8254fc5c4ad2fc919b754f6d027d6c
    nl_question: List the gate with input pin e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e
  - expected_steps:
    - - args:
          query: GP 300KRISTIAN-KVILLDAL DIR
        name: iri_discovery
        output: urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31> .

            <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31> a nc:GateInputPin ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_da659b099a0f19c5a287f2bcef4634aa
    nl_question: Which gate has an input pin GP 300KRISTIAN-KVILLDAL DIR?
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
  - expected_steps:
    - - args:
          query: 9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        name: iri_discovery
        output: urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> .

            <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> a nc:GateInputPin ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_f5928d7e44dccc32d058e696dd28ef0d
    nl_question: List the gate with input pin 9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
  - expected_steps:
    - - args:
          query: 9aaec7e7-e34e-439b-abe1-8cc14411e96c
        name: iri_discovery
        output: urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> .

            <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> a nc:GateInputPin ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_409304154aa2724a9b923584baf287f7
    nl_question: List the gate with input pin 9aaec7e7-e34e-439b-abe1-8cc14411e96c.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
  - expected_steps:
    - - args:
          query: b799d394
        name: iri_discovery
        output: urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d> .

            <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d> a nc:GateInputPin ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_22a305a43bc7cd6a32685737f65483d0
    nl_question: List the gate with input pin b799d394.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.GateInputPin {$ObjectIdentity(0, nc:GateInputPin)} .

    {$ObjectIdentity(0, nc:GateInputPin)} a nc:GateInputPin ;

    .'
  template_id: template_list_e29f4c5288c170e5c434a062db3de60f
- description: A graph pattern which lists all values for gate limited by parameters
    for pingate (https://cim4.eu/ns/nc#Gate.PinGate) and by filter properties none.
  filters: []
  name: List gate by parameters pingate and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.PinGate
    type: https://cim4.eu/ns/nc#PinGate
  paraphrases:
  - Which gates are connected to the pin gate $ObjectIdentity(0, nc:PinGate)?
  - Identify the gates associated with the pin gate $ObjectIdentity(0, nc:PinGate).
  - What gates are linked to the pin gate $ObjectIdentity(0, nc:PinGate)?
  - List all gates connected to the pin gate $ObjectIdentity(0, nc:PinGate).
  - Which gates have a relationship with the pin gate $ObjectIdentity(0, nc:PinGate)?
  questions:
  - expected_steps:
    - - args:
          query: 9aaec7e7-e34e-439b-abe1-8cc14411e96c
        name: iri_discovery
        output: urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.PinGate <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> .

            <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> a nc:PinGate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_4e37627e7c684c94908199d09d25af68
    nl_question: List all gates connected to the pin gate 9aaec7e7-e34e-439b-abe1-8cc14411e96c.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinGate): urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
  - expected_steps:
    - - args:
          query: GP 300KRISTIAN-ARENDAL FLOW DIR
        name: iri_discovery
        output: urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.PinGate <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> .

            <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> a nc:PinGate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_99487f3a910d5e60132e0782e3be5348
    nl_question: Identify the gates associated with the pin gate GP 300KRISTIAN-ARENDAL
      FLOW DIR.
    parameter_bindings:
      $ObjectIdentity(0, nc:PinGate): urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.PinGate {$ObjectIdentity(0, nc:PinGate)} .

    {$ObjectIdentity(0, nc:PinGate)} a nc:PinGate ;

    .'
  template_id: template_list_dc2c5839c65be119b1b21e2ade23464a
- description: A graph pattern which lists all values for gate limited by parameters
    for stagetrigger (https://cim4.eu/ns/nc#Gate.StageTrigger) and by filter properties
    none.
  filters: []
  name: List gate by parameters stagetrigger and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.StageTrigger
    type: https://cim4.eu/ns/nc#StageTrigger
  paraphrases:
  - Which gates are triggered by $ObjectIdentity(0, nc:StageTrigger)?
  - Identify the gates that have $ObjectIdentity(0, nc:StageTrigger) as their stage
    trigger.
  - What gates are associated with the stage trigger $ObjectIdentity(0, nc:StageTrigger)?
  - List the gates that use $ObjectIdentity(0, nc:StageTrigger) as their trigger.
  - Which gates are activated by the stage trigger $ObjectIdentity(0, nc:StageTrigger)?
  questions:
  - expected_steps:
    - - args:
          query: 69ed3bd9-c374-49ef-b186-d49d869940bb
        name: iri_discovery
        output: urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger <urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb> .

            <urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_f25a7624a7d09a6c60e35b7c8d6aa546
    nl_question: What gates are associated with the stage trigger 69ed3bd9-c374-49ef-b186-d49d869940bb?
    parameter_bindings:
      $ObjectIdentity(0, nc:StageTrigger): urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb
  - expected_steps:
    - - args:
          query: dcca331c-3acd-446a-94ec-1c00b427af05
        name: iri_discovery
        output: urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger <urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05> .

            <urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_f3cce85a56664a76637c9ef396f850e2
    nl_question: What gates are associated with the stage trigger dcca331c-3acd-446a-94ec-1c00b427af05?
    parameter_bindings:
      $ObjectIdentity(0, nc:StageTrigger): urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05
  - expected_steps:
    - - args:
          query: ST1 S1 KRISTIAN300 VL
        name: iri_discovery
        output: urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger <urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d> .

            <urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_1f19b8ba67e7fdc4b3b53c0999e43a64
    nl_question: Which gates are triggered by ST1 S1 KRISTIAN300 VL?
    parameter_bindings:
      $ObjectIdentity(0, nc:StageTrigger): urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.StageTrigger {$ObjectIdentity(0, nc:StageTrigger)} .

    {$ObjectIdentity(0, nc:StageTrigger)} a nc:StageTrigger ;

    .'
  template_id: template_list_57ffbdb24ac07360560445f968fd7d45
- description: A graph pattern which lists all values for gate limited by parameters
    for gatelogickind (https://cim4.eu/ns/nc#Gate.kind) and by filter properties none.
  filters: []
  name: List gate by parameters gatelogickind and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.kind
    type: https://cim4.eu/ns/nc#GateLogicKind
  paraphrases:
  - What gates have the kind $ObjectIdentity(0, nc:GateLogicKind)?
  - List all gates with the type $ObjectIdentity(0, nc:GateLogicKind).
  - Which gates belong to the logic kind $ObjectIdentity(0, nc:GateLogicKind)?
  - Identify the gates categorized under $ObjectIdentity(0, nc:GateLogicKind).
  - Provide all gates associated with the logic kind $ObjectIdentity(0, nc:GateLogicKind).
  questions:
  - expected_steps:
    - - args:
          query: and
        name: iri_discovery
        output: https://cim4.eu/ns/nc#GateLogicKind.and
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.kind <https://cim4.eu/ns/nc#GateLogicKind.and> .

            <https://cim4.eu/ns/nc#GateLogicKind.and> a nc:GateLogicKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}, {"gate":
          {"type": "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}},
          {"gate": {"type": "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_2c6708d764656fab19f1ad7611b01123
    nl_question: What gates have the kind and?
    parameter_bindings:
      $ObjectIdentity(0, nc:GateLogicKind): https://cim4.eu/ns/nc#GateLogicKind.and
  - expected_steps:
    - - args:
          query: or
        name: iri_discovery
        output: https://cim4.eu/ns/nc#GateLogicKind.or
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.kind <https://cim4.eu/ns/nc#GateLogicKind.or> .

            <https://cim4.eu/ns/nc#GateLogicKind.or> a nc:GateLogicKind ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}, {"gate":
          {"type": "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_58e06757a6f2685ac8c0ada9d855aba5
    nl_question: What gates have the kind or?
    parameter_bindings:
      $ObjectIdentity(0, nc:GateLogicKind): https://cim4.eu/ns/nc#GateLogicKind.or
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.kind {$ObjectIdentity(0, nc:GateLogicKind)} .

    {$ObjectIdentity(0, nc:GateLogicKind)} a nc:GateLogicKind ;

    .'
  template_id: template_list_44b430f936ad01932ab05add4f0a1805
- description: A graph pattern which lists all values for gate limited by parameters
    for gateinputpin (https://cim4.eu/ns/nc#Gate.GateInputPin), pingate (https://cim4.eu/ns/nc#Gate.PinGate)
    and by filter properties none.
  filters: []
  name: List gate by parameters gateinputpin, pingate and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.GateInputPin
    type: https://cim4.eu/ns/nc#GateInputPin
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#Gate.PinGate
    type: https://cim4.eu/ns/nc#PinGate
  paraphrases:
  - Which gate has input pin $ObjectIdentity(0, nc:GateInputPin) and is connected
    to pin gate $ObjectIdentity(1, nc:PinGate)?
  - Identify the gate associated with input pin $ObjectIdentity(0, nc:GateInputPin)
    and pin gate $ObjectIdentity(1, nc:PinGate).
  - What gate corresponds to $ObjectIdentity(0, nc:GateInputPin) as its input pin
    and $ObjectIdentity(1, nc:PinGate) as its pin gate?
  - List the gate connected to input pin $ObjectIdentity(0, nc:GateInputPin) and pin
    gate $ObjectIdentity(1, nc:PinGate).
  - Which gate is linked with $ObjectIdentity(0, nc:GateInputPin) as an input pin
    and $ObjectIdentity(1, nc:PinGate) as a pin gate?
  questions:
  - expected_steps:
    - - args:
          query: b0c5b94e
        name: iri_discovery
        output: urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: GP 300KRISTIAN-KVILLDAL FLOW DIR
        name: iri_discovery
        output: urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31> ;

            nc:Gate.PinGate <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> .

            <urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31> a nc:GateInputPin ;

            .

            <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> a nc:PinGate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_807bb1e57a8a11751ee706318c6e758d
    nl_question: Identify the gate associated with input pin b0c5b94e and pin gate
      GP 300KRISTIAN-KVILLDAL FLOW DIR.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:b0c5b94e-7094-470d-8515-7c6b1e7cfd31
      $ObjectIdentity(1, nc:PinGate): urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
  - expected_steps:
    - - args:
          query: 7b573a17
        name: iri_discovery
        output: urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 9aaec7e7
        name: iri_discovery
        output: urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32> ;

            nc:Gate.PinGate <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> .

            <urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32> a nc:GateInputPin ;

            .

            <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> a nc:PinGate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_a96b5c0379a236c94923a55a0136ae50
    nl_question: List the gate connected to input pin 7b573a17 and pin gate 9aaec7e7.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:7b573a17-3466-4000-b93d-0aeaef314c32
      $ObjectIdentity(1, nc:PinGate): urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
  - expected_steps:
    - - args:
          query: GP 300KRISTIAN-ARENDAL FLOW
        name: iri_discovery
        output: urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 793fb1c9
        name: iri_discovery
        output: urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90> ;

            nc:Gate.PinGate <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> .

            <urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90> a nc:GateInputPin ;

            .

            <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> a nc:PinGate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_81a3134bd742200cf7a8e8b0f993bb3b
    nl_question: What gate corresponds to GP 300KRISTIAN-ARENDAL FLOW as its input
      pin and 793fb1c9 as its pin gate?
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:e4c73a28-e1f4-4d22-85ab-483ba818bb90
      $ObjectIdentity(1, nc:PinGate): urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
  - expected_steps:
    - - args:
          query: b799d394
        name: iri_discovery
        output: urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 793fb1c9-75c7-4b5c-aca7-b4c3c7978645
        name: iri_discovery
        output: urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d> ;

            nc:Gate.PinGate <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> .

            <urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d> a nc:GateInputPin ;

            .

            <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> a nc:PinGate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_6e3450ccc4a09ae132e0d53aad69557a
    nl_question: What gate corresponds to b799d394 as its input pin and 793fb1c9-75c7-4b5c-aca7-b4c3c7978645
      as its pin gate?
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:b799d394-34b3-45e4-a103-a5676a13850d
      $ObjectIdentity(1, nc:PinGate): urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.GateInputPin {$ObjectIdentity(0, nc:GateInputPin)} ;

    nc:Gate.PinGate {$ObjectIdentity(1, nc:PinGate)} .

    {$ObjectIdentity(0, nc:GateInputPin)} a nc:GateInputPin ;

    .

    {$ObjectIdentity(1, nc:PinGate)} a nc:PinGate ;

    .'
  template_id: template_list_3c14755b4922589232f1c54692eb6fb5
- description: A graph pattern which lists all values for gate limited by parameters
    for gateinputpin (https://cim4.eu/ns/nc#Gate.GateInputPin), stagetrigger (https://cim4.eu/ns/nc#Gate.StageTrigger)
    and by filter properties none.
  filters: []
  name: List gate by parameters gateinputpin, stagetrigger and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.GateInputPin
    type: https://cim4.eu/ns/nc#GateInputPin
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#Gate.StageTrigger
    type: https://cim4.eu/ns/nc#StageTrigger
  paraphrases:
  - Which gate has input pin $ObjectIdentity(0, nc:GateInputPin) and stage trigger
    $ObjectIdentity(1, nc:StageTrigger)?
  - Identify the gate connected to input pin $ObjectIdentity(0, nc:GateInputPin) and
    triggered by $ObjectIdentity(1, nc:StageTrigger).
  - What is the gate associated with input pin $ObjectIdentity(0, nc:GateInputPin)
    and stage trigger $ObjectIdentity(1, nc:StageTrigger)?
  - Find the gate that uses input pin $ObjectIdentity(0, nc:GateInputPin) and has
    a stage trigger of $ObjectIdentity(1, nc:StageTrigger).
  - List the gate with the input pin $ObjectIdentity(0, nc:GateInputPin) and the stage
    trigger $ObjectIdentity(1, nc:StageTrigger).
  questions:
  - expected_steps:
    - - args:
          query: 9c6e15f8
        name: iri_discovery
        output: urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: bb31f847-7509-4582-9721-6e50b525f55d
        name: iri_discovery
        output: urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> ;

            nc:Gate.StageTrigger <urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d> .

            <urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2> a nc:GateInputPin ;

            .

            <urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_c45d1b750dd2bb5187be00e619e0ed3a
    nl_question: Find the gate that uses input pin 9c6e15f8 and has a stage trigger
      of bb31f847-7509-4582-9721-6e50b525f55d.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:9c6e15f8-8edf-4aa1-8f52-fbd7322e4dd2
      $ObjectIdentity(1, nc:StageTrigger): urn:uuid:bb31f847-7509-4582-9721-6e50b525f55d
  - expected_steps:
    - - args:
          query: e2008e0d
        name: iri_discovery
        output: urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 69ed3bd9-c374-49ef-b186-d49d869940bb
        name: iri_discovery
        output: urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e> ;

            nc:Gate.StageTrigger <urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb> .

            <urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e> a nc:GateInputPin ;

            .

            <urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_bca7b1f7b0e0678ed7b85bae19be4692
    nl_question: What is the gate associated with input pin e2008e0d and stage trigger
      69ed3bd9-c374-49ef-b186-d49d869940bb?
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:e2008e0d-d944-4f8a-9de0-e6ed2cf7f82e
      $ObjectIdentity(1, nc:StageTrigger): urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb
  - expected_steps:
    - - args:
          query: 2bfb0a52-5634-478d-b795-6c88e0585c24
        name: iri_discovery
        output: urn:uuid:2bfb0a52-5634-478d-b795-6c88e0585c24
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: 69ed3bd9-c374-49ef-b186-d49d869940bb
        name: iri_discovery
        output: urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:2bfb0a52-5634-478d-b795-6c88e0585c24> ;

            nc:Gate.StageTrigger <urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb> .

            <urn:uuid:2bfb0a52-5634-478d-b795-6c88e0585c24> a nc:GateInputPin ;

            .

            <urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_15de820750871968ef5d74c82b4a771e
    nl_question: Identify the gate connected to input pin 2bfb0a52-5634-478d-b795-6c88e0585c24
      and triggered by 69ed3bd9-c374-49ef-b186-d49d869940bb.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:2bfb0a52-5634-478d-b795-6c88e0585c24
      $ObjectIdentity(1, nc:StageTrigger): urn:uuid:69ed3bd9-c374-49ef-b186-d49d869940bb
  - expected_steps:
    - - args:
          query: 793fb1c9
        name: iri_discovery
        output: urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: dcca331c
        name: iri_discovery
        output: urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> ;

            nc:Gate.StageTrigger <urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05> .

            <urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645> a nc:GateInputPin ;

            .

            <urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_cd1bac6792eb74d36f7a5b3d9a80290e
    nl_question: List the gate with the input pin 793fb1c9 and the stage trigger dcca331c.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:793fb1c9-75c7-4b5c-aca7-b4c3c7978645
      $ObjectIdentity(1, nc:StageTrigger): urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05
  - expected_steps:
    - - args:
          query: GP 300KRISTIAN-KVILLDAL FLOW DIR
        name: iri_discovery
        output: urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
        output_media_type: text/uri
        required_columns:
        - uri
      - args:
          query: ST1 S1 NorNed
        name: iri_discovery
        output: urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.GateInputPin <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> ;

            nc:Gate.StageTrigger <urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05> .

            <urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c> a nc:GateInputPin ;

            .

            <urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05> a nc:StageTrigger ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_bebeb5072fa57c3b0ed19892256f63d4
    nl_question: List the gate with the input pin GP 300KRISTIAN-KVILLDAL FLOW DIR
      and the stage trigger ST1 S1 NorNed.
    parameter_bindings:
      $ObjectIdentity(0, nc:GateInputPin): urn:uuid:9aaec7e7-e34e-439b-abe1-8cc14411e96c
      $ObjectIdentity(1, nc:StageTrigger): urn:uuid:dcca331c-3acd-446a-94ec-1c00b427af05
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.GateInputPin {$ObjectIdentity(0, nc:GateInputPin)} ;

    nc:Gate.StageTrigger {$ObjectIdentity(1, nc:StageTrigger)} .

    {$ObjectIdentity(0, nc:GateInputPin)} a nc:GateInputPin ;

    .

    {$ObjectIdentity(1, nc:StageTrigger)} a nc:StageTrigger ;

    .'
  template_id: template_list_351074317048a858b657142ecd94db51
- description: A graph pattern which lists all values for gate limited by parameters
    for pingate (https://cim4.eu/ns/nc#Gate.PinGate), stagetrigger (https://cim4.eu/ns/nc#Gate.StageTrigger)
    and by filter properties none.
  filters: []
  name: List gate by parameters pingate, stagetrigger and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.PinGate
    type: https://cim4.eu/ns/nc#PinGate
  - name: param_1
    path:
    - https://cim4.eu/ns/nc#Gate.StageTrigger
    type: https://cim4.eu/ns/nc#StageTrigger
  paraphrases:
  - What pin gate and stage trigger are associated with the gate $ObjectIdentity(0,
    nc:PinGate) and $ObjectIdentity(1, nc:StageTrigger)?
  - Identify the pin gate and stage trigger related to the gate associated with $ObjectIdentity(0,
    nc:PinGate) and $ObjectIdentity(1, nc:StageTrigger).
  - Which gate has the pin gate $ObjectIdentity(0, nc:PinGate) and the stage trigger
    $ObjectIdentity(1, nc:StageTrigger)?
  - List the gate that is linked to both pin gate $ObjectIdentity(0, nc:PinGate) and
    stage trigger $ObjectIdentity(1, nc:StageTrigger).
  - Find the gate corresponding to pin gate $ObjectIdentity(0, nc:PinGate) and stage
    trigger $ObjectIdentity(1, nc:StageTrigger).
  questions: []
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.PinGate {$ObjectIdentity(0, nc:PinGate)} ;

    nc:Gate.StageTrigger {$ObjectIdentity(1, nc:StageTrigger)} .

    {$ObjectIdentity(0, nc:PinGate)} a nc:PinGate ;

    .

    {$ObjectIdentity(1, nc:StageTrigger)} a nc:StageTrigger ;

    .'
  template_id: template_list_317d4a25783bedcefe45e59e6a8fee95
- description: A graph pattern which lists all values for gate limited by parameters
    for gate (https://cim4.eu/ns/nc#Gate.StageTrigger, https://cim4.eu/ns/nc#StageTrigger.GateTrigger)
    and by filter properties none.
  filters: []
  name: List gate by parameters gate and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.StageTrigger
    - https://cim4.eu/ns/nc#StageTrigger.GateTrigger
    type: https://cim4.eu/ns/nc#Gate
  paraphrases:
  - Which gates are triggered in the same stage as $ObjectIdentity(0, nc:Gate)?
  - Identify the gates that share the same stage trigger as $ObjectIdentity(0, nc:Gate).
  - What other gates are activated in the same stage with $ObjectIdentity(0, nc:Gate)?
  - List all gates that have the same stage trigger as $ObjectIdentity(0, nc:Gate).
  - What gates are associated with the same stage trigger as $ObjectIdentity(0, nc:Gate)?
  questions:
  - expected_steps:
    - - args:
          query: AND G 300KRISTIAN-ARENDAL
        name: iri_discovery
        output: urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger/nc:StageTrigger.GateTrigger <urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef>
            .

            <urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef> a nc:Gate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_5c741321d8150fdb0ff141742254e2b5
    nl_question: What other gates are activated in the same stage with AND G 300KRISTIAN-ARENDAL?
    parameter_bindings:
      $ObjectIdentity(0, nc:Gate): urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef
  - expected_steps:
    - - args:
          query: 1238f3dd-6c26-488b-9067-d885d80903ba
        name: iri_discovery
        output: urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger/nc:StageTrigger.GateTrigger <urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba>
            .

            <urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba> a nc:Gate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_85885aa306ca19ac8eb1ff205ebe9956
    nl_question: List all gates that have the same stage trigger as 1238f3dd-6c26-488b-9067-d885d80903ba.
    parameter_bindings:
      $ObjectIdentity(0, nc:Gate): urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba
  - expected_steps:
    - - args:
          query: OR G KRISTIAN300 VL
        name: iri_discovery
        output: urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger/nc:StageTrigger.GateTrigger <urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f>
            .

            <urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f> a nc:Gate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_c9fb538aff9c23f952e56235ea785b22
    nl_question: What other gates are activated in the same stage with OR G KRISTIAN300
      VL?
    parameter_bindings:
      $ObjectIdentity(0, nc:Gate): urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.StageTrigger/nc:StageTrigger.GateTrigger {$ObjectIdentity(0, nc:Gate)}
    .

    {$ObjectIdentity(0, nc:Gate)} a nc:Gate ;

    .'
  template_id: template_list_dc73159b8cd9e3aeaee76ecc321c8772
- description: A graph pattern which lists all values for gate limited by parameters
    for stage (https://cim4.eu/ns/nc#Gate.StageTrigger, https://cim4.eu/ns/nc#StageTrigger.Stage)
    and by filter properties none.
  filters: []
  name: List gate by parameters stage and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.StageTrigger
    - https://cim4.eu/ns/nc#StageTrigger.Stage
    type: https://cim4.eu/ns/nc#Stage
  paraphrases:
  - Which gates trigger the stage $ObjectIdentity(0, nc:Stage)?
  - Identify the gates associated with the trigger for stage $ObjectIdentity(0, nc:Stage).
  - What gates are linked to the stage trigger of $ObjectIdentity(0, nc:Stage)?
  - List all gates that activate the stage $ObjectIdentity(0, nc:Stage).
  - Which gates are connected to the stage $ObjectIdentity(0, nc:Stage) through a
    trigger?
  questions:
  - expected_steps:
    - - args:
          query: af418504-ec4e-4315-8faf-234557121d8d
        name: iri_discovery
        output: urn:uuid:af418504-ec4e-4315-8faf-234557121d8d
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger/nc:StageTrigger.Stage <urn:uuid:af418504-ec4e-4315-8faf-234557121d8d>
            .

            <urn:uuid:af418504-ec4e-4315-8faf-234557121d8d> a nc:Stage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:29aa9783-38df-407a-99dd-bf19ddba7fef"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_91cc28c105b9d5dd8c4fdae929bb0788
    nl_question: List all gates that activate the stage af418504-ec4e-4315-8faf-234557121d8d.
    parameter_bindings:
      $ObjectIdentity(0, nc:Stage): urn:uuid:af418504-ec4e-4315-8faf-234557121d8d
  - expected_steps:
    - - args:
          query: S1 NorNed
        name: iri_discovery
        output: urn:uuid:31095b78-d690-48ee-91b1-ef4bfecdb19e
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger/nc:StageTrigger.Stage <urn:uuid:31095b78-d690-48ee-91b1-ef4bfecdb19e>
            .

            <urn:uuid:31095b78-d690-48ee-91b1-ef4bfecdb19e> a nc:Stage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:1238f3dd-6c26-488b-9067-d885d80903ba"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_1e333b63bcdd5fa21f16f1b66467c1e1
    nl_question: Identify the gates associated with the trigger for stage S1 NorNed.
    parameter_bindings:
      $ObjectIdentity(0, nc:Stage): urn:uuid:31095b78-d690-48ee-91b1-ef4bfecdb19e
  - expected_steps:
    - - args:
          query: cdb8c7f6-28ff-4cec-ba1b-0992ec445e2f
        name: iri_discovery
        output: urn:uuid:cdb8c7f6-28ff-4cec-ba1b-0992ec445e2f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.StageTrigger/nc:StageTrigger.Stage <urn:uuid:cdb8c7f6-28ff-4cec-ba1b-0992ec445e2f>
            .

            <urn:uuid:cdb8c7f6-28ff-4cec-ba1b-0992ec445e2f> a nc:Stage ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:fe38ec20-3ab2-474d-bf37-2f9bcfd6747f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_27fe370c7822df707528cb75df9d6355
    nl_question: Identify the gates associated with the trigger for stage cdb8c7f6-28ff-4cec-ba1b-0992ec445e2f.
    parameter_bindings:
      $ObjectIdentity(0, nc:Stage): urn:uuid:cdb8c7f6-28ff-4cec-ba1b-0992ec445e2f
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.StageTrigger/nc:StageTrigger.Stage {$ObjectIdentity(0, nc:Stage)} .

    {$ObjectIdentity(0, nc:Stage)} a nc:Stage ;

    .'
  template_id: template_list_429f2df4b49ef472915a4053c00d103c
- description: A graph pattern which lists all values for gate limited by parameters
    for gate (https://cim4.eu/ns/nc#Gate.PinGate, https://cim4.eu/ns/nc#PinGate.GateOutput)
    and by filter properties none.
  filters: []
  name: List gate by parameters gate and filters none
  outputs:
  - name: gate
    type: nc:Gate
  parameters:
  - name: param_0
    path:
    - https://cim4.eu/ns/nc#Gate.PinGate
    - https://cim4.eu/ns/nc#PinGate.GateOutput
    type: https://cim4.eu/ns/nc#Gate
  paraphrases:
  - What gates are connected to the output of $ObjectIdentity(0, nc:Gate)?
  - Identify the gates receiving output from $ObjectIdentity(0, nc:Gate).
  - Which gates are connected via the GateOutput of $ObjectIdentity(0, nc:Gate)?
  - List all gates that are attached to the output of $ObjectIdentity(0, nc:Gate).
  - What gates does the output of $ObjectIdentity(0, nc:Gate) connect to?
  questions:
  - expected_steps:
    - - args:
          query: 6d3f27a0-6a15-4ab0-a267-ea750cf5025f
        name: iri_discovery
        output: urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.PinGate/nc:PinGate.GateOutput <urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f>
            .

            <urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f> a nc:Gate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_405b3e0f264158bedca95d349750f0df
    nl_question: Identify the gates receiving output from 6d3f27a0-6a15-4ab0-a267-ea750cf5025f.
    parameter_bindings:
      $ObjectIdentity(0, nc:Gate): urn:uuid:6d3f27a0-6a15-4ab0-a267-ea750cf5025f
  - expected_steps:
    - - args:
          query: 43e27a15-0192-4c01-bec3-413f770618c7
        name: iri_discovery
        output: urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7
        output_media_type: text/uri
        required_columns:
        - uri
    - - args:
          query: 'SELECT ?gate WHERE {

            ?gate a nc:Gate ;

            nc:Gate.PinGate/nc:PinGate.GateOutput <urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7>
            .

            <urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7> a nc:Gate ;

            .

            }'
        name: sparql_query
        output: '{"head": {"vars": ["gate"]}, "results": {"bindings": [{"gate": {"type":
          "uri", "value": "urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7"}}]}}'
        output_media_type: application/sparql-results+json
        required_columns:
        - gate
    id: question_1cef08166ed967e38aafed7b124d04ad
    nl_question: What gates does the output of 43e27a15-0192-4c01-bec3-413f770618c7
      connect to?
    parameter_bindings:
      $ObjectIdentity(0, nc:Gate): urn:uuid:43e27a15-0192-4c01-bec3-413f770618c7
  sparql_template: '?gate a nc:Gate ;

    nc:Gate.PinGate/nc:PinGate.GateOutput {$ObjectIdentity(0, nc:Gate)} .

    {$ObjectIdentity(0, nc:Gate)} a nc:Gate ;

    .'
  template_id: template_list_c745c07bc84fe6dcfe6dfbc99c666e19
- description: A graph pattern which lists all values for gate limited by parameters
    for none and by filter properties stagetrigger.armed.
  filters:
  - property: https://cim4.eu/ns/nc#StageTrigger.armed
    subject: nc:Gate
    type: xsd:boolean
  name: List gate by parameters none and filters stagetrigger.armed
  outputs:
  - name: gate
    type: nc:Gate
  parameters: []
  paraphrases:
  - Which gates have their Stage Trigger armed status set to $ValueFilter(nc:Gate,
    nc:StageTrigger.armed, xsd:boolean)?
  - Provide a list of gates where Stage Trigger is armed as $ValueFilter(nc:Gate,
    nc:StageTrigger.armed, xsd:boolean).
  - What gates have a Stage Trigger armed value of $ValueFilter(nc:Gate, nc:StageTrigger.armed,
    xsd:boolean)?
  - Identify the gates with their Stage Trigger armed status being $ValueFilter(nc:Gate,
    nc:StageTrigger.armed, xsd:boolean).
  - List all gates that have their Stage Trigger armed as $ValueFilter(nc:Gate, nc:StageTrigger.armed,
    xsd:boolean).
  questions: []
  sparql_template: '?gate a nc:Gate ;

    nc:StageTrigger.armed {$ValueFilter(nc:Gate, nc:StageTrigger.armed, xsd:boolean)}
    .'
  template_id: template_list_3bf44a149e3773716ff8c839bbe77e88
- description: A graph pattern which lists all values for gate limited by parameters
    for none and by filter properties stagetrigger.inservice.
  filters:
  - property: https://cim4.eu/ns/nc#StageTrigger.inService
    subject: nc:Gate
    type: xsd:boolean
  name: List gate by parameters none and filters stagetrigger.inservice
  outputs:
  - name: gate
    type: nc:Gate
  parameters: []
  paraphrases:
  - Which gates have an in-service status of $ValueFilter(nc:Gate, nc:StageTrigger.inService,
    xsd:boolean)?
  - List the gates where the in-service status is $ValueFilter(nc:Gate, nc:StageTrigger.inService,
    xsd:boolean).
  - Identify gates with an in-service trigger set to $ValueFilter(nc:Gate, nc:StageTrigger.inService,
    xsd:boolean).
  - What gates are currently in-service with the value $ValueFilter(nc:Gate, nc:StageTrigger.inService,
    xsd:boolean)?
  - Provide gates having an in-service status of $ValueFilter(nc:Gate, nc:StageTrigger.inService,
    xsd:boolean).
  questions: []
  sparql_template: '?gate a nc:Gate ;

    nc:StageTrigger.inService {$ValueFilter(nc:Gate, nc:StageTrigger.inService, xsd:boolean)}
    .'
  template_id: template_list_c921f247ddb1bf1cdee0eec936e1aff7
- description: A graph pattern which lists all values for gate limited by parameters
    for none and by filter properties stagetrigger.normalarmed.
  filters:
  - property: https://cim4.eu/ns/nc#StageTrigger.normalArmed
    subject: nc:Gate
    type: xsd:boolean
  name: List gate by parameters none and filters stagetrigger.normalarmed
  outputs:
  - name: gate
    type: nc:Gate
  parameters: []
  paraphrases:
  - Which gates have a normal armed stage trigger of $ValueFilter(nc:Gate, nc:StageTrigger.normalArmed,
    xsd:boolean)?
  - List the gates with a normal armed stage trigger set to $ValueFilter(nc:Gate,
    nc:StageTrigger.normalArmed, xsd:boolean).
  - What gates have their stage trigger normal armed as $ValueFilter(nc:Gate, nc:StageTrigger.normalArmed,
    xsd:boolean)?
  - Identify the gates with the normal armed stage trigger value of $ValueFilter(nc:Gate,
    nc:StageTrigger.normalArmed, xsd:boolean).
  - Provide the gates that have a normal armed stage trigger of $ValueFilter(nc:Gate,
    nc:StageTrigger.normalArmed, xsd:boolean).
  questions: []
  sparql_template: '?gate a nc:Gate ;

    nc:StageTrigger.normalArmed {$ValueFilter(nc:Gate, nc:StageTrigger.normalArmed,
    xsd:boolean)} .'
  template_id: template_list_30553f00363298b3d081c9fc1f09ec1e
- description: A graph pattern which lists all values for gate limited by parameters
    for none and by filter properties stagetrigger.priority.
  filters:
  - property: https://cim4.eu/ns/nc#StageTrigger.priority
    subject: nc:Gate
    type: xsd:integer
  name: List gate by parameters none and filters stagetrigger.priority
  outputs:
  - name: gate
    type: nc:Gate
  parameters: []
  paraphrases:
  - Which gates have a stage trigger priority of $ValueFilter(nc:Gate, nc:StageTrigger.priority,
    xsd:integer)?
  - List all gates with a stage trigger priority of $ValueFilter(nc:Gate, nc:StageTrigger.priority,
    xsd:integer).
  - Provide gates that have a priority of $ValueFilter(nc:Gate, nc:StageTrigger.priority,
    xsd:integer) for their stage trigger.
  - What gates have a stage trigger set to a priority of $ValueFilter(nc:Gate, nc:StageTrigger.priority,
    xsd:integer)?
  - Find gates with a stage trigger priority equal to $ValueFilter(nc:Gate, nc:StageTrigger.priority,
    xsd:integer).
  questions: []
  sparql_template: '?gate a nc:Gate ;

    nc:StageTrigger.priority {$ValueFilter(nc:Gate, nc:StageTrigger.priority, xsd:integer)}
    .'
  template_id: template_list_85e78f4c98d221462363e3151e6e687d
